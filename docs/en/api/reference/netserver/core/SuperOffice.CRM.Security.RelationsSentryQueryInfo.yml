### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Security.RelationsSentryQueryInfo
  commentId: T:SuperOffice.CRM.Security.RelationsSentryQueryInfo
  id: RelationsSentryQueryInfo
  parent: SuperOffice.CRM.Security
  children:
  - SuperOffice.CRM.Security.RelationsSentryQueryInfo.#ctor(SuperOffice.CRM.Data.RelationsTableInfo)
  - SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetOwnerTableCandidates
  - SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetUntypedMembers
  - SuperOffice.CRM.Security.RelationsSentryQueryInfo.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
  langs:
  - csharp
  - vb
  name: RelationsSentryQueryInfo
  nameWithType: RelationsSentryQueryInfo
  fullName: SuperOffice.CRM.Security.RelationsSentryQueryInfo
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: 'public class RelationsSentryQueryInfo : SentryQueryInfo<RelationsTableInfo>, IEnumerable<TableInfo>, IEnumerable'
    content.vb: >-
      Public Class RelationsSentryQueryInfo
          Inherits SentryQueryInfo(Of RelationsTableInfo)
          Implements IEnumerable(Of TableInfo), IEnumerable
  inheritance:
  - System.Object
  - SuperOffice.CRM.Security.SentryQueryInfo
  - SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  implements:
  - System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}
  - System.Collections.IEnumerable
  inheritedMembers:
  - SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  - SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.GetTypedMembers
  - SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.UpdateRelatedTableInfo``1(SuperOffice.Data.SQL.PrivateSelect,{T}@)
  - SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.ReplaceRelatedTableInstance(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo[])
  - SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.GetEnumerator
  - SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.ParentFields
  - SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.MainTable
  - SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.HasVisibleFor
  - SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.VisibleForTableInfo
  - SuperOffice.CRM.Security.SentryQueryInfo.System#Collections#IEnumerable#GetEnumerator
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Security.RelationsSentryQueryInfo.EnumUtil.MapEnums``2
  - System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.ForEach``1(System.Action{SuperOffice.Data.SQL.TableInfo})
  - System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  - System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.Batch``1(System.Int32)
  - System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.IndexOf``1(SuperOffice.Data.SQL.TableInfo,System.Int32)
  - System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.IndexOf``1(System.Func{SuperOffice.Data.SQL.TableInfo,System.Boolean},System.Int32)
  - System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.Permute``1(System.Int32)
  - System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.PermissiveToDictionary``3(System.Func{SuperOffice.Data.SQL.TableInfo,{K}},System.Func{SuperOffice.Data.SQL.TableInfo,{V}})
  - System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.PermissiveToDictionary``3(System.Func{SuperOffice.Data.SQL.TableInfo,{K}},System.Func{SuperOffice.Data.SQL.TableInfo,{V}},System.Collections.Generic.IEqualityComparer{{K}})
  - System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.GetDifferentCombinations``1(System.Int32)
  - System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.SuperOffice.Util.CollectionOps.AtLeastOne``1
  - SuperOffice.CRM.Security.RelationsSentryQueryInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Security.RelationsSentryQueryInfo.#ctor(SuperOffice.CRM.Data.RelationsTableInfo)
  commentId: M:SuperOffice.CRM.Security.RelationsSentryQueryInfo.#ctor(SuperOffice.CRM.Data.RelationsTableInfo)
  id: '#ctor(SuperOffice.CRM.Data.RelationsTableInfo)'
  parent: SuperOffice.CRM.Security.RelationsSentryQueryInfo
  langs:
  - csharp
  - vb
  name: RelationsSentryQueryInfo(RelationsTableInfo)
  nameWithType: RelationsSentryQueryInfo.RelationsSentryQueryInfo(RelationsTableInfo)
  fullName: SuperOffice.CRM.Security.RelationsSentryQueryInfo.RelationsSentryQueryInfo(SuperOffice.CRM.Data.RelationsTableInfo)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public RelationsSentryQueryInfo(RelationsTableInfo relationsTableInfo)
    parameters:
    - id: relationsTableInfo
      type: SuperOffice.CRM.Data.RelationsTableInfo
    content.vb: Public Sub New(relationsTableInfo As RelationsTableInfo)
  overload: SuperOffice.CRM.Security.RelationsSentryQueryInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetOwnerTableCandidates
  commentId: M:SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetOwnerTableCandidates
  id: GetOwnerTableCandidates
  parent: SuperOffice.CRM.Security.RelationsSentryQueryInfo
  langs:
  - csharp
  - vb
  name: GetOwnerTableCandidates()
  nameWithType: RelationsSentryQueryInfo.GetOwnerTableCandidates()
  fullName: SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetOwnerTableCandidates()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: protected override TableInfo[] GetOwnerTableCandidates()
    return:
      type: SuperOffice.Data.SQL.TableInfo[]
    content.vb: Protected Overrides Function GetOwnerTableCandidates As TableInfo()
  overridden: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.GetOwnerTableCandidates
  overload: SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetOwnerTableCandidates*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Security.RelationsSentryQueryInfo.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
  commentId: M:SuperOffice.CRM.Security.RelationsSentryQueryInfo.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
  id: UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
  parent: SuperOffice.CRM.Security.RelationsSentryQueryInfo
  langs:
  - csharp
  - vb
  name: UpdateTypedMembers(PrivateSelect)
  nameWithType: RelationsSentryQueryInfo.UpdateTypedMembers(PrivateSelect)
  fullName: SuperOffice.CRM.Security.RelationsSentryQueryInfo.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: protected override void UpdateTypedMembers(PrivateSelect sql)
    parameters:
    - id: sql
      type: SuperOffice.Data.SQL.PrivateSelect
    content.vb: Protected Overrides Sub UpdateTypedMembers(sql As PrivateSelect)
  overridden: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
  overload: SuperOffice.CRM.Security.RelationsSentryQueryInfo.UpdateTypedMembers*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetUntypedMembers
  commentId: M:SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetUntypedMembers
  id: GetUntypedMembers
  parent: SuperOffice.CRM.Security.RelationsSentryQueryInfo
  langs:
  - csharp
  - vb
  name: GetUntypedMembers()
  nameWithType: RelationsSentryQueryInfo.GetUntypedMembers()
  fullName: SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetUntypedMembers()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: protected override TableInfo[] GetUntypedMembers()
    return:
      type: SuperOffice.Data.SQL.TableInfo[]
    content.vb: Protected Overrides Function GetUntypedMembers As TableInfo()
  overridden: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.GetUntypedMembers
  overload: SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetUntypedMembers*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Security.SentryQueryInfo
  commentId: T:SuperOffice.CRM.Security.SentryQueryInfo
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: SentryQueryInfo
  nameWithType: SentryQueryInfo
  fullName: SuperOffice.CRM.Security.SentryQueryInfo
- uid: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  commentId: T:SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  parent: SuperOffice.CRM.Security
  definition: SuperOffice.CRM.Security.SentryQueryInfo`1
  name: SentryQueryInfo<RelationsTableInfo>
  nameWithType: SentryQueryInfo<RelationsTableInfo>
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>
  nameWithType.vb: SentryQueryInfo(Of RelationsTableInfo)
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo)
  name.vb: SentryQueryInfo(Of RelationsTableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1
    name: SentryQueryInfo
    nameWithType: SentryQueryInfo
    fullName: SuperOffice.CRM.Security.SentryQueryInfo
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.RelationsTableInfo
    name: RelationsTableInfo
    nameWithType: RelationsTableInfo
    fullName: SuperOffice.CRM.Data.RelationsTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1
    name: SentryQueryInfo
    nameWithType: SentryQueryInfo
    fullName: SuperOffice.CRM.Security.SentryQueryInfo
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.RelationsTableInfo
    name: RelationsTableInfo
    nameWithType: RelationsTableInfo
    fullName: SuperOffice.CRM.Data.RelationsTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TableInfo>
  nameWithType: IEnumerable<TableInfo>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.TableInfo>
  nameWithType.vb: IEnumerable(Of TableInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.TableInfo)
  name.vb: IEnumerable(Of TableInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  parent: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  definition: SuperOffice.CRM.Security.SentryQueryInfo`1.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  name: AnalyzeQuery(PrivateSelect)
  nameWithType: SentryQueryInfo<RelationsTableInfo>.AnalyzeQuery(PrivateSelect)
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  nameWithType.vb: SentryQueryInfo(Of RelationsTableInfo).AnalyzeQuery(PrivateSelect)
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
    name: AnalyzeQuery
    nameWithType: SentryQueryInfo<RelationsTableInfo>.AnalyzeQuery
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.AnalyzeQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
    name: AnalyzeQuery
    nameWithType: SentryQueryInfo(Of RelationsTableInfo).AnalyzeQuery
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).AnalyzeQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  definition: SuperOffice.CRM.Security.SentryQueryInfo`1.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  name: CanCoverTable(TableInfo)
  nameWithType: SentryQueryInfo<RelationsTableInfo>.CanCoverTable(TableInfo)
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  nameWithType.vb: SentryQueryInfo(Of RelationsTableInfo).CanCoverTable(TableInfo)
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
    name: CanCoverTable
    nameWithType: SentryQueryInfo<RelationsTableInfo>.CanCoverTable
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.CanCoverTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
    name: CanCoverTable
    nameWithType: SentryQueryInfo(Of RelationsTableInfo).CanCoverTable
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).CanCoverTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.GetTypedMembers
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.GetTypedMembers
  parent: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  definition: SuperOffice.CRM.Security.SentryQueryInfo`1.GetTypedMembers
  name: GetTypedMembers()
  nameWithType: SentryQueryInfo<RelationsTableInfo>.GetTypedMembers()
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.GetTypedMembers()
  nameWithType.vb: SentryQueryInfo(Of RelationsTableInfo).GetTypedMembers()
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).GetTypedMembers()
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetTypedMembers
    name: GetTypedMembers
    nameWithType: SentryQueryInfo<RelationsTableInfo>.GetTypedMembers
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.GetTypedMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetTypedMembers
    name: GetTypedMembers
    nameWithType: SentryQueryInfo(Of RelationsTableInfo).GetTypedMembers
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).GetTypedMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.UpdateRelatedTableInfo``1(SuperOffice.Data.SQL.PrivateSelect,{T}@)
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.UpdateRelatedTableInfo``1(SuperOffice.Data.SQL.PrivateSelect,``0@)
  parent: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  definition: SuperOffice.CRM.Security.SentryQueryInfo`1.UpdateRelatedTableInfo``1(SuperOffice.Data.SQL.PrivateSelect,``0@)
  name: UpdateRelatedTableInfo<T>(PrivateSelect, T)
  nameWithType: SentryQueryInfo<RelationsTableInfo>.UpdateRelatedTableInfo<T>(PrivateSelect, T)
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.UpdateRelatedTableInfo<T>(SuperOffice.Data.SQL.PrivateSelect, T)
  nameWithType.vb: SentryQueryInfo(Of RelationsTableInfo).UpdateRelatedTableInfo(Of T)(PrivateSelect, T)
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).UpdateRelatedTableInfo(Of T)(SuperOffice.Data.SQL.PrivateSelect, T)
  name.vb: UpdateRelatedTableInfo(Of T)(PrivateSelect, T)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.UpdateRelatedTableInfo``1(SuperOffice.Data.SQL.PrivateSelect,``0@)
    name: UpdateRelatedTableInfo<T>
    nameWithType: SentryQueryInfo<RelationsTableInfo>.UpdateRelatedTableInfo<T>
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.UpdateRelatedTableInfo<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.UpdateRelatedTableInfo``1(SuperOffice.Data.SQL.PrivateSelect,``0@)
    name: UpdateRelatedTableInfo(Of T)
    nameWithType: SentryQueryInfo(Of RelationsTableInfo).UpdateRelatedTableInfo(Of T)
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).UpdateRelatedTableInfo(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.ReplaceRelatedTableInstance(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo[])
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.ReplaceRelatedTableInstance(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo[])
  parent: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  definition: SuperOffice.CRM.Security.SentryQueryInfo`1.ReplaceRelatedTableInstance(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo[])
  name: ReplaceRelatedTableInstance(TableInfo, TableInfo, TableInfo[])
  nameWithType: SentryQueryInfo<RelationsTableInfo>.ReplaceRelatedTableInstance(TableInfo, TableInfo, TableInfo[])
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.ReplaceRelatedTableInstance(SuperOffice.Data.SQL.TableInfo, SuperOffice.Data.SQL.TableInfo, SuperOffice.Data.SQL.TableInfo[])
  nameWithType.vb: SentryQueryInfo(Of RelationsTableInfo).ReplaceRelatedTableInstance(TableInfo, TableInfo, TableInfo())
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).ReplaceRelatedTableInstance(SuperOffice.Data.SQL.TableInfo, SuperOffice.Data.SQL.TableInfo, SuperOffice.Data.SQL.TableInfo())
  name.vb: ReplaceRelatedTableInstance(TableInfo, TableInfo, TableInfo())
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.ReplaceRelatedTableInstance(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo[])
    name: ReplaceRelatedTableInstance
    nameWithType: SentryQueryInfo<RelationsTableInfo>.ReplaceRelatedTableInstance
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.ReplaceRelatedTableInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.ReplaceRelatedTableInstance(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo[])
    name: ReplaceRelatedTableInstance
    nameWithType: SentryQueryInfo(Of RelationsTableInfo).ReplaceRelatedTableInstance
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).ReplaceRelatedTableInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.GetEnumerator
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.GetEnumerator
  parent: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  definition: SuperOffice.CRM.Security.SentryQueryInfo`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: SentryQueryInfo<RelationsTableInfo>.GetEnumerator()
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.GetEnumerator()
  nameWithType.vb: SentryQueryInfo(Of RelationsTableInfo).GetEnumerator()
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).GetEnumerator()
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetEnumerator
    name: GetEnumerator
    nameWithType: SentryQueryInfo<RelationsTableInfo>.GetEnumerator
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetEnumerator
    name: GetEnumerator
    nameWithType: SentryQueryInfo(Of RelationsTableInfo).GetEnumerator
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.ParentFields
  commentId: P:SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.ParentFields
  parent: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  definition: SuperOffice.CRM.Security.SentryQueryInfo`1.ParentFields
  name: ParentFields
  nameWithType: SentryQueryInfo<RelationsTableInfo>.ParentFields
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.ParentFields
  nameWithType.vb: SentryQueryInfo(Of RelationsTableInfo).ParentFields
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).ParentFields
- uid: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.MainTable
  commentId: P:SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.MainTable
  parent: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  definition: SuperOffice.CRM.Security.SentryQueryInfo`1.MainTable
  name: MainTable
  nameWithType: SentryQueryInfo<RelationsTableInfo>.MainTable
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.MainTable
  nameWithType.vb: SentryQueryInfo(Of RelationsTableInfo).MainTable
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).MainTable
- uid: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.HasVisibleFor
  commentId: P:SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.HasVisibleFor
  parent: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  definition: SuperOffice.CRM.Security.SentryQueryInfo`1.HasVisibleFor
  name: HasVisibleFor
  nameWithType: SentryQueryInfo<RelationsTableInfo>.HasVisibleFor
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.HasVisibleFor
  nameWithType.vb: SentryQueryInfo(Of RelationsTableInfo).HasVisibleFor
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).HasVisibleFor
- uid: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.VisibleForTableInfo
  commentId: P:SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.VisibleForTableInfo
  parent: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  definition: SuperOffice.CRM.Security.SentryQueryInfo`1.VisibleForTableInfo
  name: VisibleForTableInfo
  nameWithType: SentryQueryInfo<RelationsTableInfo>.VisibleForTableInfo
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.VisibleForTableInfo
  nameWithType.vb: SentryQueryInfo(Of RelationsTableInfo).VisibleForTableInfo
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).VisibleForTableInfo
- uid: SuperOffice.CRM.Security.SentryQueryInfo.System#Collections#IEnumerable#GetEnumerator
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo.System#Collections#IEnumerable#GetEnumerator
  parent: SuperOffice.CRM.Security.SentryQueryInfo
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: SentryQueryInfo.IEnumerable.GetEnumerator()
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: SentryQueryInfo.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: SentryQueryInfo.IEnumerable.GetEnumerator
    fullName: SuperOffice.CRM.Security.SentryQueryInfo.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: SentryQueryInfo.System.Collections.IEnumerable.GetEnumerator
    fullName: SuperOffice.CRM.Security.SentryQueryInfo.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.RelationsSentryQueryInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<RelationsSentryQueryInfo, To>()
  nameWithType: EnumUtil.MapEnums<RelationsSentryQueryInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Security.RelationsSentryQueryInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of RelationsSentryQueryInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Security.RelationsSentryQueryInfo, To)()
  name.vb: MapEnums(Of RelationsSentryQueryInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<RelationsSentryQueryInfo, To>
    nameWithType: EnumUtil.MapEnums<RelationsSentryQueryInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Security.RelationsSentryQueryInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of RelationsSentryQueryInfo, To)
    nameWithType: EnumUtil.MapEnums(Of RelationsSentryQueryInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Security.RelationsSentryQueryInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.ForEach``1(System.Action{SuperOffice.Data.SQL.TableInfo})
  commentId: M:IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  name: ForEach<TableInfo>(Action<TableInfo>)
  nameWithType: IEnumerableExtensions.ForEach<TableInfo>(Action<TableInfo>)
  fullName: IEnumerableExtensions.ForEach<SuperOffice.Data.SQL.TableInfo>(System.Action<SuperOffice.Data.SQL.TableInfo>)
  nameWithType.vb: IEnumerableExtensions.ForEach(Of TableInfo)(Action(Of TableInfo))
  fullName.vb: IEnumerableExtensions.ForEach(Of SuperOffice.Data.SQL.TableInfo)(System.Action(Of SuperOffice.Data.SQL.TableInfo))
  name.vb: ForEach(Of TableInfo)(Action(Of TableInfo))
  spec.csharp:
  - uid: IEnumerableExtensions.ForEach``1(System.Action{``0})
    name: ForEach<TableInfo>
    nameWithType: IEnumerableExtensions.ForEach<TableInfo>
    fullName: IEnumerableExtensions.ForEach<SuperOffice.Data.SQL.TableInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.ForEach``1(System.Action{``0})
    name: ForEach(Of TableInfo)
    nameWithType: IEnumerableExtensions.ForEach(Of TableInfo)
    fullName: IEnumerableExtensions.ForEach(Of SuperOffice.Data.SQL.TableInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  commentId: M:IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: ContainsAny<TableInfo>(IEnumerable<TableInfo>)
  nameWithType: IEnumerableExtensions.ContainsAny<TableInfo>(IEnumerable<TableInfo>)
  fullName: IEnumerableExtensions.ContainsAny<SuperOffice.Data.SQL.TableInfo>(System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.TableInfo>)
  nameWithType.vb: IEnumerableExtensions.ContainsAny(Of TableInfo)(IEnumerable(Of TableInfo))
  fullName.vb: IEnumerableExtensions.ContainsAny(Of SuperOffice.Data.SQL.TableInfo)(System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.TableInfo))
  name.vb: ContainsAny(Of TableInfo)(IEnumerable(Of TableInfo))
  spec.csharp:
  - uid: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0})
    name: ContainsAny<TableInfo>
    nameWithType: IEnumerableExtensions.ContainsAny<TableInfo>
    fullName: IEnumerableExtensions.ContainsAny<SuperOffice.Data.SQL.TableInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0})
    name: ContainsAny(Of TableInfo)
    nameWithType: IEnumerableExtensions.ContainsAny(Of TableInfo)
    fullName: IEnumerableExtensions.ContainsAny(Of SuperOffice.Data.SQL.TableInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.Batch``1(System.Int32)
  commentId: M:IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: Batch<TableInfo>(Int32)
  nameWithType: IEnumerableExtensions.Batch<TableInfo>(Int32)
  fullName: IEnumerableExtensions.Batch<SuperOffice.Data.SQL.TableInfo>(System.Int32)
  nameWithType.vb: IEnumerableExtensions.Batch(Of TableInfo)(Int32)
  fullName.vb: IEnumerableExtensions.Batch(Of SuperOffice.Data.SQL.TableInfo)(System.Int32)
  name.vb: Batch(Of TableInfo)(Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.Batch``1(System.Int32)
    name: Batch<TableInfo>
    nameWithType: IEnumerableExtensions.Batch<TableInfo>
    fullName: IEnumerableExtensions.Batch<SuperOffice.Data.SQL.TableInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.Batch``1(System.Int32)
    name: Batch(Of TableInfo)
    nameWithType: IEnumerableExtensions.Batch(Of TableInfo)
    fullName: IEnumerableExtensions.Batch(Of SuperOffice.Data.SQL.TableInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.IndexOf``1(SuperOffice.Data.SQL.TableInfo,System.Int32)
  commentId: M:IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
  name: IndexOf<TableInfo>(TableInfo, Int32)
  nameWithType: IEnumerableExtensions.IndexOf<TableInfo>(TableInfo, Int32)
  fullName: IEnumerableExtensions.IndexOf<SuperOffice.Data.SQL.TableInfo>(SuperOffice.Data.SQL.TableInfo, System.Int32)
  nameWithType.vb: IEnumerableExtensions.IndexOf(Of TableInfo)(TableInfo, Int32)
  fullName.vb: IEnumerableExtensions.IndexOf(Of SuperOffice.Data.SQL.TableInfo)(SuperOffice.Data.SQL.TableInfo, System.Int32)
  name.vb: IndexOf(Of TableInfo)(TableInfo, Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.IndexOf``1(``0,System.Int32)
    name: IndexOf<TableInfo>
    nameWithType: IEnumerableExtensions.IndexOf<TableInfo>
    fullName: IEnumerableExtensions.IndexOf<SuperOffice.Data.SQL.TableInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.IndexOf``1(``0,System.Int32)
    name: IndexOf(Of TableInfo)
    nameWithType: IEnumerableExtensions.IndexOf(Of TableInfo)
    fullName: IEnumerableExtensions.IndexOf(Of SuperOffice.Data.SQL.TableInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.IndexOf``1(System.Func{SuperOffice.Data.SQL.TableInfo,System.Boolean},System.Int32)
  commentId: M:IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
  name: IndexOf<TableInfo>(Func<TableInfo, Boolean>, Int32)
  nameWithType: IEnumerableExtensions.IndexOf<TableInfo>(Func<TableInfo, Boolean>, Int32)
  fullName: IEnumerableExtensions.IndexOf<SuperOffice.Data.SQL.TableInfo>(System.Func<SuperOffice.Data.SQL.TableInfo, System.Boolean>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.IndexOf(Of TableInfo)(Func(Of TableInfo, Boolean), Int32)
  fullName.vb: IEnumerableExtensions.IndexOf(Of SuperOffice.Data.SQL.TableInfo)(System.Func(Of SuperOffice.Data.SQL.TableInfo, System.Boolean), System.Int32)
  name.vb: IndexOf(Of TableInfo)(Func(Of TableInfo, Boolean), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.IndexOf``1(System.Func{``0,System.Boolean},System.Int32)
    name: IndexOf<TableInfo>
    nameWithType: IEnumerableExtensions.IndexOf<TableInfo>
    fullName: IEnumerableExtensions.IndexOf<SuperOffice.Data.SQL.TableInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.IndexOf``1(System.Func{``0,System.Boolean},System.Int32)
    name: IndexOf(Of TableInfo)
    nameWithType: IEnumerableExtensions.IndexOf(Of TableInfo)
    fullName: IEnumerableExtensions.IndexOf(Of SuperOffice.Data.SQL.TableInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.Permute``1(System.Int32)
  commentId: M:IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: Permute<TableInfo>(Int32)
  nameWithType: IEnumerableExtensions.Permute<TableInfo>(Int32)
  fullName: IEnumerableExtensions.Permute<SuperOffice.Data.SQL.TableInfo>(System.Int32)
  nameWithType.vb: IEnumerableExtensions.Permute(Of TableInfo)(Int32)
  fullName.vb: IEnumerableExtensions.Permute(Of SuperOffice.Data.SQL.TableInfo)(System.Int32)
  name.vb: Permute(Of TableInfo)(Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.Permute``1(System.Int32)
    name: Permute<TableInfo>
    nameWithType: IEnumerableExtensions.Permute<TableInfo>
    fullName: IEnumerableExtensions.Permute<SuperOffice.Data.SQL.TableInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.Permute``1(System.Int32)
    name: Permute(Of TableInfo)
    nameWithType: IEnumerableExtensions.Permute(Of TableInfo)
    fullName: IEnumerableExtensions.Permute(Of SuperOffice.Data.SQL.TableInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.PermissiveToDictionary``3(System.Func{SuperOffice.Data.SQL.TableInfo,{K}},System.Func{SuperOffice.Data.SQL.TableInfo,{V}})
  commentId: M:IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: PermissiveToDictionary<TableInfo, K, V>(Func<TableInfo, K>, Func<TableInfo, V>)
  nameWithType: IEnumerableExtensions.PermissiveToDictionary<TableInfo, K, V>(Func<TableInfo, K>, Func<TableInfo, V>)
  fullName: IEnumerableExtensions.PermissiveToDictionary<SuperOffice.Data.SQL.TableInfo, K, V>(System.Func<SuperOffice.Data.SQL.TableInfo, K>, System.Func<SuperOffice.Data.SQL.TableInfo, V>)
  nameWithType.vb: IEnumerableExtensions.PermissiveToDictionary(Of TableInfo, K, V)(Func(Of TableInfo, K), Func(Of TableInfo, V))
  fullName.vb: IEnumerableExtensions.PermissiveToDictionary(Of SuperOffice.Data.SQL.TableInfo, K, V)(System.Func(Of SuperOffice.Data.SQL.TableInfo, K), System.Func(Of SuperOffice.Data.SQL.TableInfo, V))
  name.vb: PermissiveToDictionary(Of TableInfo, K, V)(Func(Of TableInfo, K), Func(Of TableInfo, V))
  spec.csharp:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: PermissiveToDictionary<TableInfo, K, V>
    nameWithType: IEnumerableExtensions.PermissiveToDictionary<TableInfo, K, V>
    fullName: IEnumerableExtensions.PermissiveToDictionary<SuperOffice.Data.SQL.TableInfo, K, V>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: PermissiveToDictionary(Of TableInfo, K, V)
    nameWithType: IEnumerableExtensions.PermissiveToDictionary(Of TableInfo, K, V)
    fullName: IEnumerableExtensions.PermissiveToDictionary(Of SuperOffice.Data.SQL.TableInfo, K, V)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.PermissiveToDictionary``3(System.Func{SuperOffice.Data.SQL.TableInfo,{K}},System.Func{SuperOffice.Data.SQL.TableInfo,{V}},System.Collections.Generic.IEqualityComparer{{K}})
  commentId: M:IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: PermissiveToDictionary<TableInfo, K, V>(Func<TableInfo, K>, Func<TableInfo, V>, IEqualityComparer<K>)
  nameWithType: IEnumerableExtensions.PermissiveToDictionary<TableInfo, K, V>(Func<TableInfo, K>, Func<TableInfo, V>, IEqualityComparer<K>)
  fullName: IEnumerableExtensions.PermissiveToDictionary<SuperOffice.Data.SQL.TableInfo, K, V>(System.Func<SuperOffice.Data.SQL.TableInfo, K>, System.Func<SuperOffice.Data.SQL.TableInfo, V>, System.Collections.Generic.IEqualityComparer<K>)
  nameWithType.vb: IEnumerableExtensions.PermissiveToDictionary(Of TableInfo, K, V)(Func(Of TableInfo, K), Func(Of TableInfo, V), IEqualityComparer(Of K))
  fullName.vb: IEnumerableExtensions.PermissiveToDictionary(Of SuperOffice.Data.SQL.TableInfo, K, V)(System.Func(Of SuperOffice.Data.SQL.TableInfo, K), System.Func(Of SuperOffice.Data.SQL.TableInfo, V), System.Collections.Generic.IEqualityComparer(Of K))
  name.vb: PermissiveToDictionary(Of TableInfo, K, V)(Func(Of TableInfo, K), Func(Of TableInfo, V), IEqualityComparer(Of K))
  spec.csharp:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: PermissiveToDictionary<TableInfo, K, V>
    nameWithType: IEnumerableExtensions.PermissiveToDictionary<TableInfo, K, V>
    fullName: IEnumerableExtensions.PermissiveToDictionary<SuperOffice.Data.SQL.TableInfo, K, V>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: PermissiveToDictionary(Of TableInfo, K, V)
    nameWithType: IEnumerableExtensions.PermissiveToDictionary(Of TableInfo, K, V)
    fullName: IEnumerableExtensions.PermissiveToDictionary(Of SuperOffice.Data.SQL.TableInfo, K, V)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.IEnumerableExtensions.GetDifferentCombinations``1(System.Int32)
  commentId: M:IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: GetDifferentCombinations<TableInfo>(Int32)
  nameWithType: IEnumerableExtensions.GetDifferentCombinations<TableInfo>(Int32)
  fullName: IEnumerableExtensions.GetDifferentCombinations<SuperOffice.Data.SQL.TableInfo>(System.Int32)
  nameWithType.vb: IEnumerableExtensions.GetDifferentCombinations(Of TableInfo)(Int32)
  fullName.vb: IEnumerableExtensions.GetDifferentCombinations(Of SuperOffice.Data.SQL.TableInfo)(System.Int32)
  name.vb: GetDifferentCombinations(Of TableInfo)(Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.GetDifferentCombinations``1(System.Int32)
    name: GetDifferentCombinations<TableInfo>
    nameWithType: IEnumerableExtensions.GetDifferentCombinations<TableInfo>
    fullName: IEnumerableExtensions.GetDifferentCombinations<SuperOffice.Data.SQL.TableInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.GetDifferentCombinations``1(System.Int32)
    name: GetDifferentCombinations(Of TableInfo)
    nameWithType: IEnumerableExtensions.GetDifferentCombinations(Of TableInfo)
    fullName: IEnumerableExtensions.GetDifferentCombinations(Of SuperOffice.Data.SQL.TableInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}.SuperOffice.Util.CollectionOps.AtLeastOne``1
  commentId: M:SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
  parent: SuperOffice.Util.CollectionOps
  definition: SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
  name: AtLeastOne<TableInfo>()
  nameWithType: CollectionOps.AtLeastOne<TableInfo>()
  fullName: SuperOffice.Util.CollectionOps.AtLeastOne<SuperOffice.Data.SQL.TableInfo>()
  nameWithType.vb: CollectionOps.AtLeastOne(Of TableInfo)()
  fullName.vb: SuperOffice.Util.CollectionOps.AtLeastOne(Of SuperOffice.Data.SQL.TableInfo)()
  name.vb: AtLeastOne(Of TableInfo)()
  spec.csharp:
  - uid: SuperOffice.Util.CollectionOps.AtLeastOne``1
    name: AtLeastOne<TableInfo>
    nameWithType: CollectionOps.AtLeastOne<TableInfo>
    fullName: SuperOffice.Util.CollectionOps.AtLeastOne<SuperOffice.Data.SQL.TableInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.CollectionOps.AtLeastOne``1
    name: AtLeastOne(Of TableInfo)
    nameWithType: CollectionOps.AtLeastOne(Of TableInfo)
    fullName: SuperOffice.Util.CollectionOps.AtLeastOne(Of SuperOffice.Data.SQL.TableInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.RelationsSentryQueryInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<RelationsSentryQueryInfo, To>()
  nameWithType: Converters.MapEnums<RelationsSentryQueryInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Security.RelationsSentryQueryInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of RelationsSentryQueryInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Security.RelationsSentryQueryInfo, To)()
  name.vb: MapEnums(Of RelationsSentryQueryInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<RelationsSentryQueryInfo, To>
    nameWithType: Converters.MapEnums<RelationsSentryQueryInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Security.RelationsSentryQueryInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of RelationsSentryQueryInfo, To)
    nameWithType: Converters.MapEnums(Of RelationsSentryQueryInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Security.RelationsSentryQueryInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Security.SentryQueryInfo`1
  commentId: T:SuperOffice.CRM.Security.SentryQueryInfo`1
  isExternal: true
  name: SentryQueryInfo<TMainTable>
  nameWithType: SentryQueryInfo<TMainTable>
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>
  nameWithType.vb: SentryQueryInfo(Of TMainTable)
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable)
  name.vb: SentryQueryInfo(Of TMainTable)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1
    name: SentryQueryInfo
    nameWithType: SentryQueryInfo
    fullName: SuperOffice.CRM.Security.SentryQueryInfo
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TMainTable
    nameWithType: TMainTable
    fullName: TMainTable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1
    name: SentryQueryInfo
    nameWithType: SentryQueryInfo
    fullName: SuperOffice.CRM.Security.SentryQueryInfo
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TMainTable
    nameWithType: TMainTable
    fullName: TMainTable
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: SuperOffice.CRM.Security.SentryQueryInfo`1.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo`1.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  isExternal: true
  name: AnalyzeQuery(PrivateSelect)
  nameWithType: SentryQueryInfo<TMainTable>.AnalyzeQuery(PrivateSelect)
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  nameWithType.vb: SentryQueryInfo(Of TMainTable).AnalyzeQuery(PrivateSelect)
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
    name: AnalyzeQuery
    nameWithType: SentryQueryInfo<TMainTable>.AnalyzeQuery
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.AnalyzeQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
    name: AnalyzeQuery
    nameWithType: SentryQueryInfo(Of TMainTable).AnalyzeQuery
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).AnalyzeQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryInfo`1.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo`1.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  isExternal: true
  name: CanCoverTable(TableInfo)
  nameWithType: SentryQueryInfo<TMainTable>.CanCoverTable(TableInfo)
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  nameWithType.vb: SentryQueryInfo(Of TMainTable).CanCoverTable(TableInfo)
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
    name: CanCoverTable
    nameWithType: SentryQueryInfo<TMainTable>.CanCoverTable
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.CanCoverTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
    name: CanCoverTable
    nameWithType: SentryQueryInfo(Of TMainTable).CanCoverTable
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).CanCoverTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetTypedMembers
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo`1.GetTypedMembers
  isExternal: true
  name: GetTypedMembers()
  nameWithType: SentryQueryInfo<TMainTable>.GetTypedMembers()
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.GetTypedMembers()
  nameWithType.vb: SentryQueryInfo(Of TMainTable).GetTypedMembers()
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).GetTypedMembers()
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetTypedMembers
    name: GetTypedMembers
    nameWithType: SentryQueryInfo<TMainTable>.GetTypedMembers
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.GetTypedMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetTypedMembers
    name: GetTypedMembers
    nameWithType: SentryQueryInfo(Of TMainTable).GetTypedMembers
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).GetTypedMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryInfo`1.UpdateRelatedTableInfo``1(SuperOffice.Data.SQL.PrivateSelect,``0@)
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo`1.UpdateRelatedTableInfo``1(SuperOffice.Data.SQL.PrivateSelect,``0@)
  isExternal: true
  name: UpdateRelatedTableInfo<T>(PrivateSelect, T)
  nameWithType: SentryQueryInfo<TMainTable>.UpdateRelatedTableInfo<T>(PrivateSelect, T)
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.UpdateRelatedTableInfo<T>(SuperOffice.Data.SQL.PrivateSelect, T)
  nameWithType.vb: SentryQueryInfo(Of TMainTable).UpdateRelatedTableInfo(Of T)(PrivateSelect, T)
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).UpdateRelatedTableInfo(Of T)(SuperOffice.Data.SQL.PrivateSelect, T)
  name.vb: UpdateRelatedTableInfo(Of T)(PrivateSelect, T)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.UpdateRelatedTableInfo``1(SuperOffice.Data.SQL.PrivateSelect,``0@)
    name: UpdateRelatedTableInfo<T>
    nameWithType: SentryQueryInfo<TMainTable>.UpdateRelatedTableInfo<T>
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.UpdateRelatedTableInfo<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.UpdateRelatedTableInfo``1(SuperOffice.Data.SQL.PrivateSelect,``0@)
    name: UpdateRelatedTableInfo(Of T)
    nameWithType: SentryQueryInfo(Of TMainTable).UpdateRelatedTableInfo(Of T)
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).UpdateRelatedTableInfo(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryInfo`1.ReplaceRelatedTableInstance(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo[])
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo`1.ReplaceRelatedTableInstance(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo[])
  isExternal: true
  name: ReplaceRelatedTableInstance(TableInfo, TableInfo, TableInfo[])
  nameWithType: SentryQueryInfo<TMainTable>.ReplaceRelatedTableInstance(TableInfo, TableInfo, TableInfo[])
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.ReplaceRelatedTableInstance(SuperOffice.Data.SQL.TableInfo, SuperOffice.Data.SQL.TableInfo, SuperOffice.Data.SQL.TableInfo[])
  nameWithType.vb: SentryQueryInfo(Of TMainTable).ReplaceRelatedTableInstance(TableInfo, TableInfo, TableInfo())
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).ReplaceRelatedTableInstance(SuperOffice.Data.SQL.TableInfo, SuperOffice.Data.SQL.TableInfo, SuperOffice.Data.SQL.TableInfo())
  name.vb: ReplaceRelatedTableInstance(TableInfo, TableInfo, TableInfo())
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.ReplaceRelatedTableInstance(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo[])
    name: ReplaceRelatedTableInstance
    nameWithType: SentryQueryInfo<TMainTable>.ReplaceRelatedTableInstance
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.ReplaceRelatedTableInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.ReplaceRelatedTableInstance(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.SQL.TableInfo[])
    name: ReplaceRelatedTableInstance
    nameWithType: SentryQueryInfo(Of TMainTable).ReplaceRelatedTableInstance
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).ReplaceRelatedTableInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetEnumerator
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: SentryQueryInfo<TMainTable>.GetEnumerator()
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.GetEnumerator()
  nameWithType.vb: SentryQueryInfo(Of TMainTable).GetEnumerator()
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).GetEnumerator()
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetEnumerator
    name: GetEnumerator
    nameWithType: SentryQueryInfo<TMainTable>.GetEnumerator
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetEnumerator
    name: GetEnumerator
    nameWithType: SentryQueryInfo(Of TMainTable).GetEnumerator
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryInfo`1.ParentFields
  commentId: P:SuperOffice.CRM.Security.SentryQueryInfo`1.ParentFields
  isExternal: true
  name: ParentFields
  nameWithType: SentryQueryInfo<TMainTable>.ParentFields
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.ParentFields
  nameWithType.vb: SentryQueryInfo(Of TMainTable).ParentFields
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).ParentFields
- uid: SuperOffice.CRM.Security.SentryQueryInfo`1.MainTable
  commentId: P:SuperOffice.CRM.Security.SentryQueryInfo`1.MainTable
  isExternal: true
  name: MainTable
  nameWithType: SentryQueryInfo<TMainTable>.MainTable
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.MainTable
  nameWithType.vb: SentryQueryInfo(Of TMainTable).MainTable
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).MainTable
- uid: SuperOffice.CRM.Security.SentryQueryInfo`1.HasVisibleFor
  commentId: P:SuperOffice.CRM.Security.SentryQueryInfo`1.HasVisibleFor
  isExternal: true
  name: HasVisibleFor
  nameWithType: SentryQueryInfo<TMainTable>.HasVisibleFor
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.HasVisibleFor
  nameWithType.vb: SentryQueryInfo(Of TMainTable).HasVisibleFor
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).HasVisibleFor
- uid: SuperOffice.CRM.Security.SentryQueryInfo`1.VisibleForTableInfo
  commentId: P:SuperOffice.CRM.Security.SentryQueryInfo`1.VisibleForTableInfo
  isExternal: true
  name: VisibleForTableInfo
  nameWithType: SentryQueryInfo<TMainTable>.VisibleForTableInfo
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.VisibleForTableInfo
  nameWithType.vb: SentryQueryInfo(Of TMainTable).VisibleForTableInfo
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).VisibleForTableInfo
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  commentId: M:IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  isExternal: true
  name: ForEach<T>(IEnumerable<T>, Action<T>)
  nameWithType: IEnumerableExtensions.ForEach<T>(IEnumerable<T>, Action<T>)
  fullName: IEnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)
  nameWithType.vb: IEnumerableExtensions.ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  fullName.vb: IEnumerableExtensions.ForEach(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of T))
  name.vb: ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  spec.csharp:
  - uid: IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach<T>
    nameWithType: IEnumerableExtensions.ForEach<T>
    fullName: IEnumerableExtensions.ForEach<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach(Of T)
    nameWithType: IEnumerableExtensions.ForEach(Of T)
    fullName: IEnumerableExtensions.ForEach(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions
  commentId: T:IEnumerableExtensions
  isExternal: true
  name: IEnumerableExtensions
  nameWithType: IEnumerableExtensions
  fullName: IEnumerableExtensions
- uid: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: ContainsAny<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType: IEnumerableExtensions.ContainsAny<T>(IEnumerable<T>, IEnumerable<T>)
  fullName: IEnumerableExtensions.ContainsAny<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: IEnumerableExtensions.ContainsAny(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName.vb: IEnumerableExtensions.ContainsAny(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: ContainsAny(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  spec.csharp:
  - uid: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: ContainsAny<T>
    nameWithType: IEnumerableExtensions.ContainsAny<T>
    fullName: IEnumerableExtensions.ContainsAny<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: ContainsAny(Of T)
    nameWithType: IEnumerableExtensions.ContainsAny(Of T)
    fullName: IEnumerableExtensions.ContainsAny(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  commentId: M:IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: Batch<T>(IEnumerable<T>, Int32)
  nameWithType: IEnumerableExtensions.Batch<T>(IEnumerable<T>, Int32)
  fullName: IEnumerableExtensions.Batch<T>(System.Collections.Generic.IEnumerable<T>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.Batch(Of T)(IEnumerable(Of T), Int32)
  fullName.vb: IEnumerableExtensions.Batch(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  name.vb: Batch(Of T)(IEnumerable(Of T), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Batch<T>
    nameWithType: IEnumerableExtensions.Batch<T>
    fullName: IEnumerableExtensions.Batch<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Batch(Of T)
    nameWithType: IEnumerableExtensions.Batch(Of T)
    fullName: IEnumerableExtensions.Batch(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
  commentId: M:IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
  isExternal: true
  name: IndexOf<T>(IEnumerable<T>, T, Int32)
  nameWithType: IEnumerableExtensions.IndexOf<T>(IEnumerable<T>, T, Int32)
  fullName: IEnumerableExtensions.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, T, System.Int32)
  nameWithType.vb: IEnumerableExtensions.IndexOf(Of T)(IEnumerable(Of T), T, Int32)
  fullName.vb: IEnumerableExtensions.IndexOf(Of T)(System.Collections.Generic.IEnumerable(Of T), T, System.Int32)
  name.vb: IndexOf(Of T)(IEnumerable(Of T), T, Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
    name: IndexOf<T>
    nameWithType: IEnumerableExtensions.IndexOf<T>
    fullName: IEnumerableExtensions.IndexOf<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
    name: IndexOf(Of T)
    nameWithType: IEnumerableExtensions.IndexOf(Of T)
    fullName: IEnumerableExtensions.IndexOf(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
  commentId: M:IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
  isExternal: true
  name: IndexOf<T>(IEnumerable<T>, Func<T, Boolean>, Int32)
  nameWithType: IEnumerableExtensions.IndexOf<T>(IEnumerable<T>, Func<T, Boolean>, Int32)
  fullName: IEnumerableExtensions.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Boolean>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.IndexOf(Of T)(IEnumerable(Of T), Func(Of T, Boolean), Int32)
  fullName.vb: IEnumerableExtensions.IndexOf(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Boolean), System.Int32)
  name.vb: IndexOf(Of T)(IEnumerable(Of T), Func(Of T, Boolean), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
    name: IndexOf<T>
    nameWithType: IEnumerableExtensions.IndexOf<T>
    fullName: IEnumerableExtensions.IndexOf<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
    name: IndexOf(Of T)
    nameWithType: IEnumerableExtensions.IndexOf(Of T)
    fullName: IEnumerableExtensions.IndexOf(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  commentId: M:IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: Permute<T>(IEnumerable<T>, Int32)
  nameWithType: IEnumerableExtensions.Permute<T>(IEnumerable<T>, Int32)
  fullName: IEnumerableExtensions.Permute<T>(System.Collections.Generic.IEnumerable<T>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.Permute(Of T)(IEnumerable(Of T), Int32)
  fullName.vb: IEnumerableExtensions.Permute(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  name.vb: Permute(Of T)(IEnumerable(Of T), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Permute<T>
    nameWithType: IEnumerableExtensions.Permute<T>
    fullName: IEnumerableExtensions.Permute<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Permute(Of T)
    nameWithType: IEnumerableExtensions.Permute(Of T)
    fullName: IEnumerableExtensions.Permute(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: PermissiveToDictionary<T, K, V>(IEnumerable<T>, Func<T, K>, Func<T, V>)
  nameWithType: IEnumerableExtensions.PermissiveToDictionary<T, K, V>(IEnumerable<T>, Func<T, K>, Func<T, V>)
  fullName: IEnumerableExtensions.PermissiveToDictionary<T, K, V>(System.Collections.Generic.IEnumerable<T>, System.Func<T, K>, System.Func<T, V>)
  nameWithType.vb: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)(IEnumerable(Of T), Func(Of T, K), Func(Of T, V))
  fullName.vb: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, K), System.Func(Of T, V))
  name.vb: PermissiveToDictionary(Of T, K, V)(IEnumerable(Of T), Func(Of T, K), Func(Of T, V))
  spec.csharp:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: PermissiveToDictionary<T, K, V>
    nameWithType: IEnumerableExtensions.PermissiveToDictionary<T, K, V>
    fullName: IEnumerableExtensions.PermissiveToDictionary<T, K, V>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: PermissiveToDictionary(Of T, K, V)
    nameWithType: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)
    fullName: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: PermissiveToDictionary<T, K, V>(IEnumerable<T>, Func<T, K>, Func<T, V>, IEqualityComparer<K>)
  nameWithType: IEnumerableExtensions.PermissiveToDictionary<T, K, V>(IEnumerable<T>, Func<T, K>, Func<T, V>, IEqualityComparer<K>)
  fullName: IEnumerableExtensions.PermissiveToDictionary<T, K, V>(System.Collections.Generic.IEnumerable<T>, System.Func<T, K>, System.Func<T, V>, System.Collections.Generic.IEqualityComparer<K>)
  nameWithType.vb: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)(IEnumerable(Of T), Func(Of T, K), Func(Of T, V), IEqualityComparer(Of K))
  fullName.vb: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, K), System.Func(Of T, V), System.Collections.Generic.IEqualityComparer(Of K))
  name.vb: PermissiveToDictionary(Of T, K, V)(IEnumerable(Of T), Func(Of T, K), Func(Of T, V), IEqualityComparer(Of K))
  spec.csharp:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: PermissiveToDictionary<T, K, V>
    nameWithType: IEnumerableExtensions.PermissiveToDictionary<T, K, V>
    fullName: IEnumerableExtensions.PermissiveToDictionary<T, K, V>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: PermissiveToDictionary(Of T, K, V)
    nameWithType: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)
    fullName: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  commentId: M:IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: GetDifferentCombinations<T>(IEnumerable<T>, Int32)
  nameWithType: IEnumerableExtensions.GetDifferentCombinations<T>(IEnumerable<T>, Int32)
  fullName: IEnumerableExtensions.GetDifferentCombinations<T>(System.Collections.Generic.IEnumerable<T>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.GetDifferentCombinations(Of T)(IEnumerable(Of T), Int32)
  fullName.vb: IEnumerableExtensions.GetDifferentCombinations(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  name.vb: GetDifferentCombinations(Of T)(IEnumerable(Of T), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: GetDifferentCombinations<T>
    nameWithType: IEnumerableExtensions.GetDifferentCombinations<T>
    fullName: IEnumerableExtensions.GetDifferentCombinations<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: GetDifferentCombinations(Of T)
    nameWithType: IEnumerableExtensions.GetDifferentCombinations(Of T)
    fullName: IEnumerableExtensions.GetDifferentCombinations(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: AtLeastOne<T>(IEnumerable<T>)
  nameWithType: CollectionOps.AtLeastOne<T>(IEnumerable<T>)
  fullName: SuperOffice.Util.CollectionOps.AtLeastOne<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: CollectionOps.AtLeastOne(Of T)(IEnumerable(Of T))
  fullName.vb: SuperOffice.Util.CollectionOps.AtLeastOne(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AtLeastOne(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
    name: AtLeastOne<T>
    nameWithType: CollectionOps.AtLeastOne<T>
    fullName: SuperOffice.Util.CollectionOps.AtLeastOne<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
    name: AtLeastOne(Of T)
    nameWithType: CollectionOps.AtLeastOne(Of T)
    fullName: SuperOffice.Util.CollectionOps.AtLeastOne(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.CollectionOps
  commentId: T:SuperOffice.Util.CollectionOps
  parent: SuperOffice.Util
  isExternal: true
  name: CollectionOps
  nameWithType: CollectionOps
  fullName: SuperOffice.Util.CollectionOps
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Security.RelationsSentryQueryInfo.#ctor*
  commentId: Overload:SuperOffice.CRM.Security.RelationsSentryQueryInfo.#ctor
  isExternal: true
  name: RelationsSentryQueryInfo
  nameWithType: RelationsSentryQueryInfo.RelationsSentryQueryInfo
  fullName: SuperOffice.CRM.Security.RelationsSentryQueryInfo.RelationsSentryQueryInfo
- uid: SuperOffice.CRM.Data.RelationsTableInfo
  commentId: T:SuperOffice.CRM.Data.RelationsTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  name: RelationsTableInfo
  nameWithType: RelationsTableInfo
  fullName: SuperOffice.CRM.Data.RelationsTableInfo
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.GetOwnerTableCandidates
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.GetOwnerTableCandidates
  parent: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  definition: SuperOffice.CRM.Security.SentryQueryInfo`1.GetOwnerTableCandidates
  name: GetOwnerTableCandidates()
  nameWithType: SentryQueryInfo<RelationsTableInfo>.GetOwnerTableCandidates()
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.GetOwnerTableCandidates()
  nameWithType.vb: SentryQueryInfo(Of RelationsTableInfo).GetOwnerTableCandidates()
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).GetOwnerTableCandidates()
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetOwnerTableCandidates
    name: GetOwnerTableCandidates
    nameWithType: SentryQueryInfo<RelationsTableInfo>.GetOwnerTableCandidates
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.GetOwnerTableCandidates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetOwnerTableCandidates
    name: GetOwnerTableCandidates
    nameWithType: SentryQueryInfo(Of RelationsTableInfo).GetOwnerTableCandidates
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).GetOwnerTableCandidates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetOwnerTableCandidates*
  commentId: Overload:SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetOwnerTableCandidates
  isExternal: true
  name: GetOwnerTableCandidates
  nameWithType: RelationsSentryQueryInfo.GetOwnerTableCandidates
  fullName: SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetOwnerTableCandidates
- uid: SuperOffice.Data.SQL.TableInfo[]
  isExternal: true
  name: TableInfo[]
  nameWithType: TableInfo[]
  fullName: SuperOffice.Data.SQL.TableInfo[]
  nameWithType.vb: TableInfo()
  fullName.vb: SuperOffice.Data.SQL.TableInfo()
  name.vb: TableInfo()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetOwnerTableCandidates
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo`1.GetOwnerTableCandidates
  isExternal: true
  name: GetOwnerTableCandidates()
  nameWithType: SentryQueryInfo<TMainTable>.GetOwnerTableCandidates()
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.GetOwnerTableCandidates()
  nameWithType.vb: SentryQueryInfo(Of TMainTable).GetOwnerTableCandidates()
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).GetOwnerTableCandidates()
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetOwnerTableCandidates
    name: GetOwnerTableCandidates
    nameWithType: SentryQueryInfo<TMainTable>.GetOwnerTableCandidates
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.GetOwnerTableCandidates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetOwnerTableCandidates
    name: GetOwnerTableCandidates
    nameWithType: SentryQueryInfo(Of TMainTable).GetOwnerTableCandidates
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).GetOwnerTableCandidates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
  parent: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  definition: SuperOffice.CRM.Security.SentryQueryInfo`1.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
  name: UpdateTypedMembers(PrivateSelect)
  nameWithType: SentryQueryInfo<RelationsTableInfo>.UpdateTypedMembers(PrivateSelect)
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
  nameWithType.vb: SentryQueryInfo(Of RelationsTableInfo).UpdateTypedMembers(PrivateSelect)
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
    name: UpdateTypedMembers
    nameWithType: SentryQueryInfo<RelationsTableInfo>.UpdateTypedMembers
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.UpdateTypedMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
    name: UpdateTypedMembers
    nameWithType: SentryQueryInfo(Of RelationsTableInfo).UpdateTypedMembers
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).UpdateTypedMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.RelationsSentryQueryInfo.UpdateTypedMembers*
  commentId: Overload:SuperOffice.CRM.Security.RelationsSentryQueryInfo.UpdateTypedMembers
  isExternal: true
  name: UpdateTypedMembers
  nameWithType: RelationsSentryQueryInfo.UpdateTypedMembers
  fullName: SuperOffice.CRM.Security.RelationsSentryQueryInfo.UpdateTypedMembers
- uid: SuperOffice.Data.SQL.PrivateSelect
  commentId: T:SuperOffice.Data.SQL.PrivateSelect
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: PrivateSelect
  nameWithType: PrivateSelect
  fullName: SuperOffice.Data.SQL.PrivateSelect
- uid: SuperOffice.CRM.Security.SentryQueryInfo`1.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo`1.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
  isExternal: true
  name: UpdateTypedMembers(PrivateSelect)
  nameWithType: SentryQueryInfo<TMainTable>.UpdateTypedMembers(PrivateSelect)
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
  nameWithType.vb: SentryQueryInfo(Of TMainTable).UpdateTypedMembers(PrivateSelect)
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
    name: UpdateTypedMembers
    nameWithType: SentryQueryInfo<TMainTable>.UpdateTypedMembers
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.UpdateTypedMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.UpdateTypedMembers(SuperOffice.Data.SQL.PrivateSelect)
    name: UpdateTypedMembers
    nameWithType: SentryQueryInfo(Of TMainTable).UpdateTypedMembers
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).UpdateTypedMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.GetUntypedMembers
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}.GetUntypedMembers
  parent: SuperOffice.CRM.Security.SentryQueryInfo{SuperOffice.CRM.Data.RelationsTableInfo}
  definition: SuperOffice.CRM.Security.SentryQueryInfo`1.GetUntypedMembers
  name: GetUntypedMembers()
  nameWithType: SentryQueryInfo<RelationsTableInfo>.GetUntypedMembers()
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.GetUntypedMembers()
  nameWithType.vb: SentryQueryInfo(Of RelationsTableInfo).GetUntypedMembers()
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).GetUntypedMembers()
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetUntypedMembers
    name: GetUntypedMembers
    nameWithType: SentryQueryInfo<RelationsTableInfo>.GetUntypedMembers
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<SuperOffice.CRM.Data.RelationsTableInfo>.GetUntypedMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetUntypedMembers
    name: GetUntypedMembers
    nameWithType: SentryQueryInfo(Of RelationsTableInfo).GetUntypedMembers
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of SuperOffice.CRM.Data.RelationsTableInfo).GetUntypedMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetUntypedMembers*
  commentId: Overload:SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetUntypedMembers
  isExternal: true
  name: GetUntypedMembers
  nameWithType: RelationsSentryQueryInfo.GetUntypedMembers
  fullName: SuperOffice.CRM.Security.RelationsSentryQueryInfo.GetUntypedMembers
- uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetUntypedMembers
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo`1.GetUntypedMembers
  isExternal: true
  name: GetUntypedMembers()
  nameWithType: SentryQueryInfo<TMainTable>.GetUntypedMembers()
  fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.GetUntypedMembers()
  nameWithType.vb: SentryQueryInfo(Of TMainTable).GetUntypedMembers()
  fullName.vb: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).GetUntypedMembers()
  spec.csharp:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetUntypedMembers
    name: GetUntypedMembers
    nameWithType: SentryQueryInfo<TMainTable>.GetUntypedMembers
    fullName: SuperOffice.CRM.Security.SentryQueryInfo<TMainTable>.GetUntypedMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.SentryQueryInfo`1.GetUntypedMembers
    name: GetUntypedMembers
    nameWithType: SentryQueryInfo(Of TMainTable).GetUntypedMembers
    fullName: SuperOffice.CRM.Security.SentryQueryInfo(Of TMainTable).GetUntypedMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
