### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Principal.SoAccessTokenHelper
  commentId: T:SuperOffice.Security.Principal.SoAccessTokenHelper
  id: SoAccessTokenHelper
  parent: SuperOffice.Security.Principal
  children:
  - SuperOffice.Security.Principal.SoAccessTokenHelper.Decrypt(System.String)
  - SuperOffice.Security.Principal.SoAccessTokenHelper.Encrypt(SuperOffice.Security.Principal.SoAccessToken)
  - SuperOffice.Security.Principal.SoAccessTokenHelper.GetClaimsIdentity(SuperOffice.Security.Principal.SoAccessToken,System.String)
  - SuperOffice.Security.Principal.SoAccessTokenHelper.TryGetFromClaimsIdentity(System.Security.Claims.ClaimsIdentity,SuperOffice.Security.Principal.SoAccessToken@)
  langs:
  - csharp
  - vb
  name: SoAccessTokenHelper
  nameWithType: SoAccessTokenHelper
  fullName: SuperOffice.Security.Principal.SoAccessTokenHelper
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: 'public static class SoAccessTokenHelper : Object'
    content.vb: >-
      Public Module SoAccessTokenHelper
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.Security.Principal.SoAccessTokenHelper.Decrypt(System.String)
  commentId: M:SuperOffice.Security.Principal.SoAccessTokenHelper.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: SuperOffice.Security.Principal.SoAccessTokenHelper
  langs:
  - csharp
  - vb
  name: Decrypt(String)
  nameWithType: SoAccessTokenHelper.Decrypt(String)
  fullName: SuperOffice.Security.Principal.SoAccessTokenHelper.Decrypt(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nDecrypt the encrypted base64 encoded access token into the SoAccessToken class. \n"
  syntax:
    content: public static SoAccessToken Decrypt(string accessTokenData)
    parameters:
    - id: accessTokenData
      type: System.String
    return:
      type: SuperOffice.Security.Principal.SoAccessToken
    content.vb: Public Shared Function Decrypt(accessTokenData As String) As SoAccessToken
  overload: SuperOffice.Security.Principal.SoAccessTokenHelper.Decrypt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Security.Principal.SoAccessTokenHelper.Encrypt(SuperOffice.Security.Principal.SoAccessToken)
  commentId: M:SuperOffice.Security.Principal.SoAccessTokenHelper.Encrypt(SuperOffice.Security.Principal.SoAccessToken)
  id: Encrypt(SuperOffice.Security.Principal.SoAccessToken)
  isExtensionMethod: true
  parent: SuperOffice.Security.Principal.SoAccessTokenHelper
  langs:
  - csharp
  - vb
  name: Encrypt(SoAccessToken)
  nameWithType: SoAccessTokenHelper.Encrypt(SoAccessToken)
  fullName: SuperOffice.Security.Principal.SoAccessTokenHelper.Encrypt(SuperOffice.Security.Principal.SoAccessToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static string Encrypt(this SoAccessToken token)
    parameters:
    - id: token
      type: SuperOffice.Security.Principal.SoAccessToken
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Encrypt(token As SoAccessToken) As String
  overload: SuperOffice.Security.Principal.SoAccessTokenHelper.Encrypt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Security.Principal.SoAccessTokenHelper.TryGetFromClaimsIdentity(System.Security.Claims.ClaimsIdentity,SuperOffice.Security.Principal.SoAccessToken@)
  commentId: M:SuperOffice.Security.Principal.SoAccessTokenHelper.TryGetFromClaimsIdentity(System.Security.Claims.ClaimsIdentity,SuperOffice.Security.Principal.SoAccessToken@)
  id: TryGetFromClaimsIdentity(System.Security.Claims.ClaimsIdentity,SuperOffice.Security.Principal.SoAccessToken@)
  parent: SuperOffice.Security.Principal.SoAccessTokenHelper
  langs:
  - csharp
  - vb
  name: TryGetFromClaimsIdentity(ClaimsIdentity, out SoAccessToken)
  nameWithType: SoAccessTokenHelper.TryGetFromClaimsIdentity(ClaimsIdentity, out SoAccessToken)
  fullName: SuperOffice.Security.Principal.SoAccessTokenHelper.TryGetFromClaimsIdentity(System.Security.Claims.ClaimsIdentity, out SuperOffice.Security.Principal.SoAccessToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static bool TryGetFromClaimsIdentity(ClaimsIdentity identity, out SoAccessToken accessToken)
    parameters:
    - id: identity
      type: System.Security.Claims.ClaimsIdentity
    - id: accessToken
      type: SuperOffice.Security.Principal.SoAccessToken
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryGetFromClaimsIdentity(identity As ClaimsIdentity, ByRef accessToken As SoAccessToken) As Boolean
  overload: SuperOffice.Security.Principal.SoAccessTokenHelper.TryGetFromClaimsIdentity*
  nameWithType.vb: SoAccessTokenHelper.TryGetFromClaimsIdentity(ClaimsIdentity, ByRef SoAccessToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Security.Principal.SoAccessTokenHelper.TryGetFromClaimsIdentity(System.Security.Claims.ClaimsIdentity, ByRef SuperOffice.Security.Principal.SoAccessToken)
  name.vb: TryGetFromClaimsIdentity(ClaimsIdentity, ByRef SoAccessToken)
- uid: SuperOffice.Security.Principal.SoAccessTokenHelper.GetClaimsIdentity(SuperOffice.Security.Principal.SoAccessToken,System.String)
  commentId: M:SuperOffice.Security.Principal.SoAccessTokenHelper.GetClaimsIdentity(SuperOffice.Security.Principal.SoAccessToken,System.String)
  id: GetClaimsIdentity(SuperOffice.Security.Principal.SoAccessToken,System.String)
  parent: SuperOffice.Security.Principal.SoAccessTokenHelper
  langs:
  - csharp
  - vb
  name: GetClaimsIdentity(SoAccessToken, String)
  nameWithType: SoAccessTokenHelper.GetClaimsIdentity(SoAccessToken, String)
  fullName: SuperOffice.Security.Principal.SoAccessTokenHelper.GetClaimsIdentity(SuperOffice.Security.Principal.SoAccessToken, System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static ClaimsIdentity GetClaimsIdentity(SoAccessToken accessToken, string accessTokenData)
    parameters:
    - id: accessToken
      type: SuperOffice.Security.Principal.SoAccessToken
    - id: accessTokenData
      type: System.String
    return:
      type: System.Security.Claims.ClaimsIdentity
    content.vb: Public Shared Function GetClaimsIdentity(accessToken As SoAccessToken, accessTokenData As String) As ClaimsIdentity
  overload: SuperOffice.Security.Principal.SoAccessTokenHelper.GetClaimsIdentity*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Security.Principal.SoAccessTokenHelper.Decrypt*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessTokenHelper.Decrypt
  isExternal: true
  name: Decrypt
  nameWithType: SoAccessTokenHelper.Decrypt
  fullName: SuperOffice.Security.Principal.SoAccessTokenHelper.Decrypt
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Security.Principal.SoAccessToken
  commentId: T:SuperOffice.Security.Principal.SoAccessToken
  parent: SuperOffice.Security.Principal
  isExternal: true
  name: SoAccessToken
  nameWithType: SoAccessToken
  fullName: SuperOffice.Security.Principal.SoAccessToken
- uid: SuperOffice.Security.Principal.SoAccessTokenHelper.Encrypt*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessTokenHelper.Encrypt
  isExternal: true
  name: Encrypt
  nameWithType: SoAccessTokenHelper.Encrypt
  fullName: SuperOffice.Security.Principal.SoAccessTokenHelper.Encrypt
- uid: SuperOffice.Security.Principal.SoAccessTokenHelper.TryGetFromClaimsIdentity*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessTokenHelper.TryGetFromClaimsIdentity
  isExternal: true
  name: TryGetFromClaimsIdentity
  nameWithType: SoAccessTokenHelper.TryGetFromClaimsIdentity
  fullName: SuperOffice.Security.Principal.SoAccessTokenHelper.TryGetFromClaimsIdentity
- uid: System.Security.Claims.ClaimsIdentity
  isExternal: true
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Security.Principal.SoAccessTokenHelper.GetClaimsIdentity*
  commentId: Overload:SuperOffice.Security.Principal.SoAccessTokenHelper.GetClaimsIdentity
  isExternal: true
  name: GetClaimsIdentity
  nameWithType: SoAccessTokenHelper.GetClaimsIdentity
  fullName: SuperOffice.Security.Principal.SoAccessTokenHelper.GetClaimsIdentity
