### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Security.SentryQueryInfo
  commentId: T:SuperOffice.CRM.Security.SentryQueryInfo
  id: SentryQueryInfo
  parent: SuperOffice.CRM.Security
  children:
  - SuperOffice.CRM.Security.SentryQueryInfo.#ctor(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Security.SentryQueryInfo.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  - SuperOffice.CRM.Security.SentryQueryInfo.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Security.SentryQueryInfo.GetEnumerator
  - SuperOffice.CRM.Security.SentryQueryInfo.HasVisibleFor
  - SuperOffice.CRM.Security.SentryQueryInfo.MainTable
  - SuperOffice.CRM.Security.SentryQueryInfo.ParentFields
  - SuperOffice.CRM.Security.SentryQueryInfo.VisibleForTableInfo
  langs:
  - csharp
  - vb
  name: SentryQueryInfo
  nameWithType: SentryQueryInfo
  fullName: SuperOffice.CRM.Security.SentryQueryInfo
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nInformation about a query - like table infos, etc.\n"
  syntax:
    content: 'public abstract class SentryQueryInfo : Object, IEnumerable<TableInfo>, IEnumerable'
    content.vb: >-
      Public MustInherit Class SentryQueryInfo
          Inherits Object
          Implements IEnumerable(Of TableInfo), IEnumerable
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.CRM.Security.SentryQueryInfo`1
  implements:
  - System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}
  - System.Collections.IEnumerable
  extensionMethods:
  - SuperOffice.CRM.Security.SentryQueryInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Security.SentryQueryInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SuperOffice.CRM.Security.SentryQueryInfo.#ctor(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo.#ctor(SuperOffice.Data.SQL.TableInfo)
  id: '#ctor(SuperOffice.Data.SQL.TableInfo)'
  parent: SuperOffice.CRM.Security.SentryQueryInfo
  langs:
  - csharp
  - vb
  name: SentryQueryInfo(TableInfo)
  nameWithType: SentryQueryInfo.SentryQueryInfo(TableInfo)
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.SentryQueryInfo(SuperOffice.Data.SQL.TableInfo)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: protected SentryQueryInfo(TableInfo mainTable)
    parameters:
    - id: mainTable
      type: SuperOffice.Data.SQL.TableInfo
    content.vb: Protected Sub New(mainTable As TableInfo)
  overload: SuperOffice.CRM.Security.SentryQueryInfo.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Security.SentryQueryInfo.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  id: AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  parent: SuperOffice.CRM.Security.SentryQueryInfo
  langs:
  - csharp
  - vb
  name: AnalyzeQuery(PrivateSelect)
  nameWithType: SentryQueryInfo.AnalyzeQuery(PrivateSelect)
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nShould not be called by partners!\n"
  remarks: 'Should not be called by partners: Analyze the query during the query execution process.'
  syntax:
    content: public abstract void AnalyzeQuery(PrivateSelect sql)
    parameters:
    - id: sql
      type: SuperOffice.Data.SQL.PrivateSelect
      description: Query to analyze
    content.vb: Public MustOverride Sub AnalyzeQuery(sql As PrivateSelect)
  overload: SuperOffice.CRM.Security.SentryQueryInfo.AnalyzeQuery*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: SuperOffice.CRM.Security.SentryQueryInfo.GetEnumerator
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo.GetEnumerator
  id: GetEnumerator
  parent: SuperOffice.CRM.Security.SentryQueryInfo
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: SentryQueryInfo.GetEnumerator()
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.GetEnumerator()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nEnumerator for all instances of TableInfo in the query.\n"
  syntax:
    content: public abstract IEnumerator<TableInfo> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{SuperOffice.Data.SQL.TableInfo}
      description: Enumerator for all instances of TableInfo in the query.
    content.vb: Public MustOverride Function GetEnumerator As IEnumerator(Of TableInfo)
  overload: SuperOffice.CRM.Security.SentryQueryInfo.GetEnumerator*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: SuperOffice.CRM.Security.SentryQueryInfo.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Security.SentryQueryInfo.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  id: CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Security.SentryQueryInfo
  langs:
  - csharp
  - vb
  name: CanCoverTable(TableInfo)
  nameWithType: SentryQueryInfo.CanCoverTable(TableInfo)
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nShould not be called by partners!\n"
  remarks: 'Should not be called by partners: Check if this is a table that can be covered.  If so, add it to the list of covered tables.'
  syntax:
    content: public abstract bool CanCoverTable(TableInfo table)
    parameters:
    - id: table
      type: SuperOffice.Data.SQL.TableInfo
      description: Information about the table to analyze.
    return:
      type: System.Boolean
      description: True if this now is a table that can be covered.
    content.vb: Public MustOverride Function CanCoverTable(table As TableInfo) As Boolean
  overload: SuperOffice.CRM.Security.SentryQueryInfo.CanCoverTable*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: SuperOffice.CRM.Security.SentryQueryInfo.MainTable
  commentId: P:SuperOffice.CRM.Security.SentryQueryInfo.MainTable
  id: MainTable
  parent: SuperOffice.CRM.Security.SentryQueryInfo
  langs:
  - csharp
  - vb
  name: MainTable
  nameWithType: SentryQueryInfo.MainTable
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.MainTable
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nMain table for the sentry.\n"
  syntax:
    content: public TableInfo MainTable { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TableInfo
    content.vb: Public ReadOnly Property MainTable As TableInfo
  overload: SuperOffice.CRM.Security.SentryQueryInfo.MainTable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Security.SentryQueryInfo.HasVisibleFor
  commentId: P:SuperOffice.CRM.Security.SentryQueryInfo.HasVisibleFor
  id: HasVisibleFor
  parent: SuperOffice.CRM.Security.SentryQueryInfo
  langs:
  - csharp
  - vb
  name: HasVisibleFor
  nameWithType: SentryQueryInfo.HasVisibleFor
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.HasVisibleFor
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nDoes this table have VisibleFor.\n"
  syntax:
    content: public abstract bool HasVisibleFor { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property HasVisibleFor As Boolean
  overload: SuperOffice.CRM.Security.SentryQueryInfo.HasVisibleFor*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: SuperOffice.CRM.Security.SentryQueryInfo.VisibleForTableInfo
  commentId: P:SuperOffice.CRM.Security.SentryQueryInfo.VisibleForTableInfo
  id: VisibleForTableInfo
  parent: SuperOffice.CRM.Security.SentryQueryInfo
  langs:
  - csharp
  - vb
  name: VisibleForTableInfo
  nameWithType: SentryQueryInfo.VisibleForTableInfo
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.VisibleForTableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nTable info for the related VisibleFor table.\n"
  syntax:
    content: public abstract VisibleForTableInfo VisibleForTableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Data.VisibleForTableInfo
    content.vb: Public MustOverride ReadOnly Property VisibleForTableInfo As VisibleForTableInfo
  overload: SuperOffice.CRM.Security.SentryQueryInfo.VisibleForTableInfo*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: SuperOffice.CRM.Security.SentryQueryInfo.ParentFields
  commentId: P:SuperOffice.CRM.Security.SentryQueryInfo.ParentFields
  id: ParentFields
  parent: SuperOffice.CRM.Security.SentryQueryInfo
  langs:
  - csharp
  - vb
  name: ParentFields
  nameWithType: SentryQueryInfo.ParentFields
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.ParentFields
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nAll field infos referring to the main table&apos;s primary key.\n"
  syntax:
    content: public abstract FieldInfo[] ParentFields { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.FieldInfo[]
    content.vb: Public MustOverride ReadOnly Property ParentFields As FieldInfo()
  overload: SuperOffice.CRM.Security.SentryQueryInfo.ParentFields*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
references:
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TableInfo>
  nameWithType: IEnumerable<TableInfo>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.TableInfo>
  nameWithType.vb: IEnumerable(Of TableInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.TableInfo)
  name.vb: IEnumerable(Of TableInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: SuperOffice.CRM.Security.SentryQueryInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SentryQueryInfo, To>()
  nameWithType: EnumUtil.MapEnums<SentryQueryInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Security.SentryQueryInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SentryQueryInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Security.SentryQueryInfo, To)()
  name.vb: MapEnums(Of SentryQueryInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SentryQueryInfo, To>
    nameWithType: EnumUtil.MapEnums<SentryQueryInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Security.SentryQueryInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SentryQueryInfo, To)
    nameWithType: EnumUtil.MapEnums(Of SentryQueryInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Security.SentryQueryInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SentryQueryInfo, To>()
  nameWithType: Converters.MapEnums<SentryQueryInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Security.SentryQueryInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of SentryQueryInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Security.SentryQueryInfo, To)()
  name.vb: MapEnums(Of SentryQueryInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SentryQueryInfo, To>
    nameWithType: Converters.MapEnums<SentryQueryInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Security.SentryQueryInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SentryQueryInfo, To)
    nameWithType: Converters.MapEnums(Of SentryQueryInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Security.SentryQueryInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Security.SentryQueryInfo.#ctor*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryInfo.#ctor
  isExternal: true
  name: SentryQueryInfo
  nameWithType: SentryQueryInfo.SentryQueryInfo
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.SentryQueryInfo
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.CRM.Security.SentryQueryInfo.AnalyzeQuery*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryInfo.AnalyzeQuery
  isExternal: true
  name: AnalyzeQuery
  nameWithType: SentryQueryInfo.AnalyzeQuery
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.AnalyzeQuery
- uid: SuperOffice.Data.SQL.PrivateSelect
  commentId: T:SuperOffice.Data.SQL.PrivateSelect
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: PrivateSelect
  nameWithType: PrivateSelect
  fullName: SuperOffice.Data.SQL.PrivateSelect
- uid: SuperOffice.CRM.Security.SentryQueryInfo.GetEnumerator*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryInfo.GetEnumerator
  isExternal: true
  name: GetEnumerator
  nameWithType: SentryQueryInfo.GetEnumerator
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{SuperOffice.Data.SQL.TableInfo}
  commentId: '!:System.Collections.Generic.IEnumerator{SuperOffice.Data.SQL.TableInfo}'
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TableInfo>
  nameWithType: IEnumerator<TableInfo>
  fullName: System.Collections.Generic.IEnumerator<SuperOffice.Data.SQL.TableInfo>
  nameWithType.vb: IEnumerator(Of TableInfo)
  fullName.vb: System.Collections.Generic.IEnumerator(Of SuperOffice.Data.SQL.TableInfo)
  name.vb: IEnumerator(Of TableInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: System.Collections.Generic.IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullName.vb: System.Collections.Generic.IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryInfo.CanCoverTable*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryInfo.CanCoverTable
  isExternal: true
  name: CanCoverTable
  nameWithType: SentryQueryInfo.CanCoverTable
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.CanCoverTable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Security.SentryQueryInfo.MainTable*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryInfo.MainTable
  isExternal: true
  name: MainTable
  nameWithType: SentryQueryInfo.MainTable
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.MainTable
- uid: SuperOffice.CRM.Security.SentryQueryInfo.HasVisibleFor*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryInfo.HasVisibleFor
  isExternal: true
  name: HasVisibleFor
  nameWithType: SentryQueryInfo.HasVisibleFor
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.HasVisibleFor
- uid: SuperOffice.CRM.Security.SentryQueryInfo.VisibleForTableInfo*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryInfo.VisibleForTableInfo
  isExternal: true
  name: VisibleForTableInfo
  nameWithType: SentryQueryInfo.VisibleForTableInfo
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.VisibleForTableInfo
- uid: SuperOffice.CRM.Data.VisibleForTableInfo
  commentId: T:SuperOffice.CRM.Data.VisibleForTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  name: VisibleForTableInfo
  nameWithType: VisibleForTableInfo
  fullName: SuperOffice.CRM.Data.VisibleForTableInfo
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: SuperOffice.CRM.Security.SentryQueryInfo.ParentFields*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryInfo.ParentFields
  isExternal: true
  name: ParentFields
  nameWithType: SentryQueryInfo.ParentFields
  fullName: SuperOffice.CRM.Security.SentryQueryInfo.ParentFields
- uid: SuperOffice.Data.SQL.FieldInfo[]
  isExternal: true
  name: FieldInfo[]
  nameWithType: FieldInfo[]
  fullName: SuperOffice.Data.SQL.FieldInfo[]
  nameWithType.vb: FieldInfo()
  fullName.vb: SuperOffice.Data.SQL.FieldInfo()
  name.vb: FieldInfo()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
