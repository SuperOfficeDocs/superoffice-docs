### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.ISoCollection
  commentId: T:SuperOffice.Data.ISoCollection
  id: ISoCollection
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.ISoCollection.Add(SuperOffice.Data.ISoItem)
  - SuperOffice.Data.ISoCollection.AddNew
  - SuperOffice.Data.ISoCollection.IsDirty
  langs:
  - csharp
  - vb
  name: ISoCollection
  nameWithType: ISoCollection
  fullName: SuperOffice.Data.ISoCollection
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\n\n"
  remarks: "\n\n<table><tbody><tr><td></td><td></td></tr><tr><td></td><td>\n</td></tr></tbody></table>\n"
  syntax:
    content: 'public interface ISoCollection : IEnumerable, IList, ICollection'
    content.vb: >-
      Public Interface ISoCollection
          Inherits IEnumerable, IList, ICollection
  extensionMethods:
  - SuperOffice.Data.ISoCollection.EnumUtil.MapEnums``2
  - SuperOffice.Data.ISoCollection.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Data.ISoCollection.AddNew
  commentId: M:SuperOffice.Data.ISoCollection.AddNew
  id: AddNew
  parent: SuperOffice.Data.ISoCollection
  langs:
  - csharp
  - vb
  name: AddNew()
  nameWithType: ISoCollection.AddNew()
  fullName: SuperOffice.Data.ISoCollection.AddNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: ISoItem AddNew()
    return:
      type: SuperOffice.Data.ISoItem
    content.vb: Function AddNew As ISoItem
  overload: SuperOffice.Data.ISoCollection.AddNew*
- uid: SuperOffice.Data.ISoCollection.Add(SuperOffice.Data.ISoItem)
  commentId: M:SuperOffice.Data.ISoCollection.Add(SuperOffice.Data.ISoItem)
  id: Add(SuperOffice.Data.ISoItem)
  parent: SuperOffice.Data.ISoCollection
  langs:
  - csharp
  - vb
  name: Add(ISoItem)
  nameWithType: ISoCollection.Add(ISoItem)
  fullName: SuperOffice.Data.ISoCollection.Add(SuperOffice.Data.ISoItem)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nAdds the specified item.\n"
  syntax:
    content: int Add(ISoItem item)
    parameters:
    - id: item
      type: SuperOffice.Data.ISoItem
      description: The item.
    return:
      type: System.Int32
      description: 0-based index of the item.
    content.vb: Function Add(item As ISoItem) As Integer
  overload: SuperOffice.Data.ISoCollection.Add*
- uid: SuperOffice.Data.ISoCollection.IsDirty
  commentId: P:SuperOffice.Data.ISoCollection.IsDirty
  id: IsDirty
  parent: SuperOffice.Data.ISoCollection
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: ISoCollection.IsDirty
  fullName: SuperOffice.Data.ISoCollection.IsDirty
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nIs the object dirty, e.g. has some of the data in the object been changed?\n"
  syntax:
    content: bool IsDirty { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if dirty; otherwise, <code>false</code>.
    content.vb: ReadOnly Property IsDirty As Boolean
  overload: SuperOffice.Data.ISoCollection.IsDirty*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Data.ISoCollection.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ISoCollection, To>()
  nameWithType: EnumUtil.MapEnums<ISoCollection, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.ISoCollection, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ISoCollection, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.ISoCollection, To)()
  name.vb: MapEnums(Of ISoCollection, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ISoCollection, To>
    nameWithType: EnumUtil.MapEnums<ISoCollection, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.ISoCollection, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ISoCollection, To)
    nameWithType: EnumUtil.MapEnums(Of ISoCollection, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.ISoCollection, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ISoCollection.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ISoCollection, To>()
  nameWithType: Converters.MapEnums<ISoCollection, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.ISoCollection, To>()
  nameWithType.vb: Converters.MapEnums(Of ISoCollection, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.ISoCollection, To)()
  name.vb: MapEnums(Of ISoCollection, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ISoCollection, To>
    nameWithType: Converters.MapEnums<ISoCollection, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.ISoCollection, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ISoCollection, To)
    nameWithType: Converters.MapEnums(Of ISoCollection, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.ISoCollection, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.ISoCollection.AddNew*
  commentId: Overload:SuperOffice.Data.ISoCollection.AddNew
  isExternal: true
  name: AddNew
  nameWithType: ISoCollection.AddNew
  fullName: SuperOffice.Data.ISoCollection.AddNew
- uid: SuperOffice.Data.ISoItem
  commentId: T:SuperOffice.Data.ISoItem
  parent: SuperOffice.Data
  isExternal: true
  name: ISoItem
  nameWithType: ISoItem
  fullName: SuperOffice.Data.ISoItem
- uid: SuperOffice.Data.ISoCollection.Add*
  commentId: Overload:SuperOffice.Data.ISoCollection.Add
  isExternal: true
  name: Add
  nameWithType: ISoCollection.Add
  fullName: SuperOffice.Data.ISoCollection.Add
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.ISoCollection.IsDirty*
  commentId: Overload:SuperOffice.Data.ISoCollection.IsDirty
  isExternal: true
  name: IsDirty
  nameWithType: ISoCollection.IsDirty
  fullName: SuperOffice.Data.ISoCollection.IsDirty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
