### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
  commentId: T:SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
  id: CollectionOps.GetKeyFromValueItem`2
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.#ctor(System.Object,System.IntPtr)
  - SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.BeginInvoke(`1,System.AsyncCallback,System.Object)
  - SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.EndInvoke(System.IAsyncResult)
  - SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.Invoke(`1)
  langs:
  - csharp
  - vb
  name: CollectionOps.GetKeyFromValueItem<KeyType, ValueType>
  nameWithType: CollectionOps.GetKeyFromValueItem<KeyType, ValueType>
  fullName: SuperOffice.Util.CollectionOps.GetKeyFromValueItem<KeyType, ValueType>
  type: Delegate
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Delegate for the <xref href="SuperOffice.Util.CollectionOps.CreateDictionaryFromArray%60%602(%60%601%5b%5d%2cSuperOffice.Util.CollectionOps.GetKeyFromValueItem%7b%60%600%2c%60%601%7d)" data-throw-if-not-resolved="false"></xref> methods, whose task is to extract whatever is the

    key from the given item
  example: []
  syntax:
    content: >-
      [Obsolete("This delegate is obsolete and will be removed in a future version.", false)]

      public delegate KeyType CollectionOps.GetKeyFromValueItem<KeyType, ValueType>(ValueType item)
    parameters:
    - id: item
      type: '{ValueType}'
      description: Item to extract key from
    typeParameters:
    - id: KeyType
      description: Type to return as key
    - id: ValueType
      description: Value type, same as the incoming item type
    return:
      type: '{KeyType}'
      description: Item of type KeyType
    content.vb: >-
      <Obsolete("This delegate is obsolete and will be removed in a future version.", False)>

      Public Delegate Function CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType)(item As ValueType) As KeyType
  extensionMethods:
  - SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.EnumUtil.MapEnums``2
  - SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This delegate is obsolete and will be removed in a future version.
    - type: System.Boolean
      value: false
  nameWithType.vb: CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType)
  fullName.vb: SuperOffice.Util.CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType)
  name.vb: CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType)
- uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.#ctor(System.Object,System.IntPtr)
  commentId: M:SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.#ctor(System.Object,System.IntPtr)
  id: '#ctor(System.Object,System.IntPtr)'
  parent: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
  langs:
  - csharp
  - vb
  name: GetKeyFromValueItem(object, IntPtr)
  nameWithType: CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.GetKeyFromValueItem(object, IntPtr)
  fullName: SuperOffice.Util.CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.GetKeyFromValueItem(object, System.IntPtr)
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public GetKeyFromValueItem(object @object, IntPtr method)
    parameters:
    - id: object
      type: System.Object
    - id: method
      type: System.IntPtr
    content.vb: Public Sub New([object] As Object, method As IntPtr)
  overload: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.#ctor*
  nameWithType.vb: CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).New(Object, IntPtr)
  fullName.vb: SuperOffice.Util.CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).New(Object, System.IntPtr)
  name.vb: New(Object, IntPtr)
- uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.Invoke(`1)
  commentId: M:SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.Invoke(`1)
  id: Invoke(`1)
  parent: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
  langs:
  - csharp
  - vb
  name: Invoke(ValueType)
  nameWithType: CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.Invoke(ValueType)
  fullName: SuperOffice.Util.CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.Invoke(ValueType)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public virtual KeyType Invoke(ValueType item)
    parameters:
    - id: item
      type: '{ValueType}'
    return:
      type: '{KeyType}'
    content.vb: Public Overridable Function Invoke(item As ValueType) As KeyType
  overload: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.Invoke*
  nameWithType.vb: CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).Invoke(ValueType)
  fullName.vb: SuperOffice.Util.CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).Invoke(ValueType)
- uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.BeginInvoke(`1,System.AsyncCallback,System.Object)
  commentId: M:SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.BeginInvoke(`1,System.AsyncCallback,System.Object)
  id: BeginInvoke(`1,System.AsyncCallback,System.Object)
  parent: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
  langs:
  - csharp
  - vb
  name: BeginInvoke(ValueType, AsyncCallback, object)
  nameWithType: CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.BeginInvoke(ValueType, AsyncCallback, object)
  fullName: SuperOffice.Util.CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.BeginInvoke(ValueType, System.AsyncCallback, object)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public virtual IAsyncResult BeginInvoke(ValueType item, AsyncCallback callback, object @object)
    parameters:
    - id: item
      type: '{ValueType}'
    - id: callback
      type: System.AsyncCallback
    - id: object
      type: System.Object
    return:
      type: System.IAsyncResult
    content.vb: Public Overridable Function BeginInvoke(item As ValueType, callback As AsyncCallback, [object] As Object) As IAsyncResult
  overload: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.BeginInvoke*
  nameWithType.vb: CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).BeginInvoke(ValueType, AsyncCallback, Object)
  fullName.vb: SuperOffice.Util.CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).BeginInvoke(ValueType, System.AsyncCallback, Object)
  name.vb: BeginInvoke(ValueType, AsyncCallback, Object)
- uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.EndInvoke(System.IAsyncResult)
  commentId: M:SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.EndInvoke(System.IAsyncResult)
  id: EndInvoke(System.IAsyncResult)
  parent: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
  langs:
  - csharp
  - vb
  name: EndInvoke(IAsyncResult)
  nameWithType: CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.EndInvoke(IAsyncResult)
  fullName: SuperOffice.Util.CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.EndInvoke(System.IAsyncResult)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public virtual KeyType EndInvoke(IAsyncResult result)
    parameters:
    - id: result
      type: System.IAsyncResult
    return:
      type: '{KeyType}'
    content.vb: Public Overridable Function EndInvoke(result As IAsyncResult) As KeyType
  overload: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.EndInvoke*
  nameWithType.vb: CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).EndInvoke(IAsyncResult)
  fullName.vb: SuperOffice.Util.CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).EndInvoke(System.IAsyncResult)
references:
- uid: SuperOffice.Util.CollectionOps.CreateDictionaryFromArray``2(``1[],SuperOffice.Util.CollectionOps.GetKeyFromValueItem{``0,``1})
  commentId: M:SuperOffice.Util.CollectionOps.CreateDictionaryFromArray``2(``1[],SuperOffice.Util.CollectionOps.GetKeyFromValueItem{``0,``1})
  isExternal: true
  href: SuperOffice.Util.CollectionOps.html#SuperOffice_Util_CollectionOps_CreateDictionaryFromArray__2___1___SuperOffice_Util_CollectionOps_GetKeyFromValueItem___0___1__
  name: CreateDictionaryFromArray<KeyType, ValueType>(ValueType[], GetKeyFromValueItem<KeyType, ValueType>)
  nameWithType: CollectionOps.CreateDictionaryFromArray<KeyType, ValueType>(ValueType[], CollectionOps.GetKeyFromValueItem<KeyType, ValueType>)
  fullName: SuperOffice.Util.CollectionOps.CreateDictionaryFromArray<KeyType, ValueType>(ValueType[], SuperOffice.Util.CollectionOps.GetKeyFromValueItem<KeyType, ValueType>)
  nameWithType.vb: CollectionOps.CreateDictionaryFromArray(Of KeyType, ValueType)(ValueType(), CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType))
  fullName.vb: SuperOffice.Util.CollectionOps.CreateDictionaryFromArray(Of KeyType, ValueType)(ValueType(), SuperOffice.Util.CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType))
  name.vb: CreateDictionaryFromArray(Of KeyType, ValueType)(ValueType(), GetKeyFromValueItem(Of KeyType, ValueType))
  spec.csharp:
  - uid: SuperOffice.Util.CollectionOps.CreateDictionaryFromArray``2(``1[],SuperOffice.Util.CollectionOps.GetKeyFromValueItem{``0,``1})
    name: CreateDictionaryFromArray
    isExternal: true
    href: SuperOffice.Util.CollectionOps.html#SuperOffice_Util_CollectionOps_CreateDictionaryFromArray__2___1___SuperOffice_Util_CollectionOps_GetKeyFromValueItem___0___1__
  - name: <
  - name: KeyType
  - name: ','
  - name: " "
  - name: ValueType
  - name: '>'
  - name: (
  - name: ValueType
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
    name: GetKeyFromValueItem
    isExternal: true
    href: SuperOffice.Util.CollectionOps.GetKeyFromValueItem-2.html
  - name: <
  - name: KeyType
  - name: ','
  - name: " "
  - name: ValueType
  - name: '>'
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.CollectionOps.CreateDictionaryFromArray``2(``1[],SuperOffice.Util.CollectionOps.GetKeyFromValueItem{``0,``1})
    name: CreateDictionaryFromArray
    isExternal: true
    href: SuperOffice.Util.CollectionOps.html#SuperOffice_Util_CollectionOps_CreateDictionaryFromArray__2___1___SuperOffice_Util_CollectionOps_GetKeyFromValueItem___0___1__
  - name: (
  - name: Of
  - name: " "
  - name: KeyType
  - name: ','
  - name: " "
  - name: ValueType
  - name: )
  - name: (
  - name: ValueType
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
    name: GetKeyFromValueItem
    isExternal: true
    href: SuperOffice.Util.CollectionOps.GetKeyFromValueItem-2.html
  - name: (
  - name: Of
  - name: " "
  - name: KeyType
  - name: ','
  - name: " "
  - name: ValueType
  - name: )
  - name: )
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<GetKeyFromValueItem<KeyType, ValueType>, To>(GetKeyFromValueItem<KeyType, ValueType>)
  nameWithType: EnumUtil.MapEnums<CollectionOps.GetKeyFromValueItem<KeyType, ValueType>, To>(CollectionOps.GetKeyFromValueItem<KeyType, ValueType>)
  fullName: EnumUtil.MapEnums<SuperOffice.Util.CollectionOps.GetKeyFromValueItem<KeyType, ValueType>, To>(SuperOffice.Util.CollectionOps.GetKeyFromValueItem<KeyType, ValueType>)
  nameWithType.vb: EnumUtil.MapEnums(Of CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType), To)(CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType))
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Util.CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType), To)(SuperOffice.Util.CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType))
  name.vb: MapEnums(Of GetKeyFromValueItem(Of KeyType, ValueType), To)(GetKeyFromValueItem(Of KeyType, ValueType))
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Util.CollectionOps.GetKeyFromValueItem{`0,`1})
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
    name: GetKeyFromValueItem
    isExternal: true
    href: SuperOffice.Util.CollectionOps.GetKeyFromValueItem-2.html
  - name: <
  - name: KeyType
  - name: ','
  - name: " "
  - name: ValueType
  - name: '>'
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
    name: GetKeyFromValueItem
    isExternal: true
    href: SuperOffice.Util.CollectionOps.GetKeyFromValueItem-2.html
  - name: <
  - name: KeyType
  - name: ','
  - name: " "
  - name: ValueType
  - name: '>'
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Util.CollectionOps.GetKeyFromValueItem{`0,`1})
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
    name: GetKeyFromValueItem
    isExternal: true
    href: SuperOffice.Util.CollectionOps.GetKeyFromValueItem-2.html
  - name: (
  - name: Of
  - name: " "
  - name: KeyType
  - name: ','
  - name: " "
  - name: ValueType
  - name: )
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
    name: GetKeyFromValueItem
    isExternal: true
    href: SuperOffice.Util.CollectionOps.GetKeyFromValueItem-2.html
  - name: (
  - name: Of
  - name: " "
  - name: KeyType
  - name: ','
  - name: " "
  - name: ValueType
  - name: )
  - name: )
- uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<GetKeyFromValueItem<KeyType, ValueType>, To>(GetKeyFromValueItem<KeyType, ValueType>)
  nameWithType: Converters.MapEnums<CollectionOps.GetKeyFromValueItem<KeyType, ValueType>, To>(CollectionOps.GetKeyFromValueItem<KeyType, ValueType>)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Util.CollectionOps.GetKeyFromValueItem<KeyType, ValueType>, To>(SuperOffice.Util.CollectionOps.GetKeyFromValueItem<KeyType, ValueType>)
  nameWithType.vb: Converters.MapEnums(Of CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType), To)(CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType))
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Util.CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType), To)(SuperOffice.Util.CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType))
  name.vb: MapEnums(Of GetKeyFromValueItem(Of KeyType, ValueType), To)(GetKeyFromValueItem(Of KeyType, ValueType))
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Util.CollectionOps.GetKeyFromValueItem{`0,`1})
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
    name: GetKeyFromValueItem
    isExternal: true
    href: SuperOffice.Util.CollectionOps.GetKeyFromValueItem-2.html
  - name: <
  - name: KeyType
  - name: ','
  - name: " "
  - name: ValueType
  - name: '>'
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
    name: GetKeyFromValueItem
    isExternal: true
    href: SuperOffice.Util.CollectionOps.GetKeyFromValueItem-2.html
  - name: <
  - name: KeyType
  - name: ','
  - name: " "
  - name: ValueType
  - name: '>'
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Util.CollectionOps.GetKeyFromValueItem{`0,`1})
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
    name: GetKeyFromValueItem
    isExternal: true
    href: SuperOffice.Util.CollectionOps.GetKeyFromValueItem-2.html
  - name: (
  - name: Of
  - name: " "
  - name: KeyType
  - name: ','
  - name: " "
  - name: ValueType
  - name: )
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2
    name: GetKeyFromValueItem
    isExternal: true
    href: SuperOffice.Util.CollectionOps.GetKeyFromValueItem-2.html
  - name: (
  - name: Of
  - name: " "
  - name: KeyType
  - name: ','
  - name: " "
  - name: ValueType
  - name: )
  - name: )
- uid: '{ValueType}'
  commentId: '!:ValueType'
  definition: ValueType
  name: ValueType
  nameWithType: ValueType
  fullName: ValueType
- uid: '{KeyType}'
  commentId: '!:KeyType'
  definition: KeyType
  name: KeyType
  nameWithType: KeyType
  fullName: KeyType
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: ValueType
  name: ValueType
  nameWithType: ValueType
  fullName: ValueType
- uid: KeyType
  name: KeyType
  nameWithType: KeyType
  fullName: KeyType
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.#ctor*
  commentId: Overload:SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.#ctor
  isExternal: true
  href: SuperOffice.Util.CollectionOps.GetKeyFromValueItem-2.html#SuperOffice_Util_CollectionOps_GetKeyFromValueItem_2__ctor_System_Object_System_IntPtr_
  name: GetKeyFromValueItem
  nameWithType: CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.GetKeyFromValueItem
  fullName: SuperOffice.Util.CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.GetKeyFromValueItem
  nameWithType.vb: CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).New
  fullName.vb: SuperOffice.Util.CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).New
  name.vb: New
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.Invoke*
  commentId: Overload:SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.Invoke
  isExternal: true
  href: SuperOffice.Util.CollectionOps.GetKeyFromValueItem-2.html#SuperOffice_Util_CollectionOps_GetKeyFromValueItem_2_Invoke__1_
  name: Invoke
  nameWithType: CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.Invoke
  fullName: SuperOffice.Util.CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.Invoke
  nameWithType.vb: CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).Invoke
  fullName.vb: SuperOffice.Util.CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).Invoke
- uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.BeginInvoke*
  commentId: Overload:SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.BeginInvoke
  isExternal: true
  href: SuperOffice.Util.CollectionOps.GetKeyFromValueItem-2.html#SuperOffice_Util_CollectionOps_GetKeyFromValueItem_2_BeginInvoke__1_System_AsyncCallback_System_Object_
  name: BeginInvoke
  nameWithType: CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.BeginInvoke
  fullName: SuperOffice.Util.CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.BeginInvoke
  nameWithType.vb: CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).BeginInvoke
  fullName.vb: SuperOffice.Util.CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).BeginInvoke
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.asynccallback
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iasyncresult
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.EndInvoke*
  commentId: Overload:SuperOffice.Util.CollectionOps.GetKeyFromValueItem`2.EndInvoke
  isExternal: true
  href: SuperOffice.Util.CollectionOps.GetKeyFromValueItem-2.html#SuperOffice_Util_CollectionOps_GetKeyFromValueItem_2_EndInvoke_System_IAsyncResult_
  name: EndInvoke
  nameWithType: CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.EndInvoke
  fullName: SuperOffice.Util.CollectionOps.GetKeyFromValueItem<KeyType, ValueType>.EndInvoke
  nameWithType.vb: CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).EndInvoke
  fullName.vb: SuperOffice.Util.CollectionOps.GetKeyFromValueItem(Of KeyType, ValueType).EndInvoke
