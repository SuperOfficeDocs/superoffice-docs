### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions
  commentId: T:SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions
  id: DashboardTileDefinitionRecordDataExtensions
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo})
  - SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo})
  - SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData)
  - SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData})
  langs:
  - csharp
  - vb
  name: DashboardTileDefinitionRecordDataExtensions
  nameWithType: DashboardTileDefinitionRecordDataExtensions
  fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nExtension methods to make it easy to fetch <xref href=\"SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData\" data-throw-if-not-resolved=\"false\"></xref> objects from the database,\nusing the <see cref=\"!:TargetedSelect\"></see> infrastructure\n"
  syntax:
    content: public static class DashboardTileDefinitionRecordDataExtensions
    content.vb: Public Module DashboardTileDefinitionRecordDataExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo})
  commentId: M:SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo})
  id: FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo})
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions
  langs:
  - csharp
  - vb
  name: FromSelect(TargetedSelect<DashboardTileDefinitionTableInfo>)
  nameWithType: DashboardTileDefinitionRecordDataExtensions.FromSelect(TargetedSelect<DashboardTileDefinitionTableInfo>)
  fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect<SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFrom a TargetedSelect&lt;DashboardTileDefinitionTableInfo>, execute it and return an IEnumerable&lt;DashboardTileDefinitionRecordData> with the results\n"
  example:
  - >-
    <pre><code>            var s = S.NewSelect&lt;DataRightTableInfo>( /* add meaningful restrictions here, or later */ );
                var result = s.FromSelect();</code></pre>
  syntax:
    content: public static IEnumerable<DashboardTileDefinitionRecordData> FromSelect(this TargetedSelect<DashboardTileDefinitionTableInfo> select)
    parameters:
    - id: select
      type: SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo}
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FromSelect(select As TargetedSelect(Of DashboardTileDefinitionTableInfo)) As IEnumerable(Of DashboardTileDefinitionRecordData)
  overload: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromSelect*
  nameWithType.vb: DashboardTileDefinitionRecordDataExtensions.FromSelect(TargetedSelect(Of DashboardTileDefinitionTableInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect(Of SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo))
  name.vb: FromSelect(TargetedSelect(Of DashboardTileDefinitionTableInfo))
- uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo})
  commentId: M:SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo})
  id: FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo})
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions
  langs:
  - csharp
  - vb
  name: FromRecord(TargetedDataRecord<DashboardTileDefinitionTableInfo>)
  nameWithType: DashboardTileDefinitionRecordDataExtensions.FromRecord(TargetedDataRecord<DashboardTileDefinitionTableInfo>)
  fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord<SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFrom a TargetedDataRecord&lt;DashboardTileDefinitionTableInfo>, create and populate a <xref href=\"SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData\" data-throw-if-not-resolved=\"false\"></xref> POCO object\n"
  example:
  - >-
    <pre><code>            var s = S.NewSelect&lt;DataRightTableInfo>( /* add meaningful restrictions here, or later */ );
                /* add joins, return fields etc. as you wish */
                s.ReturnFields.Add(s.Table.All);
                var result = s.Records().Select(r => new { DashboardTileDefinitionItem = r.FromRecord(), /* fetch other fields here */ });</code></pre>
  syntax:
    content: public static DashboardTileDefinitionRecordData FromRecord(this TargetedDataRecord<DashboardTileDefinitionTableInfo> record)
    parameters:
    - id: record
      type: SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo}
    return:
      type: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FromRecord(record As TargetedDataRecord(Of DashboardTileDefinitionTableInfo)) As DashboardTileDefinitionRecordData
  overload: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromRecord*
  nameWithType.vb: DashboardTileDefinitionRecordDataExtensions.FromRecord(TargetedDataRecord(Of DashboardTileDefinitionTableInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord(Of SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo))
  name.vb: FromRecord(TargetedDataRecord(Of DashboardTileDefinitionTableInfo))
- uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData)
  commentId: M:SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData)
  id: ToInsert(SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData)
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions
  langs:
  - csharp
  - vb
  name: ToInsert(DashboardTileDefinitionRecordData)
  nameWithType: DashboardTileDefinitionRecordDataExtensions.ToInsert(DashboardTileDefinitionRecordData)
  fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public static Insert ToInsert(this DashboardTileDefinitionRecordData record)
    parameters:
    - id: record
      type: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData
    return:
      type: SuperOffice.Data.SQL.Insert
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToInsert(record As DashboardTileDefinitionRecordData) As Insert
  overload: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInsert*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData})
  commentId: M:SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData})
  id: ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData})
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions
  langs:
  - csharp
  - vb
  name: ToInserts(IEnumerable<DashboardTileDefinitionRecordData>)
  nameWithType: DashboardTileDefinitionRecordDataExtensions.ToInserts(IEnumerable<DashboardTileDefinitionRecordData>)
  fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public static IEnumerable<Insert> ToInserts(this IEnumerable<DashboardTileDefinitionRecordData> records)
    parameters:
    - id: records
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData}
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.Insert}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToInserts(records As IEnumerable(Of DashboardTileDefinitionRecordData)) As IEnumerable(Of Insert)
  overload: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInserts*
  nameWithType.vb: DashboardTileDefinitionRecordDataExtensions.ToInserts(IEnumerable(Of DashboardTileDefinitionRecordData))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData))
  name.vb: ToInserts(IEnumerable(Of DashboardTileDefinitionRecordData))
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromSelect*
  commentId: Overload:SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromSelect
  isExternal: true
  name: FromSelect
  nameWithType: DashboardTileDefinitionRecordDataExtensions.FromSelect
  fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromSelect
- uid: SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedSelect`1
  name: TargetedSelect<DashboardTileDefinitionTableInfo>
  nameWithType: TargetedSelect<DashboardTileDefinitionTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedSelect<SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo>
  nameWithType.vb: TargetedSelect(Of DashboardTileDefinitionTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedSelect(Of SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo)
  name.vb: TargetedSelect(Of DashboardTileDefinitionTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo
    name: DashboardTileDefinitionTableInfo
    nameWithType: DashboardTileDefinitionTableInfo
    fullName: SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo
    name: DashboardTileDefinitionTableInfo
    nameWithType: DashboardTileDefinitionTableInfo
    fullName: SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<DashboardTileDefinitionRecordData>
  nameWithType: IEnumerable<DashboardTileDefinitionRecordData>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData>
  nameWithType.vb: IEnumerable(Of DashboardTileDefinitionRecordData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData)
  name.vb: IEnumerable(Of DashboardTileDefinitionRecordData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData
    name: DashboardTileDefinitionRecordData
    nameWithType: DashboardTileDefinitionRecordData
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData
    name: DashboardTileDefinitionRecordData
    nameWithType: DashboardTileDefinitionRecordData
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TargetedSelect`1
  commentId: T:SuperOffice.Data.SQL.TargetedSelect`1
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TargetedSelect<MainTableInfo>
  nameWithType: TargetedSelect<MainTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedSelect<MainTableInfo>
  nameWithType.vb: TargetedSelect(Of MainTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedSelect(Of MainTableInfo)
  name.vb: TargetedSelect(Of MainTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromRecord*
  commentId: Overload:SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromRecord
  isExternal: true
  name: FromRecord
  nameWithType: DashboardTileDefinitionRecordDataExtensions.FromRecord
  fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.FromRecord
- uid: SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedDataRecord`1
  name: TargetedDataRecord<DashboardTileDefinitionTableInfo>
  nameWithType: TargetedDataRecord<DashboardTileDefinitionTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedDataRecord<SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo>
  nameWithType.vb: TargetedDataRecord(Of DashboardTileDefinitionTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedDataRecord(Of SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo)
  name.vb: TargetedDataRecord(Of DashboardTileDefinitionTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo
    name: DashboardTileDefinitionTableInfo
    nameWithType: DashboardTileDefinitionTableInfo
    fullName: SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo
    name: DashboardTileDefinitionTableInfo
    nameWithType: DashboardTileDefinitionTableInfo
    fullName: SuperOffice.CRM.Data.DashboardTileDefinitionTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData
  commentId: T:SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: DashboardTileDefinitionRecordData
  nameWithType: DashboardTileDefinitionRecordData
  fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordData
- uid: SuperOffice.Data.SQL.TargetedDataRecord`1
  commentId: T:SuperOffice.Data.SQL.TargetedDataRecord`1
  isExternal: true
  name: TargetedDataRecord<MainTableInfo>
  nameWithType: TargetedDataRecord<MainTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedDataRecord<MainTableInfo>
  nameWithType.vb: TargetedDataRecord(Of MainTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedDataRecord(Of MainTableInfo)
  name.vb: TargetedDataRecord(Of MainTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInsert*
  commentId: Overload:SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInsert
  isExternal: true
  name: ToInsert
  nameWithType: DashboardTileDefinitionRecordDataExtensions.ToInsert
  fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInsert
- uid: SuperOffice.Data.SQL.Insert
  commentId: T:SuperOffice.Data.SQL.Insert
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Insert
  nameWithType: Insert
  fullName: SuperOffice.Data.SQL.Insert
- uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInserts*
  commentId: Overload:SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInserts
  isExternal: true
  name: ToInserts
  nameWithType: DashboardTileDefinitionRecordDataExtensions.ToInserts
  fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRecordDataExtensions.ToInserts
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.Insert}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.Insert}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Insert>
  nameWithType: IEnumerable<Insert>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.Insert>
  nameWithType.vb: IEnumerable(Of Insert)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.Insert)
  name.vb: IEnumerable(Of Insert)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.Insert
    name: Insert
    nameWithType: Insert
    fullName: SuperOffice.Data.SQL.Insert
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.Insert
    name: Insert
    nameWithType: Insert
    fullName: SuperOffice.Data.SQL.Insert
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
