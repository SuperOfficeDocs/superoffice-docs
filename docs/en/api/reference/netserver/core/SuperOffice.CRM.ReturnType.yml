### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ReturnType
  commentId: T:SuperOffice.CRM.ReturnType
  id: ReturnType
  parent: SuperOffice.CRM
  children:
  - SuperOffice.CRM.ReturnType.CustomGui
  - SuperOffice.CRM.ReturnType.Message
  - SuperOffice.CRM.ReturnType.None
  - SuperOffice.CRM.ReturnType.Other
  - SuperOffice.CRM.ReturnType.SoProtocol
  - SuperOffice.CRM.ReturnType.URL
  - SuperOffice.CRM.ReturnType.value__
  langs:
  - csharp
  - vb
  name: ReturnType
  nameWithType: ReturnType
  fullName: SuperOffice.CRM.ReturnType
  type: Class
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nHow should a return value from an API call or command be interpreted by the caller\n"
  remarks: "\nTogether with the <xref href=\"SuperOffice.CRM.ReturnInfo\" data-throw-if-not-resolved=\"false\"></xref> data class, this type opens the possibility\nfor programming fairly complex workflows, with multiple roundtrips chained from one \nreturn to the next.\n<p></p>\nThe disadvantage is that it places a responsibility on the author for choosing which\nclients to support, and to what extent - noting that the number of clients is always\nincreasing, and that clients can have vastly different capabilities; from server-room\nsync processes that have no user interaction at all, to full-featured web or windows\nclients.\n"
  syntax:
    content: 'public sealed class ReturnType : Enum'
    content.vb: >-
      Public NotInheritable Class ReturnType
          Inherits

           Enum
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.ReturnType.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ReturnType.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.ReturnType.value__
  commentId: F:SuperOffice.CRM.ReturnType.value__
  id: value__
  parent: SuperOffice.CRM.ReturnType
  langs:
  - csharp
  - vb
  name: value__
  nameWithType: ReturnType.value__
  fullName: SuperOffice.CRM.ReturnType.value__
  type: Field
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  syntax:
    content: public int value__
    return:
      type: System.Int32
    content.vb: Public value__ As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ReturnType.None
  commentId: F:SuperOffice.CRM.ReturnType.None
  id: None
  parent: SuperOffice.CRM.ReturnType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: ReturnType.None
  fullName: SuperOffice.CRM.ReturnType.None
  type: Field
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\n0: There is no return value to be parsed.\n"
  syntax:
    content: public const ReturnType None
    return:
      type: SuperOffice.CRM.ReturnType
    content.vb: Public Const None As ReturnType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.ReturnType.Message
  commentId: F:SuperOffice.CRM.ReturnType.Message
  id: Message
  parent: SuperOffice.CRM.ReturnType
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ReturnType.Message
  fullName: SuperOffice.CRM.ReturnType.Message
  type: Field
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\n1: The return value is a string, to be shown to the user as a message. A modal dialog box for example.\n"
  syntax:
    content: public const ReturnType Message
    return:
      type: SuperOffice.CRM.ReturnType
    content.vb: Public Const Message As ReturnType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.ReturnType.SoProtocol
  commentId: F:SuperOffice.CRM.ReturnType.SoProtocol
  id: SoProtocol
  parent: SuperOffice.CRM.ReturnType
  langs:
  - csharp
  - vb
  name: SoProtocol
  nameWithType: ReturnType.SoProtocol
  fullName: SuperOffice.CRM.ReturnType.SoProtocol
  type: Field
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\n2: SoProtocol. The return value is an soprotocol-compliant navigation string, to be parsed\naccording to the rules for soprotocol strings. e.g. &quot;contact.main?contact_id=123&quot;\n"
  syntax:
    content: public const ReturnType SoProtocol
    return:
      type: SuperOffice.CRM.ReturnType
    content.vb: Public Const SoProtocol As ReturnType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.ReturnType.CustomGui
  commentId: F:SuperOffice.CRM.ReturnType.CustomGui
  id: CustomGui
  parent: SuperOffice.CRM.ReturnType
  langs:
  - csharp
  - vb
  name: CustomGui
  nameWithType: ReturnType.CustomGui
  fullName: SuperOffice.CRM.ReturnType.CustomGui
  type: Field
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\n3: The return value is the name of a custom GUI. The GetCustomGui method on the \ndocument plugin will be invoked, and the resulting GUI rendered.\n"
  syntax:
    content: public const ReturnType CustomGui
    return:
      type: SuperOffice.CRM.ReturnType
    content.vb: Public Const CustomGui As ReturnType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.ReturnType.Other
  commentId: F:SuperOffice.CRM.ReturnType.Other
  id: Other
  parent: SuperOffice.CRM.ReturnType
  langs:
  - csharp
  - vb
  name: Other
  nameWithType: ReturnType.Other
  fullName: SuperOffice.CRM.ReturnType.Other
  type: Field
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\n4: The return value is intended for custom processing; this implies that the document plugin\nhas installed some component on the intended client that will intercept and handle\nthis return value. \n<br />Note that this requires advanced knowledge of the client and its\nconstruction and navigation. Also note that this will make the functionality client-specific,\nso that it may not be available or work as intended on clients not specifically\nsupported or known.\n"
  syntax:
    content: public const ReturnType Other
    return:
      type: SuperOffice.CRM.ReturnType
    content.vb: Public Const Other As ReturnType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.ReturnType.URL
  commentId: F:SuperOffice.CRM.ReturnType.URL
  id: URL
  parent: SuperOffice.CRM.ReturnType
  langs:
  - csharp
  - vb
  name: URL
  nameWithType: ReturnType.URL
  fullName: SuperOffice.CRM.ReturnType.URL
  type: Field
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\n5: The return value is a URL that should be opened in a new window.\n"
  syntax:
    content: public const ReturnType URL
    return:
      type: SuperOffice.CRM.ReturnType
    content.vb: Public Const URL As ReturnType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.CRM
  commentId: N:SuperOffice.CRM
  isExternal: true
  name: SuperOffice.CRM
  nameWithType: SuperOffice.CRM
  fullName: SuperOffice.CRM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.ReturnType.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ReturnType, To>()
  nameWithType: EnumUtil.MapEnums<ReturnType, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ReturnType, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ReturnType, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ReturnType, To)()
  name.vb: MapEnums(Of ReturnType, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ReturnType, To>
    nameWithType: EnumUtil.MapEnums<ReturnType, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ReturnType, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ReturnType, To)
    nameWithType: EnumUtil.MapEnums(Of ReturnType, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ReturnType, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ReturnType.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ReturnType, To>()
  nameWithType: Converters.MapEnums<ReturnType, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ReturnType, To>()
  nameWithType.vb: Converters.MapEnums(Of ReturnType, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ReturnType, To)()
  name.vb: MapEnums(Of ReturnType, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ReturnType, To>
    nameWithType: Converters.MapEnums<ReturnType, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ReturnType, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ReturnType, To)
    nameWithType: Converters.MapEnums(Of ReturnType, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ReturnType, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.ReturnType
  commentId: T:SuperOffice.CRM.ReturnType
  parent: SuperOffice.CRM
  isExternal: true
  name: ReturnType
  nameWithType: ReturnType
  fullName: SuperOffice.CRM.ReturnType
