### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.Cache.CacheManager
  commentId: T:SuperOffice.Data.Cache.CacheManager
  id: CacheManager
  parent: SuperOffice.Data.Cache
  children:
  - SuperOffice.Data.Cache.CacheManager.Dispose
  - SuperOffice.Data.Cache.CacheManager.Get(System.Type)
  - SuperOffice.Data.Cache.CacheManager.Get``1
  - SuperOffice.Data.Cache.CacheManager.GetAllCachesInContext
  - SuperOffice.Data.Cache.CacheManager.IsAutoUpdateDisabled(System.String)
  langs:
  - csharp
  - vb
  name: CacheManager
  nameWithType: CacheManager
  fullName: SuperOffice.Data.Cache.CacheManager
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  summary: "\nUtility class for dealing with caches.\n"
  syntax:
    content: >-
      [SoInject("Database")]

      public class CacheManager : IDisposable
    content.vb: >-
      <SoInject("Database")>

      Public Class CacheManager
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.Cache.CacheManager.EnumUtil.MapEnums``2
  - SuperOffice.Data.Cache.CacheManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Factory.SoInjectAttribute
    ctor: SuperOffice.Factory.SoInjectAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Database
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Data.Cache.CacheManager.Dispose
  commentId: M:SuperOffice.Data.Cache.CacheManager.Dispose
  id: Dispose
  parent: SuperOffice.Data.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: CacheManager.Dispose()
  fullName: SuperOffice.Data.Cache.CacheManager.Dispose()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: SuperOffice.Data.Cache.CacheManager.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Cache.CacheManager.Get(System.Type)
  commentId: M:SuperOffice.Data.Cache.CacheManager.Get(System.Type)
  id: Get(System.Type)
  parent: SuperOffice.Data.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: Get(Type)
  nameWithType: CacheManager.Get(Type)
  fullName: SuperOffice.Data.Cache.CacheManager.Get(System.Type)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  summary: "\nGet a cache given its&apos; type.\n"
  syntax:
    content: public CacheBaseV2 Get(Type cacheType)
    parameters:
    - id: cacheType
      type: System.Type
      description: Type of the cache
    return:
      type: SuperOffice.Data.Cache.CacheBaseV2
      description: Instance of the given cache
    content.vb: Public Function Get(cacheType As Type) As CacheBaseV2
  overload: SuperOffice.Data.Cache.CacheManager.Get*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Cache.CacheManager.Get``1
  commentId: M:SuperOffice.Data.Cache.CacheManager.Get``1
  id: Get``1
  parent: SuperOffice.Data.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: Get<T>()
  nameWithType: CacheManager.Get<T>()
  fullName: SuperOffice.Data.Cache.CacheManager.Get<T>()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  summary: "\nGet a cache given its type.\n"
  syntax:
    content: >-
      public T Get<T>()
          where T : CacheBaseV2
    typeParameters:
    - id: T
      description: Type of the cache
    return:
      type: '{T}'
      description: Instance of the given cache
    content.vb: Public Function Get(Of T As CacheBaseV2) As T
  overload: SuperOffice.Data.Cache.CacheManager.Get*
  nameWithType.vb: CacheManager.Get(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Data.Cache.CacheManager.Get(Of T)()
  name.vb: Get(Of T)()
- uid: SuperOffice.Data.Cache.CacheManager.GetAllCachesInContext
  commentId: M:SuperOffice.Data.Cache.CacheManager.GetAllCachesInContext
  id: GetAllCachesInContext
  parent: SuperOffice.Data.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: GetAllCachesInContext()
  nameWithType: CacheManager.GetAllCachesInContext()
  fullName: SuperOffice.Data.Cache.CacheManager.GetAllCachesInContext()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  syntax:
    content: public IEnumerable<IFlushableV2> GetAllCachesInContext()
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.Data.Cache.IFlushableV2}
    content.vb: Public Function GetAllCachesInContext As IEnumerable(Of IFlushableV2)
  overload: SuperOffice.Data.Cache.CacheManager.GetAllCachesInContext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Cache.CacheManager.IsAutoUpdateDisabled(System.String)
  commentId: M:SuperOffice.Data.Cache.CacheManager.IsAutoUpdateDisabled(System.String)
  id: IsAutoUpdateDisabled(System.String)
  parent: SuperOffice.Data.Cache.CacheManager
  langs:
  - csharp
  - vb
  name: IsAutoUpdateDisabled(String)
  nameWithType: CacheManager.IsAutoUpdateDisabled(String)
  fullName: SuperOffice.Data.Cache.CacheManager.IsAutoUpdateDisabled(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  summary: "\nDetermine if automatic updates are disabled for a particular table (not a particular cache!)\n"
  syntax:
    content: public bool IsAutoUpdateDisabled(string tableName)
    parameters:
    - id: tableName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsAutoUpdateDisabled(tableName As String) As Boolean
  overload: SuperOffice.Data.Cache.CacheManager.IsAutoUpdateDisabled*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Data.Cache
  commentId: N:SuperOffice.Data.Cache
  isExternal: true
  name: SuperOffice.Data.Cache
  nameWithType: SuperOffice.Data.Cache
  fullName: SuperOffice.Data.Cache
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheManager.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<CacheManager, To>()
  nameWithType: EnumUtil.MapEnums<CacheManager, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.Cache.CacheManager, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of CacheManager, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.Cache.CacheManager, To)()
  name.vb: MapEnums(Of CacheManager, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<CacheManager, To>
    nameWithType: EnumUtil.MapEnums<CacheManager, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.Cache.CacheManager, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of CacheManager, To)
    nameWithType: EnumUtil.MapEnums(Of CacheManager, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.Cache.CacheManager, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<CacheManager, To>()
  nameWithType: Converters.MapEnums<CacheManager, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Cache.CacheManager, To>()
  nameWithType.vb: Converters.MapEnums(Of CacheManager, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Cache.CacheManager, To)()
  name.vb: MapEnums(Of CacheManager, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<CacheManager, To>
    nameWithType: Converters.MapEnums<CacheManager, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Cache.CacheManager, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of CacheManager, To)
    nameWithType: Converters.MapEnums(Of CacheManager, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Cache.CacheManager, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.Cache.CacheManager.Dispose*
  commentId: Overload:SuperOffice.Data.Cache.CacheManager.Dispose
  isExternal: true
  name: Dispose
  nameWithType: CacheManager.Dispose
  fullName: SuperOffice.Data.Cache.CacheManager.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheManager.Get*
  commentId: Overload:SuperOffice.Data.Cache.CacheManager.Get
  isExternal: true
  name: Get
  nameWithType: CacheManager.Get
  fullName: SuperOffice.Data.Cache.CacheManager.Get
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: SuperOffice.Data.Cache.CacheBaseV2
  commentId: T:SuperOffice.Data.Cache.CacheBaseV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: CacheBaseV2
  nameWithType: CacheBaseV2
  fullName: SuperOffice.Data.Cache.CacheBaseV2
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: SuperOffice.Data.Cache.CacheManager.GetAllCachesInContext*
  commentId: Overload:SuperOffice.Data.Cache.CacheManager.GetAllCachesInContext
  isExternal: true
  name: GetAllCachesInContext
  nameWithType: CacheManager.GetAllCachesInContext
  fullName: SuperOffice.Data.Cache.CacheManager.GetAllCachesInContext
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.Cache.IFlushableV2}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.Data.Cache.IFlushableV2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IFlushableV2>
  nameWithType: IEnumerable<IFlushableV2>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.Data.Cache.IFlushableV2>
  nameWithType.vb: IEnumerable(Of IFlushableV2)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.Data.Cache.IFlushableV2)
  name.vb: IEnumerable(Of IFlushableV2)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.Cache.IFlushableV2
    name: IFlushableV2
    nameWithType: IFlushableV2
    fullName: SuperOffice.Data.Cache.IFlushableV2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.Cache.IFlushableV2
    name: IFlushableV2
    nameWithType: IFlushableV2
    fullName: SuperOffice.Data.Cache.IFlushableV2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.Data.Cache.CacheManager.IsAutoUpdateDisabled*
  commentId: Overload:SuperOffice.Data.Cache.CacheManager.IsAutoUpdateDisabled
  isExternal: true
  name: IsAutoUpdateDisabled
  nameWithType: CacheManager.IsAutoUpdateDisabled
  fullName: SuperOffice.Data.Cache.CacheManager.IsAutoUpdateDisabled
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
