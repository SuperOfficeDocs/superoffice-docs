### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.S.Math
  commentId: T:SuperOffice.Data.S.Math
  id: S.Math
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.S.Math.NewAdd(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.S.Math.NewAdd(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.S.Math.NewDivide(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.S.Math.NewDivide(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.S.Math.NewGreatest(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.S.Math.NewGreatest(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.S.Math.NewMultiply(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.S.Math.NewMultiply(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.S.Math.NewSubtract(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.S.Math.NewSubtract(SuperOffice.Data.SQL.Argument[])
  langs:
  - csharp
  - vb
  name: S.Math
  nameWithType: S.Math
  fullName: SuperOffice.Data.S.Math
  type: Class
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public static class S.Math
    content.vb: Public Module S.Math
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: SuperOffice.Data.S.Math.NewAdd(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.S.Math.NewAdd(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  id: NewAdd(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.S.Math
  langs:
  - csharp
  - vb
  name: NewAdd(Argument, Argument)
  nameWithType: S.Math.NewAdd(Argument, Argument)
  fullName: SuperOffice.Data.S.Math.NewAdd(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Add
  example: []
  syntax:
    content: public static Add NewAdd(Argument left, Argument right)
    parameters:
    - id: left
      type: SuperOffice.Data.SQL.Argument
      description: The left-hand-side argument.
    - id: right
      type: SuperOffice.Data.SQL.Argument
      description: The right-hand-side argument.
    return:
      type: SuperOffice.Data.SQL.Add
      description: ''
    content.vb: Public Shared Function NewAdd(left As Argument, right As Argument) As Add
  overload: SuperOffice.Data.S.Math.NewAdd*
- uid: SuperOffice.Data.S.Math.NewAdd(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.S.Math.NewAdd(SuperOffice.Data.SQL.Argument[])
  id: NewAdd(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.S.Math
  langs:
  - csharp
  - vb
  name: NewAdd(params Argument[])
  nameWithType: S.Math.NewAdd(params Argument[])
  fullName: SuperOffice.Data.S.Math.NewAdd(params SuperOffice.Data.SQL.Argument[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Add. Takes an array of Arguments as parameter.
  example: []
  syntax:
    content: public static Add NewAdd(params Argument[] arguments)
    parameters:
    - id: arguments
      type: SuperOffice.Data.SQL.Argument[]
      description: The array of arguments.
    return:
      type: SuperOffice.Data.SQL.Add
      description: ''
    content.vb: Public Shared Function NewAdd(ParamArray arguments As Argument()) As Add
  overload: SuperOffice.Data.S.Math.NewAdd*
  nameWithType.vb: S.Math.NewAdd(ParamArray Argument())
  fullName.vb: SuperOffice.Data.S.Math.NewAdd(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: NewAdd(ParamArray Argument())
- uid: SuperOffice.Data.S.Math.NewGreatest(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.S.Math.NewGreatest(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  id: NewGreatest(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.S.Math
  langs:
  - csharp
  - vb
  name: NewGreatest(Argument, Argument)
  nameWithType: S.Math.NewGreatest(Argument, Argument)
  fullName: SuperOffice.Data.S.Math.NewGreatest(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public static Greatest NewGreatest(Argument left, Argument right)
    parameters:
    - id: left
      type: SuperOffice.Data.SQL.Argument
    - id: right
      type: SuperOffice.Data.SQL.Argument
    return:
      type: SuperOffice.Data.SQL.Greatest
    content.vb: Public Shared Function NewGreatest(left As Argument, right As Argument) As Greatest
  overload: SuperOffice.Data.S.Math.NewGreatest*
- uid: SuperOffice.Data.S.Math.NewGreatest(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.S.Math.NewGreatest(SuperOffice.Data.SQL.Argument[])
  id: NewGreatest(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.S.Math
  langs:
  - csharp
  - vb
  name: NewGreatest(params Argument[])
  nameWithType: S.Math.NewGreatest(params Argument[])
  fullName: SuperOffice.Data.S.Math.NewGreatest(params SuperOffice.Data.SQL.Argument[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public static Greatest NewGreatest(params Argument[] arguments)
    parameters:
    - id: arguments
      type: SuperOffice.Data.SQL.Argument[]
    return:
      type: SuperOffice.Data.SQL.Greatest
    content.vb: Public Shared Function NewGreatest(ParamArray arguments As Argument()) As Greatest
  overload: SuperOffice.Data.S.Math.NewGreatest*
  nameWithType.vb: S.Math.NewGreatest(ParamArray Argument())
  fullName.vb: SuperOffice.Data.S.Math.NewGreatest(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: NewGreatest(ParamArray Argument())
- uid: SuperOffice.Data.S.Math.NewSubtract(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.S.Math.NewSubtract(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  id: NewSubtract(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.S.Math
  langs:
  - csharp
  - vb
  name: NewSubtract(Argument, Argument)
  nameWithType: S.Math.NewSubtract(Argument, Argument)
  fullName: SuperOffice.Data.S.Math.NewSubtract(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Subtract
  example: []
  syntax:
    content: public static Subtract NewSubtract(Argument left, Argument right)
    parameters:
    - id: left
      type: SuperOffice.Data.SQL.Argument
      description: The left-hand-side argument.
    - id: right
      type: SuperOffice.Data.SQL.Argument
      description: The right-hand-side argument.
    return:
      type: SuperOffice.Data.SQL.Subtract
      description: ''
    content.vb: Public Shared Function NewSubtract(left As Argument, right As Argument) As Subtract
  overload: SuperOffice.Data.S.Math.NewSubtract*
- uid: SuperOffice.Data.S.Math.NewSubtract(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.S.Math.NewSubtract(SuperOffice.Data.SQL.Argument[])
  id: NewSubtract(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.S.Math
  langs:
  - csharp
  - vb
  name: NewSubtract(params Argument[])
  nameWithType: S.Math.NewSubtract(params Argument[])
  fullName: SuperOffice.Data.S.Math.NewSubtract(params SuperOffice.Data.SQL.Argument[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Subtract. Takes an array of Arguments as parameter.
  example: []
  syntax:
    content: public static Subtract NewSubtract(params Argument[] arguments)
    parameters:
    - id: arguments
      type: SuperOffice.Data.SQL.Argument[]
      description: The array of arguments.
    return:
      type: SuperOffice.Data.SQL.Subtract
      description: ''
    content.vb: Public Shared Function NewSubtract(ParamArray arguments As Argument()) As Subtract
  overload: SuperOffice.Data.S.Math.NewSubtract*
  nameWithType.vb: S.Math.NewSubtract(ParamArray Argument())
  fullName.vb: SuperOffice.Data.S.Math.NewSubtract(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: NewSubtract(ParamArray Argument())
- uid: SuperOffice.Data.S.Math.NewMultiply(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.S.Math.NewMultiply(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  id: NewMultiply(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.S.Math
  langs:
  - csharp
  - vb
  name: NewMultiply(Argument, Argument)
  nameWithType: S.Math.NewMultiply(Argument, Argument)
  fullName: SuperOffice.Data.S.Math.NewMultiply(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Multiply
  example: []
  syntax:
    content: public static Multiply NewMultiply(Argument left, Argument right)
    parameters:
    - id: left
      type: SuperOffice.Data.SQL.Argument
      description: The left-hand-side argument.
    - id: right
      type: SuperOffice.Data.SQL.Argument
      description: The right-hand-side argument.
    return:
      type: SuperOffice.Data.SQL.Multiply
      description: ''
    content.vb: Public Shared Function NewMultiply(left As Argument, right As Argument) As Multiply
  overload: SuperOffice.Data.S.Math.NewMultiply*
- uid: SuperOffice.Data.S.Math.NewMultiply(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.S.Math.NewMultiply(SuperOffice.Data.SQL.Argument[])
  id: NewMultiply(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.S.Math
  langs:
  - csharp
  - vb
  name: NewMultiply(params Argument[])
  nameWithType: S.Math.NewMultiply(params Argument[])
  fullName: SuperOffice.Data.S.Math.NewMultiply(params SuperOffice.Data.SQL.Argument[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Multiply. Takes an array of Arguments as parameter.
  example: []
  syntax:
    content: public static Multiply NewMultiply(params Argument[] arguments)
    parameters:
    - id: arguments
      type: SuperOffice.Data.SQL.Argument[]
      description: The array of arguments.
    return:
      type: SuperOffice.Data.SQL.Multiply
      description: ''
    content.vb: Public Shared Function NewMultiply(ParamArray arguments As Argument()) As Multiply
  overload: SuperOffice.Data.S.Math.NewMultiply*
  nameWithType.vb: S.Math.NewMultiply(ParamArray Argument())
  fullName.vb: SuperOffice.Data.S.Math.NewMultiply(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: NewMultiply(ParamArray Argument())
- uid: SuperOffice.Data.S.Math.NewDivide(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.S.Math.NewDivide(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  id: NewDivide(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.S.Math
  langs:
  - csharp
  - vb
  name: NewDivide(Argument, Argument)
  nameWithType: S.Math.NewDivide(Argument, Argument)
  fullName: SuperOffice.Data.S.Math.NewDivide(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Divide.
  example: []
  syntax:
    content: public static Divide NewDivide(Argument left, Argument right)
    parameters:
    - id: left
      type: SuperOffice.Data.SQL.Argument
      description: The left-hand-side argument.
    - id: right
      type: SuperOffice.Data.SQL.Argument
      description: The right-hand-side argument.
    return:
      type: SuperOffice.Data.SQL.Divide
      description: ''
    content.vb: Public Shared Function NewDivide(left As Argument, right As Argument) As Divide
  overload: SuperOffice.Data.S.Math.NewDivide*
- uid: SuperOffice.Data.S.Math.NewDivide(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.S.Math.NewDivide(SuperOffice.Data.SQL.Argument[])
  id: NewDivide(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.S.Math
  langs:
  - csharp
  - vb
  name: NewDivide(params Argument[])
  nameWithType: S.Math.NewDivide(params Argument[])
  fullName: SuperOffice.Data.S.Math.NewDivide(params SuperOffice.Data.SQL.Argument[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Divide. Takes an array of Arguments as parameter.
  example: []
  syntax:
    content: public static Divide NewDivide(params Argument[] arguments)
    parameters:
    - id: arguments
      type: SuperOffice.Data.SQL.Argument[]
      description: The array of arguments.
    return:
      type: SuperOffice.Data.SQL.Divide
      description: ''
    content.vb: Public Shared Function NewDivide(ParamArray arguments As Argument()) As Divide
  overload: SuperOffice.Data.S.Math.NewDivide*
  nameWithType.vb: S.Math.NewDivide(ParamArray Argument())
  fullName.vb: SuperOffice.Data.S.Math.NewDivide(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: NewDivide(ParamArray Argument())
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.S.Math.NewAdd*
  commentId: Overload:SuperOffice.Data.S.Math.NewAdd
  isExternal: true
  href: SuperOffice.Data.S.Math.html#SuperOffice_Data_S_Math_NewAdd_SuperOffice_Data_SQL_Argument_SuperOffice_Data_SQL_Argument_
  name: NewAdd
  nameWithType: S.Math.NewAdd
  fullName: SuperOffice.Data.S.Math.NewAdd
- uid: SuperOffice.Data.SQL.Argument
  commentId: T:SuperOffice.Data.SQL.Argument
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html
  name: Argument
  nameWithType: Argument
  fullName: SuperOffice.Data.SQL.Argument
- uid: SuperOffice.Data.SQL.Add
  commentId: T:SuperOffice.Data.SQL.Add
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Add.html
  name: Add
  nameWithType: Add
  fullName: SuperOffice.Data.SQL.Add
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
- uid: SuperOffice.Data.SQL.Argument[]
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html
  name: Argument[]
  nameWithType: Argument[]
  fullName: SuperOffice.Data.SQL.Argument[]
  nameWithType.vb: Argument()
  fullName.vb: SuperOffice.Data.SQL.Argument()
  name.vb: Argument()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: (
  - name: )
- uid: SuperOffice.Data.S.Math.NewGreatest*
  commentId: Overload:SuperOffice.Data.S.Math.NewGreatest
  isExternal: true
  href: SuperOffice.Data.S.Math.html#SuperOffice_Data_S_Math_NewGreatest_SuperOffice_Data_SQL_Argument_SuperOffice_Data_SQL_Argument_
  name: NewGreatest
  nameWithType: S.Math.NewGreatest
  fullName: SuperOffice.Data.S.Math.NewGreatest
- uid: SuperOffice.Data.SQL.Greatest
  commentId: T:SuperOffice.Data.SQL.Greatest
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Greatest.html
  name: Greatest
  nameWithType: Greatest
  fullName: SuperOffice.Data.SQL.Greatest
- uid: SuperOffice.Data.S.Math.NewSubtract*
  commentId: Overload:SuperOffice.Data.S.Math.NewSubtract
  isExternal: true
  href: SuperOffice.Data.S.Math.html#SuperOffice_Data_S_Math_NewSubtract_SuperOffice_Data_SQL_Argument_SuperOffice_Data_SQL_Argument_
  name: NewSubtract
  nameWithType: S.Math.NewSubtract
  fullName: SuperOffice.Data.S.Math.NewSubtract
- uid: SuperOffice.Data.SQL.Subtract
  commentId: T:SuperOffice.Data.SQL.Subtract
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Subtract.html
  name: Subtract
  nameWithType: Subtract
  fullName: SuperOffice.Data.SQL.Subtract
- uid: SuperOffice.Data.S.Math.NewMultiply*
  commentId: Overload:SuperOffice.Data.S.Math.NewMultiply
  isExternal: true
  href: SuperOffice.Data.S.Math.html#SuperOffice_Data_S_Math_NewMultiply_SuperOffice_Data_SQL_Argument_SuperOffice_Data_SQL_Argument_
  name: NewMultiply
  nameWithType: S.Math.NewMultiply
  fullName: SuperOffice.Data.S.Math.NewMultiply
- uid: SuperOffice.Data.SQL.Multiply
  commentId: T:SuperOffice.Data.SQL.Multiply
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Multiply.html
  name: Multiply
  nameWithType: Multiply
  fullName: SuperOffice.Data.SQL.Multiply
- uid: SuperOffice.Data.S.Math.NewDivide*
  commentId: Overload:SuperOffice.Data.S.Math.NewDivide
  isExternal: true
  href: SuperOffice.Data.S.Math.html#SuperOffice_Data_S_Math_NewDivide_SuperOffice_Data_SQL_Argument_SuperOffice_Data_SQL_Argument_
  name: NewDivide
  nameWithType: S.Math.NewDivide
  fullName: SuperOffice.Data.S.Math.NewDivide
- uid: SuperOffice.Data.SQL.Divide
  commentId: T:SuperOffice.Data.SQL.Divide
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Divide.html
  name: Divide
  nameWithType: Divide
  fullName: SuperOffice.Data.SQL.Divide
