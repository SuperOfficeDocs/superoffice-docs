### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Entities.ContactCollection
  commentId: T:SuperOffice.CRM.Entities.ContactCollection
  id: ContactCollection
  parent: SuperOffice.CRM.Entities
  children:
  - SuperOffice.CRM.Entities.ContactCollection.#ctor(SuperOffice.CRM.Entities.ContactCollection.ContactCollectionIdx)
  - SuperOffice.CRM.Entities.ContactCollection._idx
  - SuperOffice.CRM.Entities.ContactCollection._rows
  - SuperOffice.CRM.Entities.ContactCollection.Add(SuperOffice.CRM.Entities.Contact)
  - SuperOffice.CRM.Entities.ContactCollection.AddNew
  - SuperOffice.CRM.Entities.ContactCollection.CreateChild
  - SuperOffice.CRM.Entities.ContactCollection.CreateNew
  - SuperOffice.CRM.Entities.ContactCollection.GetFromCustomSearchAsync(SuperOffice.CRM.Entities.ContactCollection.CustomSearch,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ContactCollection.GetFromIdxBusinessIdxAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ContactCollection.GetFromIdxCategoryIdxAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ContactCollection.GetFromIdxDepartmentAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ContactCollection.GetFromIdxKananameAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ContactCollection.GetFromIdxMotherIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameDepartmentAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber1Async(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber2Async(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ContactCollection.GetFromIdxOrgNrAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSoundExAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSourceAsync(System.Int16,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdef2IdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdefIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ContactCollection.Index
  - SuperOffice.CRM.Entities.ContactCollection.Item(System.Int32)
  - SuperOffice.CRM.Entities.ContactCollection.Remove(SuperOffice.CRM.Entities.Contact)
  - SuperOffice.CRM.Entities.ContactCollection.Rows
  - SuperOffice.CRM.Entities.ContactCollection.Sentries
  - SuperOffice.CRM.Entities.ContactCollection.ToArray
  - SuperOffice.CRM.Entities.ContactCollection.ToString
  langs:
  - csharp
  - vb
  name: ContactCollection
  nameWithType: ContactCollection
  fullName: SuperOffice.CRM.Entities.ContactCollection
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\n<p>Companies and Organisations.  </p><p>This table features a special record containing information about the contact that owns the database.  </p>\nCollection of Contact. Each element of the collection represents one entity based on Contact.\n"
  remarks: "\nEntity collections can be created in several ways. \n<ul><li>Use the static <xref href=\"SuperOffice.CRM.Entities.ContactCollection.CreateNew\" data-throw-if-not-resolved=\"false\"></xref> method to create a new, empty collection. You can then add objects of type\n<see cref=\"!:SuperOffice.CRM.Rows.Contact\"></see> to it, and use methods like <see cref=\"!:Save\"></see> to operate on the whole collection.</li><li>You can create a (nested) ContactCollection <xref href=\"SuperOffice.CRM.Entities.ContactCollection.CustomSearch\" data-throw-if-not-resolved=\"false\"></xref> object to obtain a query pre-populated with\nthe correct tableinfo and return fields. This query can be modified with restrictions, etc. Then, use the static <see cref=\"!:GetFromCustomSearch\"></see> method\nto apply the query to the database and obtain the result as an EntityCollection object, with one item for each table row that matched your query.</li><li>For each non-unique index defined for the table, there is a corresponding GetFromIdx method to make retrieving data via the indexes easy.</li></ul>\nUnique indexes are handled through the <xref href=\"SuperOffice.CRM.Entities.Contact\" data-throw-if-not-resolved=\"false\"></xref> object directly,\nwhich has nested classes and GetFromIdx methods for each unique index. \n<p></p>Unique indexes on table Contact are: <table><thead><tr><th>Index fields</th><th>Nested index class name</th></tr></thead><tbody><tr><td>ContactId</td><td>ContactId: <p>Primary key  </p>Nested index class: <xref href=\"SuperOffice.CRM.Entities.Contact.IdxContactId\" data-throw-if-not-resolved=\"false\"></xref><p></p>Static Get method: <xref href=\"SuperOffice.CRM.Entities.Contact.GetFromIdxContactId(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref></td></tr></tbody></table>Non-unique indexes on table Contact are: <table><thead><tr><th>Index fields</th><th>Nested index class name</th></tr></thead><tbody><tr><td>SoundEx</td><td>SoundEx: <p>What the name sounds like, for duplicate detection  </p>Nested index class: <xref href=\"SuperOffice.CRM.Entities.ContactCollection.IdxSoundEx\" data-throw-if-not-resolved=\"false\"></xref><p></p>Static Get method: <see cref=\"!:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSoundEx\"></see></td></tr><tr><td>Kananame</td><td>Kananame: <p>JPN  </p>Nested index class: <xref href=\"SuperOffice.CRM.Entities.ContactCollection.IdxKananame\" data-throw-if-not-resolved=\"false\"></xref><p></p>Static Get method: <see cref=\"!:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxKananame\"></see></td></tr><tr><td>MotherId</td><td>MotherId: <p>&lt;not used>  </p>Nested index class: <xref href=\"SuperOffice.CRM.Entities.ContactCollection.IdxMotherId\" data-throw-if-not-resolved=\"false\"></xref><p></p>Static Get method: <see cref=\"!:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxMotherId\"></see></td></tr><tr><td>BusinessIdx</td><td>BusinessIdx: <p>List: business  </p>Nested index class: <xref href=\"SuperOffice.CRM.Entities.ContactCollection.IdxBusinessIdx\" data-throw-if-not-resolved=\"false\"></xref><p></p>Static Get method: <see cref=\"!:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxBusinessIdx\"></see></td></tr><tr><td>Name</td><td>Name: <p>Name  </p>Nested index class: <xref href=\"SuperOffice.CRM.Entities.ContactCollection.IdxName\" data-throw-if-not-resolved=\"false\"></xref><p></p>Static Get method: <see cref=\"!:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxName\"></see></td></tr><tr><td>UserdefId</td><td>UserdefId: <p>User-defined table record 1  </p>Nested index class: <xref href=\"SuperOffice.CRM.Entities.ContactCollection.IdxUserdefId\" data-throw-if-not-resolved=\"false\"></xref><p></p>Static Get method: <see cref=\"!:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdefId\"></see></td></tr><tr><td>OrgNr</td><td>OrgNr: <p>VAT number or similar, takes dynamic lead text from Country table  </p>Nested index class: <xref href=\"SuperOffice.CRM.Entities.ContactCollection.IdxOrgNr\" data-throw-if-not-resolved=\"false\"></xref><p></p>Static Get method: <see cref=\"!:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxOrgNr\"></see></td></tr><tr><td>Number1</td><td>Number1: <p>Alphanumeric user field, contains auto-assigned number if numbering is in use.  </p>Nested index class: <xref href=\"SuperOffice.CRM.Entities.ContactCollection.IdxNumber1\" data-throw-if-not-resolved=\"false\"></xref><p></p>Static Get method: <see cref=\"!:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber1\"></see></td></tr><tr><td>Number2</td><td>Number2: <p>Alphanumeric user field  </p>Nested index class: <xref href=\"SuperOffice.CRM.Entities.ContactCollection.IdxNumber2\" data-throw-if-not-resolved=\"false\"></xref><p></p>Static Get method: <see cref=\"!:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber2\"></see></td></tr><tr><td>Userdef2Id</td><td>Userdef2Id: <p>User-defined table record 2  </p>Nested index class: <xref href=\"SuperOffice.CRM.Entities.ContactCollection.IdxUserdef2Id\" data-throw-if-not-resolved=\"false\"></xref><p></p>Static Get method: <see cref=\"!:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdef2Id\"></see></td></tr><tr><td>Department</td><td>Department: <p>Department  </p>Nested index class: <xref href=\"SuperOffice.CRM.Entities.ContactCollection.IdxDepartment\" data-throw-if-not-resolved=\"false\"></xref><p></p>Static Get method: <see cref=\"!:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxDepartment\"></see></td></tr><tr><td>Name, Department</td><td>Name: <p>Name  </p>Department: <p>Department  </p>Nested index class: <xref href=\"SuperOffice.CRM.Entities.ContactCollection.IdxNameDepartment\" data-throw-if-not-resolved=\"false\"></xref><p></p>Static Get method: <see cref=\"!:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameDepartment\"></see></td></tr><tr><td>CategoryIdx</td><td>CategoryIdx: <p>List: category  </p>Nested index class: <xref href=\"SuperOffice.CRM.Entities.ContactCollection.IdxCategoryIdx\" data-throw-if-not-resolved=\"false\"></xref><p></p>Static Get method: <see cref=\"!:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxCategoryIdx\"></see></td></tr><tr><td>Source</td><td>Source: <p>How did we get this contact? For future integration needs  </p>Nested index class: <xref href=\"SuperOffice.CRM.Entities.ContactCollection.IdxSource\" data-throw-if-not-resolved=\"false\"></xref><p></p>Static Get method: <see cref=\"!:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSource\"></see></td></tr></tbody></table>\n<p></p>\n"
  syntax:
    content: 'public class ContactCollection : EntityCollectionBase, INestedPersist, IEnumerable<INestedPersist>, IList, ICollection, IEnumerable, ITableRowLoadHandlerFactory, INotifyCollectionChanged, IBindingList'
    content.vb: >-
      Public Class ContactCollection
          Inherits EntityCollectionBase
          Implements INestedPersist, IEnumerable(Of INestedPersist), IList, ICollection, IEnumerable, ITableRowLoadHandlerFactory, INotifyCollectionChanged, IBindingList
  inheritance:
  - System.Object
  - SuperOffice.Data.NestedPersist
  - SuperOffice.Data.NestedPersistFacade
  - SuperOffice.Data.NestedCollectionPersist
  - SuperOffice.CRM.Entities.EntityCollectionBase
  implements:
  - SuperOffice.Data.INestedPersist
  - System.Collections.Generic.IEnumerable{SuperOffice.Data.INestedPersist}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  - System.Collections.Specialized.INotifyCollectionChanged
  - System.ComponentModel.IBindingList
  inheritedMembers:
  - SuperOffice.CRM.Entities.EntityCollectionBase._innerList
  - SuperOffice.CRM.Entities.EntityCollectionBase.DeleteAsync
  - SuperOffice.CRM.Entities.EntityCollectionBase.GetEnumerator
  - SuperOffice.CRM.Entities.EntityCollectionBase.Add(SuperOffice.CRM.Entities.EntityBase)
  - SuperOffice.CRM.Entities.EntityCollectionBase.Remove(SuperOffice.CRM.Entities.EntityBase)
  - SuperOffice.CRM.Entities.EntityCollectionBase.CopyTo(System.Array,System.Int32)
  - SuperOffice.CRM.Entities.EntityCollectionBase.IndexOf(System.Object)
  - SuperOffice.CRM.Entities.EntityCollectionBase.Contains(System.Object)
  - SuperOffice.CRM.Entities.EntityCollectionBase.AddIndex(System.ComponentModel.PropertyDescriptor)
  - SuperOffice.CRM.Entities.EntityCollectionBase.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  - SuperOffice.CRM.Entities.EntityCollectionBase.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  - SuperOffice.CRM.Entities.EntityCollectionBase.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  - SuperOffice.CRM.Entities.EntityCollectionBase.RemoveSort
  - SuperOffice.CRM.Entities.EntityCollectionBase.IsDirty
  - SuperOffice.CRM.Entities.EntityCollectionBase.Count
  - SuperOffice.CRM.Entities.EntityCollectionBase.IsFixedSize
  - SuperOffice.CRM.Entities.EntityCollectionBase.IsReadOnly
  - SuperOffice.CRM.Entities.EntityCollectionBase.AllowEdit
  - SuperOffice.CRM.Entities.EntityCollectionBase.AllowNew
  - SuperOffice.CRM.Entities.EntityCollectionBase.AllowRemove
  - SuperOffice.CRM.Entities.EntityCollectionBase.IsSorted
  - SuperOffice.CRM.Entities.EntityCollectionBase.SortDirection
  - SuperOffice.CRM.Entities.EntityCollectionBase.SortProperty
  - SuperOffice.CRM.Entities.EntityCollectionBase.SupportsChangeNotification
  - SuperOffice.CRM.Entities.EntityCollectionBase.SupportsSearching
  - SuperOffice.CRM.Entities.EntityCollectionBase.SupportsSorting
  - SuperOffice.CRM.Entities.EntityCollectionBase.CollectionChanged
  - SuperOffice.CRM.Entities.EntityCollectionBase.ListChanged
  - SuperOffice.Data.NestedCollectionPersist.GetFacadingItems
  - SuperOffice.Data.NestedCollectionPersist.IsDeleted
  - SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
  - SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
  - SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
  - SuperOffice.Data.NestedPersist._saveOwner
  - SuperOffice.Data.NestedPersist._isSaving
  - SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  - SuperOffice.Data.NestedPersist.SaveAsync
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
  - SuperOffice.Data.NestedPersist.add_OnElementSaved(SuperOffice.Data.OnSaved)
  - SuperOffice.Data.NestedPersist.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  - SuperOffice.Data.NestedPersist.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  - SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  - SuperOffice.Data.NestedPersist.IsSaving
  - SuperOffice.Data.NestedPersist.IsMarkedForDelete
  - SuperOffice.Data.NestedPersist.OnElementSaved
  - SuperOffice.Data.NestedPersist.OnElementIdUpdate
  extensionMethods:
  - SuperOffice.CRM.Entities.ContactCollection.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Entities.ContactCollection.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Entities.ContactCollection._rows
  commentId: F:SuperOffice.CRM.Entities.ContactCollection._rows
  id: _rows
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: _rows
  nameWithType: ContactCollection._rows
  fullName: SuperOffice.CRM.Entities.ContactCollection._rows
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nRow objects that the collection is based on.\n"
  syntax:
    content: protected ContactRows _rows
    return:
      type: SuperOffice.CRM.Rows.ContactRows
    content.vb: Protected _rows As ContactRows
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Entities.ContactCollection._idx
  commentId: F:SuperOffice.CRM.Entities.ContactCollection._idx
  id: _idx
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: _idx
  nameWithType: ContactCollection._idx
  fullName: SuperOffice.CRM.Entities.ContactCollection._idx
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nFetcher class the collection is based on\n"
  syntax:
    content: protected ContactCollection.ContactCollectionIdx _idx
    return:
      type: SuperOffice.CRM.Entities.ContactCollection.ContactCollectionIdx
    content.vb: Protected _idx As ContactCollection.ContactCollectionIdx
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Entities.ContactCollection.ToString
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.ToString
  id: ToString
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ContactCollection.ToString()
  fullName: SuperOffice.CRM.Entities.ContactCollection.ToString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nFor debugging: Number of members, and the first (up to) 5 items\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: SuperOffice.CRM.Entities.ContactCollection.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Entities.ContactCollection.#ctor(SuperOffice.CRM.Entities.ContactCollection.ContactCollectionIdx)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.#ctor(SuperOffice.CRM.Entities.ContactCollection.ContactCollectionIdx)
  id: '#ctor(SuperOffice.CRM.Entities.ContactCollection.ContactCollectionIdx)'
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: ContactCollection(ContactCollection.ContactCollectionIdx)
  nameWithType: ContactCollection.ContactCollection(ContactCollection.ContactCollectionIdx)
  fullName: SuperOffice.CRM.Entities.ContactCollection.ContactCollection(SuperOffice.CRM.Entities.ContactCollection.ContactCollectionIdx)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nConstructor for class ContactCollection.  \nThis object represents a collection of rows in table &apos;contact&apos;.\nTable contact: Companies and Organisations\n"
  syntax:
    content: protected ContactCollection(ContactCollection.ContactCollectionIdx idx)
    parameters:
    - id: idx
      type: SuperOffice.CRM.Entities.ContactCollection.ContactCollectionIdx
    content.vb: Protected Sub New(idx As ContactCollection.ContactCollectionIdx)
  overload: SuperOffice.CRM.Entities.ContactCollection.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Entities.ContactCollection.CreateNew
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.CreateNew
  id: CreateNew
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: CreateNew()
  nameWithType: ContactCollection.CreateNew()
  fullName: SuperOffice.CRM.Entities.ContactCollection.CreateNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of the ContactCollection.\n"
  syntax:
    content: public static ContactCollection CreateNew()
    return:
      type: SuperOffice.CRM.Entities.ContactCollection
      description: A new instance of the ContactCollection.
    content.vb: Public Shared Function CreateNew As ContactCollection
  overload: SuperOffice.CRM.Entities.ContactCollection.CreateNew*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromCustomSearchAsync(SuperOffice.CRM.Entities.ContactCollection.CustomSearch,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.GetFromCustomSearchAsync(SuperOffice.CRM.Entities.ContactCollection.CustomSearch,System.Threading.CancellationToken)
  id: GetFromCustomSearchAsync(SuperOffice.CRM.Entities.ContactCollection.CustomSearch,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: GetFromCustomSearchAsync(ContactCollection.CustomSearch, CancellationToken)
  nameWithType: ContactCollection.GetFromCustomSearchAsync(ContactCollection.CustomSearch, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromCustomSearchAsync(SuperOffice.CRM.Entities.ContactCollection.CustomSearch, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of the ContactCollection object, and populate it with data from a custom search.\nIf the search returns no results, an empty collection will be returned; if the result contains\nrows, a collection of ContactRow objects representing each row will be returned. \n"
  syntax:
    content: public static Task<ContactCollection> GetFromCustomSearchAsync(ContactCollection.CustomSearch query, CancellationToken cancellationToken)
    parameters:
    - id: query
      type: SuperOffice.CRM.Entities.ContactCollection.CustomSearch
      description: The custom search to execute against the database
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
      description: A new instance of the ContactCollection object, reflecting the result of the query.
    content.vb: Public Shared Function GetFromCustomSearchAsync(query As ContactCollection.CustomSearch, cancellationToken As CancellationToken) As Task(Of ContactCollection)
  overload: SuperOffice.CRM.Entities.ContactCollection.GetFromCustomSearchAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSoundExAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSoundExAsync(System.String,System.Threading.CancellationToken)
  id: GetFromIdxSoundExAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: GetFromIdxSoundExAsync(String, CancellationToken)
  nameWithType: ContactCollection.GetFromIdxSoundExAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSoundExAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of the ContactRows object, and populate it with <xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref>\nobjects based on the result of a query on the table Contact. \nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThe query matches the fields on the\nnon-unique index IDXContSoundEx. Unique indexes have corresponding Create methods directly on the\n<xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref> object, since such indexes always return zero or one rows.\n"
  syntax:
    content: public static Task<ContactCollection> GetFromIdxSoundExAsync(string soundEx, CancellationToken cancellationToken = null)
    parameters:
    - id: soundEx
      type: System.String
      description: <p>What the name sounds like, for duplicate detection  </p>
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
      description: New ContactRows collection containing the result of the index query. If no rows matched, the collection will be empty.
    content.vb: Public Shared Function GetFromIdxSoundExAsync(soundEx As String, cancellationToken As CancellationToken = Nothing) As Task(Of ContactCollection)
  overload: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSoundExAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxKananameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxKananameAsync(System.String,System.Threading.CancellationToken)
  id: GetFromIdxKananameAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: GetFromIdxKananameAsync(String, CancellationToken)
  nameWithType: ContactCollection.GetFromIdxKananameAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxKananameAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of the ContactRows object, and populate it with <xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref>\nobjects based on the result of a query on the table Contact. \nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThe query matches the fields on the\nnon-unique index IDXContKname. Unique indexes have corresponding Create methods directly on the\n<xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref> object, since such indexes always return zero or one rows.\n"
  syntax:
    content: public static Task<ContactCollection> GetFromIdxKananameAsync(string kananame, CancellationToken cancellationToken = null)
    parameters:
    - id: kananame
      type: System.String
      description: <p>JPN  </p>
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
      description: New ContactRows collection containing the result of the index query. If no rows matched, the collection will be empty.
    content.vb: Public Shared Function GetFromIdxKananameAsync(kananame As String, cancellationToken As CancellationToken = Nothing) As Task(Of ContactCollection)
  overload: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxKananameAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxMotherIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxMotherIdAsync(System.Int32,System.Threading.CancellationToken)
  id: GetFromIdxMotherIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: GetFromIdxMotherIdAsync(Int32, CancellationToken)
  nameWithType: ContactCollection.GetFromIdxMotherIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxMotherIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static Task<ContactCollection> GetFromIdxMotherIdAsync(int motherId, CancellationToken cancellationToken = null)
    parameters:
    - id: motherId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
    content.vb: Public Shared Function GetFromIdxMotherIdAsync(motherId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ContactCollection)
  overload: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxMotherIdAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxBusinessIdxAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxBusinessIdxAsync(System.Int32,System.Threading.CancellationToken)
  id: GetFromIdxBusinessIdxAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: GetFromIdxBusinessIdxAsync(Int32, CancellationToken)
  nameWithType: ContactCollection.GetFromIdxBusinessIdxAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxBusinessIdxAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of the ContactRows object, and populate it with <xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref>\nobjects based on the result of a query on the table Contact. \nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThe query matches the fields on the\nnon-unique index IDXContBusn_idx. Unique indexes have corresponding Create methods directly on the\n<xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref> object, since such indexes always return zero or one rows.\n"
  syntax:
    content: public static Task<ContactCollection> GetFromIdxBusinessIdxAsync(int businessIdx, CancellationToken cancellationToken = null)
    parameters:
    - id: businessIdx
      type: System.Int32
      description: '<p>List: business  </p>'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
      description: New ContactRows collection containing the result of the index query. If no rows matched, the collection will be empty.
    content.vb: Public Shared Function GetFromIdxBusinessIdxAsync(businessIdx As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ContactCollection)
  overload: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxBusinessIdxAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameAsync(System.String,System.Threading.CancellationToken)
  id: GetFromIdxNameAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: GetFromIdxNameAsync(String, CancellationToken)
  nameWithType: ContactCollection.GetFromIdxNameAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of the ContactRows object, and populate it with <xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref>\nobjects based on the result of a query on the table Contact. \nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThe query matches the fields on the\nnon-unique index IDXContName. Unique indexes have corresponding Create methods directly on the\n<xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref> object, since such indexes always return zero or one rows.\n"
  syntax:
    content: public static Task<ContactCollection> GetFromIdxNameAsync(string name, CancellationToken cancellationToken = null)
    parameters:
    - id: name
      type: System.String
      description: <p>Name  </p>
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
      description: New ContactRows collection containing the result of the index query. If no rows matched, the collection will be empty.
    content.vb: Public Shared Function GetFromIdxNameAsync(name As String, cancellationToken As CancellationToken = Nothing) As Task(Of ContactCollection)
  overload: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdefIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdefIdAsync(System.Int32,System.Threading.CancellationToken)
  id: GetFromIdxUserdefIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: GetFromIdxUserdefIdAsync(Int32, CancellationToken)
  nameWithType: ContactCollection.GetFromIdxUserdefIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdefIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of the ContactRows object, and populate it with <xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref>\nobjects based on the result of a query on the table Contact. \nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThe query matches the fields on the\nnon-unique index IDXContUdef_id. Unique indexes have corresponding Create methods directly on the\n<xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref> object, since such indexes always return zero or one rows.\n"
  syntax:
    content: public static Task<ContactCollection> GetFromIdxUserdefIdAsync(int userdefId, CancellationToken cancellationToken = null)
    parameters:
    - id: userdefId
      type: System.Int32
      description: <p>User-defined table record 1  </p>
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
      description: New ContactRows collection containing the result of the index query. If no rows matched, the collection will be empty.
    content.vb: Public Shared Function GetFromIdxUserdefIdAsync(userdefId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ContactCollection)
  overload: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdefIdAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxOrgNrAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxOrgNrAsync(System.String,System.Threading.CancellationToken)
  id: GetFromIdxOrgNrAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: GetFromIdxOrgNrAsync(String, CancellationToken)
  nameWithType: ContactCollection.GetFromIdxOrgNrAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxOrgNrAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of the ContactRows object, and populate it with <xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref>\nobjects based on the result of a query on the table Contact. \nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThe query matches the fields on the\nnon-unique index IDXContOrgNr. Unique indexes have corresponding Create methods directly on the\n<xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref> object, since such indexes always return zero or one rows.\n"
  syntax:
    content: public static Task<ContactCollection> GetFromIdxOrgNrAsync(string orgNr, CancellationToken cancellationToken = null)
    parameters:
    - id: orgNr
      type: System.String
      description: <p>VAT number or similar, takes dynamic lead text from Country table  </p>
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
      description: New ContactRows collection containing the result of the index query. If no rows matched, the collection will be empty.
    content.vb: Public Shared Function GetFromIdxOrgNrAsync(orgNr As String, cancellationToken As CancellationToken = Nothing) As Task(Of ContactCollection)
  overload: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxOrgNrAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber1Async(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber1Async(System.String,System.Threading.CancellationToken)
  id: GetFromIdxNumber1Async(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: GetFromIdxNumber1Async(String, CancellationToken)
  nameWithType: ContactCollection.GetFromIdxNumber1Async(String, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber1Async(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of the ContactRows object, and populate it with <xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref>\nobjects based on the result of a query on the table Contact. \nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThe query matches the fields on the\nnon-unique index IDXContNum1. Unique indexes have corresponding Create methods directly on the\n<xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref> object, since such indexes always return zero or one rows.\n"
  syntax:
    content: public static Task<ContactCollection> GetFromIdxNumber1Async(string number1, CancellationToken cancellationToken = null)
    parameters:
    - id: number1
      type: System.String
      description: <p>Alphanumeric user field, contains auto-assigned number if numbering is in use.  </p>
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
      description: New ContactRows collection containing the result of the index query. If no rows matched, the collection will be empty.
    content.vb: Public Shared Function GetFromIdxNumber1Async(number1 As String, cancellationToken As CancellationToken = Nothing) As Task(Of ContactCollection)
  overload: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber1Async*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber2Async(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber2Async(System.String,System.Threading.CancellationToken)
  id: GetFromIdxNumber2Async(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: GetFromIdxNumber2Async(String, CancellationToken)
  nameWithType: ContactCollection.GetFromIdxNumber2Async(String, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber2Async(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of the ContactRows object, and populate it with <xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref>\nobjects based on the result of a query on the table Contact. \nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThe query matches the fields on the\nnon-unique index IDXContNum2. Unique indexes have corresponding Create methods directly on the\n<xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref> object, since such indexes always return zero or one rows.\n"
  syntax:
    content: public static Task<ContactCollection> GetFromIdxNumber2Async(string number2, CancellationToken cancellationToken = null)
    parameters:
    - id: number2
      type: System.String
      description: <p>Alphanumeric user field  </p>
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
      description: New ContactRows collection containing the result of the index query. If no rows matched, the collection will be empty.
    content.vb: Public Shared Function GetFromIdxNumber2Async(number2 As String, cancellationToken As CancellationToken = Nothing) As Task(Of ContactCollection)
  overload: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber2Async*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdef2IdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdef2IdAsync(System.Int32,System.Threading.CancellationToken)
  id: GetFromIdxUserdef2IdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: GetFromIdxUserdef2IdAsync(Int32, CancellationToken)
  nameWithType: ContactCollection.GetFromIdxUserdef2IdAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdef2IdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of the ContactRows object, and populate it with <xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref>\nobjects based on the result of a query on the table Contact. \nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThe query matches the fields on the\nnon-unique index IDXContUdef2_id. Unique indexes have corresponding Create methods directly on the\n<xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref> object, since such indexes always return zero or one rows.\n"
  syntax:
    content: public static Task<ContactCollection> GetFromIdxUserdef2IdAsync(int userdef2Id, CancellationToken cancellationToken = null)
    parameters:
    - id: userdef2Id
      type: System.Int32
      description: <p>User-defined table record 2  </p>
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
      description: New ContactRows collection containing the result of the index query. If no rows matched, the collection will be empty.
    content.vb: Public Shared Function GetFromIdxUserdef2IdAsync(userdef2Id As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ContactCollection)
  overload: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdef2IdAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxDepartmentAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxDepartmentAsync(System.String,System.Threading.CancellationToken)
  id: GetFromIdxDepartmentAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: GetFromIdxDepartmentAsync(String, CancellationToken)
  nameWithType: ContactCollection.GetFromIdxDepartmentAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxDepartmentAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of the ContactRows object, and populate it with <xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref>\nobjects based on the result of a query on the table Contact. \nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThe query matches the fields on the\nnon-unique index IDXContDept. Unique indexes have corresponding Create methods directly on the\n<xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref> object, since such indexes always return zero or one rows.\n"
  syntax:
    content: public static Task<ContactCollection> GetFromIdxDepartmentAsync(string department, CancellationToken cancellationToken = null)
    parameters:
    - id: department
      type: System.String
      description: <p>Department  </p>
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
      description: New ContactRows collection containing the result of the index query. If no rows matched, the collection will be empty.
    content.vb: Public Shared Function GetFromIdxDepartmentAsync(department As String, cancellationToken As CancellationToken = Nothing) As Task(Of ContactCollection)
  overload: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxDepartmentAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameDepartmentAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameDepartmentAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetFromIdxNameDepartmentAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: GetFromIdxNameDepartmentAsync(String, String, CancellationToken)
  nameWithType: ContactCollection.GetFromIdxNameDepartmentAsync(String, String, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameDepartmentAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of the ContactRows object, and populate it with <xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref>\nobjects based on the result of a query on the table Contact. \nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThe query matches the fields on the\nnon-unique index INameDept. Unique indexes have corresponding Create methods directly on the\n<xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref> object, since such indexes always return zero or one rows.\n"
  syntax:
    content: public static Task<ContactCollection> GetFromIdxNameDepartmentAsync(string name, string department, CancellationToken cancellationToken = null)
    parameters:
    - id: name
      type: System.String
      description: <p>Name  </p>
    - id: department
      type: System.String
      description: <p>Department  </p>
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
      description: New ContactRows collection containing the result of the index query. If no rows matched, the collection will be empty.
    content.vb: Public Shared Function GetFromIdxNameDepartmentAsync(name As String, department As String, cancellationToken As CancellationToken = Nothing) As Task(Of ContactCollection)
  overload: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameDepartmentAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxCategoryIdxAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxCategoryIdxAsync(System.Int32,System.Threading.CancellationToken)
  id: GetFromIdxCategoryIdxAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: GetFromIdxCategoryIdxAsync(Int32, CancellationToken)
  nameWithType: ContactCollection.GetFromIdxCategoryIdxAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxCategoryIdxAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of the ContactRows object, and populate it with <xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref>\nobjects based on the result of a query on the table Contact. \nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThe query matches the fields on the\nnon-unique index IDXContCatg_idx. Unique indexes have corresponding Create methods directly on the\n<xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref> object, since such indexes always return zero or one rows.\n"
  syntax:
    content: public static Task<ContactCollection> GetFromIdxCategoryIdxAsync(int categoryIdx, CancellationToken cancellationToken = null)
    parameters:
    - id: categoryIdx
      type: System.Int32
      description: '<p>List: category  </p>'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
      description: New ContactRows collection containing the result of the index query. If no rows matched, the collection will be empty.
    content.vb: Public Shared Function GetFromIdxCategoryIdxAsync(categoryIdx As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ContactCollection)
  overload: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxCategoryIdxAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSourceAsync(System.Int16,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSourceAsync(System.Int16,System.Threading.CancellationToken)
  id: GetFromIdxSourceAsync(System.Int16,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: GetFromIdxSourceAsync(Int16, CancellationToken)
  nameWithType: ContactCollection.GetFromIdxSourceAsync(Int16, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSourceAsync(System.Int16, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of the ContactRows object, and populate it with <xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref>\nobjects based on the result of a query on the table Contact. \nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThe query matches the fields on the\nnon-unique index IDXContSource. Unique indexes have corresponding Create methods directly on the\n<xref href=\"SuperOffice.CRM.Rows.ContactRow\" data-throw-if-not-resolved=\"false\"></xref> object, since such indexes always return zero or one rows.\n"
  syntax:
    content: public static Task<ContactCollection> GetFromIdxSourceAsync(short source, CancellationToken cancellationToken = null)
    parameters:
    - id: source
      type: System.Int16
      description: <p>How did we get this contact? For future integration needs  </p>
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
      description: New ContactRows collection containing the result of the index query. If no rows matched, the collection will be empty.
    content.vb: Public Shared Function GetFromIdxSourceAsync(source As Short, cancellationToken As CancellationToken = Nothing) As Task(Of ContactCollection)
  overload: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSourceAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ContactCollection.Add(SuperOffice.CRM.Entities.Contact)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.Add(SuperOffice.CRM.Entities.Contact)
  id: Add(SuperOffice.CRM.Entities.Contact)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: Add(Contact)
  nameWithType: ContactCollection.Add(Contact)
  fullName: SuperOffice.CRM.Entities.ContactCollection.Add(SuperOffice.CRM.Entities.Contact)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nAdd one Contact to the collection.\n"
  syntax:
    content: public int Add(Contact contact)
    parameters:
    - id: contact
      type: SuperOffice.CRM.Entities.Contact
      description: An instance of Contact to be added to the collection.
    return:
      type: System.Int32
      description: The index of the added Contact.
    content.vb: Public Function Add(contact As Contact) As Integer
  overload: SuperOffice.CRM.Entities.ContactCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Entities.ContactCollection.AddNew
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.AddNew
  id: AddNew
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: AddNew()
  nameWithType: ContactCollection.AddNew()
  fullName: SuperOffice.CRM.Entities.ContactCollection.AddNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nGet a new instance of Contact added to the collection.\n"
  syntax:
    content: public Contact AddNew()
    return:
      type: SuperOffice.CRM.Entities.Contact
      description: A new instance of Contact added to the collection.
    content.vb: Public Function AddNew As Contact
  overload: SuperOffice.CRM.Entities.ContactCollection.AddNew*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Entities.ContactCollection.Remove(SuperOffice.CRM.Entities.Contact)
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.Remove(SuperOffice.CRM.Entities.Contact)
  id: Remove(SuperOffice.CRM.Entities.Contact)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: Remove(Contact)
  nameWithType: ContactCollection.Remove(Contact)
  fullName: SuperOffice.CRM.Entities.ContactCollection.Remove(SuperOffice.CRM.Entities.Contact)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nRemoves the given Contact from the collection\n"
  syntax:
    content: public void Remove(Contact contact)
    parameters:
    - id: contact
      type: SuperOffice.CRM.Entities.Contact
      description: the Contact to be removed
    content.vb: Public Sub Remove(contact As Contact)
  overload: SuperOffice.CRM.Entities.ContactCollection.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Entities.ContactCollection.CreateChild
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.CreateChild
  id: CreateChild
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: CreateChild()
  nameWithType: ContactCollection.CreateChild()
  fullName: SuperOffice.CRM.Entities.ContactCollection.CreateChild()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCreate a new instance of Contact\n"
  syntax:
    content: protected override EntityBase CreateChild()
    return:
      type: SuperOffice.CRM.Entities.EntityBase
      description: New instance of Contact
    content.vb: Protected Overrides Function CreateChild As EntityBase
  overridden: SuperOffice.CRM.Entities.EntityCollectionBase.CreateChild
  overload: SuperOffice.CRM.Entities.ContactCollection.CreateChild*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Entities.ContactCollection.ToArray
  commentId: M:SuperOffice.CRM.Entities.ContactCollection.ToArray
  id: ToArray
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: ContactCollection.ToArray()
  fullName: SuperOffice.CRM.Entities.ContactCollection.ToArray()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public Contact[] ToArray()
    return:
      type: SuperOffice.CRM.Entities.Contact[]
    content.vb: Public Function ToArray As Contact()
  overload: SuperOffice.CRM.Entities.ContactCollection.ToArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Entities.ContactCollection.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Entities.ContactCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: ContactCollection.Item[Int32]
  fullName: SuperOffice.CRM.Entities.ContactCollection.Item[System.Int32]
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nGet a Contact from the collection from its zero-based index.\n\n"
  syntax:
    content: public Contact this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: Zero-based index in the collection.
    return:
      type: SuperOffice.CRM.Entities.Contact
    content.vb: Public ReadOnly Property Item(index As Integer) As Contact
  overload: SuperOffice.CRM.Entities.ContactCollection.Item*
  nameWithType.vb: ContactCollection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SuperOffice.CRM.Entities.ContactCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: SuperOffice.CRM.Entities.ContactCollection.Index
  commentId: P:SuperOffice.CRM.Entities.ContactCollection.Index
  id: Index
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: ContactCollection.Index
  fullName: SuperOffice.CRM.Entities.ContactCollection.Index
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nRetrieve the index for ContactCollection\n"
  syntax:
    content: public ContactCollection.ContactCollectionIdx Index { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Entities.ContactCollection.ContactCollectionIdx
    content.vb: Public ReadOnly Property Index As ContactCollection.ContactCollectionIdx
  overload: SuperOffice.CRM.Entities.ContactCollection.Index*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Entities.ContactCollection.Rows
  commentId: P:SuperOffice.CRM.Entities.ContactCollection.Rows
  id: Rows
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: Rows
  nameWithType: ContactCollection.Rows
  fullName: SuperOffice.CRM.Entities.ContactCollection.Rows
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nThe ecapsulated object ContactRows.\n"
  syntax:
    content: public ContactRows Rows { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Rows.ContactRows
    content.vb: Public ReadOnly Property Rows As ContactRows
  overload: SuperOffice.CRM.Entities.ContactCollection.Rows*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Entities.ContactCollection.Sentries
  commentId: P:SuperOffice.CRM.Entities.ContactCollection.Sentries
  id: Sentries
  parent: SuperOffice.CRM.Entities.ContactCollection
  langs:
  - csharp
  - vb
  name: Sentries
  nameWithType: ContactCollection.Sentries
  fullName: SuperOffice.CRM.Entities.ContactCollection.Sentries
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nThe collection of sentries that are guarding this collection of rows.\nThis collection is used by RDB entities which return HDB collections.\n<p>For example, the contact.Faxes returns a PhoneRows collection in which \neach row will need to check the contact&apos;s sentry for permission to read/write \ntheir field</p>\n"
  syntax:
    content: public override SentryCollection Sentries { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Security.SentryCollection
    content.vb: Public Overrides ReadOnly Property Sentries As SentryCollection
  overridden: SuperOffice.CRM.Entities.EntityCollectionBase.Sentries
  overload: SuperOffice.CRM.Entities.ContactCollection.Sentries*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.NestedPersist
  commentId: T:SuperOffice.Data.NestedPersist
  parent: SuperOffice.Data
  isExternal: true
  name: NestedPersist
  nameWithType: NestedPersist
  fullName: SuperOffice.Data.NestedPersist
- uid: SuperOffice.Data.NestedPersistFacade
  commentId: T:SuperOffice.Data.NestedPersistFacade
  parent: SuperOffice.Data
  isExternal: true
  name: NestedPersistFacade
  nameWithType: NestedPersistFacade
  fullName: SuperOffice.Data.NestedPersistFacade
- uid: SuperOffice.Data.NestedCollectionPersist
  commentId: T:SuperOffice.Data.NestedCollectionPersist
  parent: SuperOffice.Data
  isExternal: true
  name: NestedCollectionPersist
  nameWithType: NestedCollectionPersist
  fullName: SuperOffice.Data.NestedCollectionPersist
- uid: SuperOffice.CRM.Entities.EntityCollectionBase
  commentId: T:SuperOffice.CRM.Entities.EntityCollectionBase
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: EntityCollectionBase
  nameWithType: EntityCollectionBase
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase
- uid: SuperOffice.Data.INestedPersist
  commentId: T:SuperOffice.Data.INestedPersist
  parent: SuperOffice.Data
  isExternal: true
  name: INestedPersist
  nameWithType: INestedPersist
  fullName: SuperOffice.Data.INestedPersist
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.INestedPersist}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.Data.INestedPersist}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<INestedPersist>
  nameWithType: IEnumerable<INestedPersist>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.Data.INestedPersist>
  nameWithType.vb: IEnumerable(Of INestedPersist)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.Data.INestedPersist)
  name.vb: IEnumerable(Of INestedPersist)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Specialized.INotifyCollectionChanged
  isExternal: true
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
- uid: System.ComponentModel.IBindingList
  isExternal: true
  name: IBindingList
  nameWithType: IBindingList
  fullName: System.ComponentModel.IBindingList
- uid: SuperOffice.CRM.Entities.EntityCollectionBase._innerList
  commentId: F:SuperOffice.CRM.Entities.EntityCollectionBase._innerList
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: _innerList
  nameWithType: EntityCollectionBase._innerList
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase._innerList
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.DeleteAsync
  commentId: M:SuperOffice.CRM.Entities.EntityCollectionBase.DeleteAsync
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: DeleteAsync()
  nameWithType: EntityCollectionBase.DeleteAsync()
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.DeleteAsync()
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.DeleteAsync
    name: DeleteAsync
    nameWithType: EntityCollectionBase.DeleteAsync
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.DeleteAsync
    name: DeleteAsync
    nameWithType: EntityCollectionBase.DeleteAsync
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.GetEnumerator
  commentId: M:SuperOffice.CRM.Entities.EntityCollectionBase.GetEnumerator
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: GetEnumerator()
  nameWithType: EntityCollectionBase.GetEnumerator()
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.GetEnumerator()
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.GetEnumerator
    name: GetEnumerator
    nameWithType: EntityCollectionBase.GetEnumerator
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.GetEnumerator
    name: GetEnumerator
    nameWithType: EntityCollectionBase.GetEnumerator
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.Add(SuperOffice.CRM.Entities.EntityBase)
  commentId: M:SuperOffice.CRM.Entities.EntityCollectionBase.Add(SuperOffice.CRM.Entities.EntityBase)
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: Add(EntityBase)
  nameWithType: EntityCollectionBase.Add(EntityBase)
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.Add(SuperOffice.CRM.Entities.EntityBase)
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.Add(SuperOffice.CRM.Entities.EntityBase)
    name: Add
    nameWithType: EntityCollectionBase.Add
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Entities.EntityBase
    name: EntityBase
    nameWithType: EntityBase
    fullName: SuperOffice.CRM.Entities.EntityBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.Add(SuperOffice.CRM.Entities.EntityBase)
    name: Add
    nameWithType: EntityCollectionBase.Add
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Entities.EntityBase
    name: EntityBase
    nameWithType: EntityBase
    fullName: SuperOffice.CRM.Entities.EntityBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.Remove(SuperOffice.CRM.Entities.EntityBase)
  commentId: M:SuperOffice.CRM.Entities.EntityCollectionBase.Remove(SuperOffice.CRM.Entities.EntityBase)
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: Remove(EntityBase)
  nameWithType: EntityCollectionBase.Remove(EntityBase)
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.Remove(SuperOffice.CRM.Entities.EntityBase)
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.Remove(SuperOffice.CRM.Entities.EntityBase)
    name: Remove
    nameWithType: EntityCollectionBase.Remove
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Entities.EntityBase
    name: EntityBase
    nameWithType: EntityBase
    fullName: SuperOffice.CRM.Entities.EntityBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.Remove(SuperOffice.CRM.Entities.EntityBase)
    name: Remove
    nameWithType: EntityCollectionBase.Remove
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Entities.EntityBase
    name: EntityBase
    nameWithType: EntityBase
    fullName: SuperOffice.CRM.Entities.EntityBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.CopyTo(System.Array,System.Int32)
  commentId: M:SuperOffice.CRM.Entities.EntityCollectionBase.CopyTo(System.Array,System.Int32)
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: CopyTo(Array, Int32)
  nameWithType: EntityCollectionBase.CopyTo(Array, Int32)
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: EntityCollectionBase.CopyTo
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: EntityCollectionBase.CopyTo
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.IndexOf(System.Object)
  commentId: M:SuperOffice.CRM.Entities.EntityCollectionBase.IndexOf(System.Object)
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: IndexOf(Object)
  nameWithType: EntityCollectionBase.IndexOf(Object)
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.IndexOf(System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.IndexOf(System.Object)
    name: IndexOf
    nameWithType: EntityCollectionBase.IndexOf
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.IndexOf(System.Object)
    name: IndexOf
    nameWithType: EntityCollectionBase.IndexOf
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.Contains(System.Object)
  commentId: M:SuperOffice.CRM.Entities.EntityCollectionBase.Contains(System.Object)
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: Contains(Object)
  nameWithType: EntityCollectionBase.Contains(Object)
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.Contains(System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.Contains(System.Object)
    name: Contains
    nameWithType: EntityCollectionBase.Contains
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.Contains(System.Object)
    name: Contains
    nameWithType: EntityCollectionBase.Contains
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.AddIndex(System.ComponentModel.PropertyDescriptor)
  commentId: M:SuperOffice.CRM.Entities.EntityCollectionBase.AddIndex(System.ComponentModel.PropertyDescriptor)
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: AddIndex(PropertyDescriptor)
  nameWithType: EntityCollectionBase.AddIndex(PropertyDescriptor)
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.AddIndex(System.ComponentModel.PropertyDescriptor)
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.AddIndex(System.ComponentModel.PropertyDescriptor)
    name: AddIndex
    nameWithType: EntityCollectionBase.AddIndex
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.AddIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: System.ComponentModel.PropertyDescriptor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.AddIndex(System.ComponentModel.PropertyDescriptor)
    name: AddIndex
    nameWithType: EntityCollectionBase.AddIndex
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.AddIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: System.ComponentModel.PropertyDescriptor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  commentId: M:SuperOffice.CRM.Entities.EntityCollectionBase.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: ApplySort(PropertyDescriptor, ListSortDirection)
  nameWithType: EntityCollectionBase.ApplySort(PropertyDescriptor, ListSortDirection)
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.ApplySort(System.ComponentModel.PropertyDescriptor, System.ComponentModel.ListSortDirection)
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
    name: ApplySort
    nameWithType: EntityCollectionBase.ApplySort
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.ApplySort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: System.ComponentModel.PropertyDescriptor
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.ListSortDirection
    name: ListSortDirection
    nameWithType: ListSortDirection
    fullName: System.ComponentModel.ListSortDirection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
    name: ApplySort
    nameWithType: EntityCollectionBase.ApplySort
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.ApplySort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: System.ComponentModel.PropertyDescriptor
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.ListSortDirection
    name: ListSortDirection
    nameWithType: ListSortDirection
    fullName: System.ComponentModel.ListSortDirection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  commentId: M:SuperOffice.CRM.Entities.EntityCollectionBase.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: Find(PropertyDescriptor, Object)
  nameWithType: EntityCollectionBase.Find(PropertyDescriptor, Object)
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.Find(System.ComponentModel.PropertyDescriptor, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.Find(System.ComponentModel.PropertyDescriptor,System.Object)
    name: Find
    nameWithType: EntityCollectionBase.Find
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: System.ComponentModel.PropertyDescriptor
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.Find(System.ComponentModel.PropertyDescriptor,System.Object)
    name: Find
    nameWithType: EntityCollectionBase.Find
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: System.ComponentModel.PropertyDescriptor
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  commentId: M:SuperOffice.CRM.Entities.EntityCollectionBase.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: RemoveIndex(PropertyDescriptor)
  nameWithType: EntityCollectionBase.RemoveIndex(PropertyDescriptor)
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.RemoveIndex(System.ComponentModel.PropertyDescriptor)
    name: RemoveIndex
    nameWithType: EntityCollectionBase.RemoveIndex
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.RemoveIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: System.ComponentModel.PropertyDescriptor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.RemoveIndex(System.ComponentModel.PropertyDescriptor)
    name: RemoveIndex
    nameWithType: EntityCollectionBase.RemoveIndex
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.RemoveIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: System.ComponentModel.PropertyDescriptor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.RemoveSort
  commentId: M:SuperOffice.CRM.Entities.EntityCollectionBase.RemoveSort
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: RemoveSort()
  nameWithType: EntityCollectionBase.RemoveSort()
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.RemoveSort()
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.RemoveSort
    name: RemoveSort
    nameWithType: EntityCollectionBase.RemoveSort
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.RemoveSort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.RemoveSort
    name: RemoveSort
    nameWithType: EntityCollectionBase.RemoveSort
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.RemoveSort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.IsDirty
  commentId: P:SuperOffice.CRM.Entities.EntityCollectionBase.IsDirty
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: IsDirty
  nameWithType: EntityCollectionBase.IsDirty
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.IsDirty
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.Count
  commentId: P:SuperOffice.CRM.Entities.EntityCollectionBase.Count
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: Count
  nameWithType: EntityCollectionBase.Count
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.Count
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.IsFixedSize
  commentId: P:SuperOffice.CRM.Entities.EntityCollectionBase.IsFixedSize
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: IsFixedSize
  nameWithType: EntityCollectionBase.IsFixedSize
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.IsFixedSize
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.IsReadOnly
  commentId: P:SuperOffice.CRM.Entities.EntityCollectionBase.IsReadOnly
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: IsReadOnly
  nameWithType: EntityCollectionBase.IsReadOnly
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.IsReadOnly
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.AllowEdit
  commentId: P:SuperOffice.CRM.Entities.EntityCollectionBase.AllowEdit
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: AllowEdit
  nameWithType: EntityCollectionBase.AllowEdit
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.AllowEdit
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.AllowNew
  commentId: P:SuperOffice.CRM.Entities.EntityCollectionBase.AllowNew
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: AllowNew
  nameWithType: EntityCollectionBase.AllowNew
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.AllowNew
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.AllowRemove
  commentId: P:SuperOffice.CRM.Entities.EntityCollectionBase.AllowRemove
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: AllowRemove
  nameWithType: EntityCollectionBase.AllowRemove
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.AllowRemove
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.IsSorted
  commentId: P:SuperOffice.CRM.Entities.EntityCollectionBase.IsSorted
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: IsSorted
  nameWithType: EntityCollectionBase.IsSorted
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.IsSorted
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.SortDirection
  commentId: P:SuperOffice.CRM.Entities.EntityCollectionBase.SortDirection
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: SortDirection
  nameWithType: EntityCollectionBase.SortDirection
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.SortDirection
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.SortProperty
  commentId: P:SuperOffice.CRM.Entities.EntityCollectionBase.SortProperty
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: SortProperty
  nameWithType: EntityCollectionBase.SortProperty
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.SortProperty
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.SupportsChangeNotification
  commentId: P:SuperOffice.CRM.Entities.EntityCollectionBase.SupportsChangeNotification
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: SupportsChangeNotification
  nameWithType: EntityCollectionBase.SupportsChangeNotification
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.SupportsChangeNotification
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.SupportsSearching
  commentId: P:SuperOffice.CRM.Entities.EntityCollectionBase.SupportsSearching
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: SupportsSearching
  nameWithType: EntityCollectionBase.SupportsSearching
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.SupportsSearching
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.SupportsSorting
  commentId: P:SuperOffice.CRM.Entities.EntityCollectionBase.SupportsSorting
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: SupportsSorting
  nameWithType: EntityCollectionBase.SupportsSorting
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.SupportsSorting
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.CollectionChanged
  commentId: E:SuperOffice.CRM.Entities.EntityCollectionBase.CollectionChanged
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: CollectionChanged
  nameWithType: EntityCollectionBase.CollectionChanged
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.CollectionChanged
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.ListChanged
  commentId: E:SuperOffice.CRM.Entities.EntityCollectionBase.ListChanged
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: ListChanged
  nameWithType: EntityCollectionBase.ListChanged
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.ListChanged
- uid: SuperOffice.Data.NestedCollectionPersist.GetFacadingItems
  commentId: M:SuperOffice.Data.NestedCollectionPersist.GetFacadingItems
  parent: SuperOffice.Data.NestedCollectionPersist
  isExternal: true
  name: GetFacadingItems()
  nameWithType: NestedCollectionPersist.GetFacadingItems()
  fullName: SuperOffice.Data.NestedCollectionPersist.GetFacadingItems()
  spec.csharp:
  - uid: SuperOffice.Data.NestedCollectionPersist.GetFacadingItems
    name: GetFacadingItems
    nameWithType: NestedCollectionPersist.GetFacadingItems
    fullName: SuperOffice.Data.NestedCollectionPersist.GetFacadingItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedCollectionPersist.GetFacadingItems
    name: GetFacadingItems
    nameWithType: NestedCollectionPersist.GetFacadingItems
    fullName: SuperOffice.Data.NestedCollectionPersist.GetFacadingItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedCollectionPersist.IsDeleted
  commentId: P:SuperOffice.Data.NestedCollectionPersist.IsDeleted
  parent: SuperOffice.Data.NestedCollectionPersist
  isExternal: true
  name: IsDeleted
  nameWithType: NestedCollectionPersist.IsDeleted
  fullName: SuperOffice.Data.NestedCollectionPersist.IsDeleted
- uid: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnPreIdUpdateAsync()
  nameWithType: NestedPersistFacade.OnPreIdUpdateAsync()
  fullName: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    nameWithType: NestedPersistFacade.OnPreIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    nameWithType: NestedPersistFacade.OnPreIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnPrimaryKeyRequestAsync(PKContainer)
  nameWithType: NestedPersistFacade.OnPrimaryKeyRequestAsync(PKContainer)
  fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequestAsync
    nameWithType: NestedPersistFacade.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequestAsync
    nameWithType: NestedPersistFacade.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnPrimaryKeyUpdateAsync(PKContainer)
  nameWithType: NestedPersistFacade.OnPrimaryKeyUpdateAsync(PKContainer)
  fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdateAsync
    nameWithType: NestedPersistFacade.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdateAsync
    nameWithType: NestedPersistFacade.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnIdUpdateAsync()
  nameWithType: NestedPersistFacade.OnIdUpdateAsync()
  fullName: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
    name: OnIdUpdateAsync
    nameWithType: NestedPersistFacade.OnIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
    name: OnIdUpdateAsync
    nameWithType: NestedPersistFacade.OnIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnSaveAsync(BatchSave)
  nameWithType: NestedPersistFacade.OnSaveAsync(BatchSave)
  fullName: SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: OnSaveAsync
    nameWithType: NestedPersistFacade.OnSaveAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: OnSaveAsync
    nameWithType: NestedPersistFacade.OnSaveAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnSavedAsync(Boolean)
  nameWithType: NestedPersistFacade.OnSavedAsync(Boolean)
  fullName: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    nameWithType: NestedPersistFacade.OnSavedAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    nameWithType: NestedPersistFacade.OnSavedAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist._saveOwner
  commentId: F:SuperOffice.Data.NestedPersist._saveOwner
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: _saveOwner
  nameWithType: NestedPersist._saveOwner
  fullName: SuperOffice.Data.NestedPersist._saveOwner
- uid: SuperOffice.Data.NestedPersist._isSaving
  commentId: F:SuperOffice.Data.NestedPersist._isSaving
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: _isSaving
  nameWithType: NestedPersist._isSaving
  fullName: SuperOffice.Data.NestedPersist._isSaving
- uid: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  commentId: M:SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: SetSaveOwner(INestedPersist)
  nameWithType: NestedPersist.SetSaveOwner(INestedPersist)
  fullName: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: NestedPersist.SetSaveOwner
    fullName: SuperOffice.Data.NestedPersist.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: NestedPersist.SetSaveOwner
    fullName: SuperOffice.Data.NestedPersist.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SaveAsync
  commentId: M:SuperOffice.Data.NestedPersist.SaveAsync
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: SaveAsync()
  nameWithType: NestedPersist.SaveAsync()
  fullName: SuperOffice.Data.NestedPersist.SaveAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SaveAsync
    name: SaveAsync
    nameWithType: NestedPersist.SaveAsync
    fullName: SuperOffice.Data.NestedPersist.SaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SaveAsync
    name: SaveAsync
    nameWithType: NestedPersist.SaveAsync
    fullName: SuperOffice.Data.NestedPersist.SaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnPreIdUpdateAsync()
  nameWithType: NestedPersist.INestedPersist.OnPreIdUpdateAsync()
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync()
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync()
  name.vb: SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
    name: INestedPersist.OnPreIdUpdateAsync
    nameWithType: NestedPersist.INestedPersist.OnPreIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
    name: SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  nameWithType: NestedPersist.INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyRequestAsync
    nameWithType: NestedPersist.INestedPersist.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  nameWithType: NestedPersist.INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyUpdateAsync
    nameWithType: NestedPersist.INestedPersist.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnIdUpdateAsync()
  nameWithType: NestedPersist.INestedPersist.OnIdUpdateAsync()
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnIdUpdateAsync()
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnIdUpdateAsync()
  name.vb: SuperOffice.Data.INestedPersist.OnIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
    name: INestedPersist.OnIdUpdateAsync
    nameWithType: NestedPersist.INestedPersist.OnIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
    name: SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnSaveAsync(BatchSave)
  nameWithType: NestedPersist.INestedPersist.OnSaveAsync(BatchSave)
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnSaveAsync(BatchSave)
  name.vb: SuperOffice.Data.INestedPersist.OnSaveAsync(BatchSave)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: INestedPersist.OnSaveAsync
    nameWithType: NestedPersist.INestedPersist.OnSaveAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: SuperOffice.Data.INestedPersist.OnSaveAsync
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnSaveAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnSavedAsync(Boolean)
  nameWithType: NestedPersist.INestedPersist.OnSavedAsync(Boolean)
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSavedAsync(System.Boolean)
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnSavedAsync(Boolean)
  name.vb: SuperOffice.Data.INestedPersist.OnSavedAsync(Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
    name: INestedPersist.OnSavedAsync
    nameWithType: NestedPersist.INestedPersist.OnSavedAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
    name: SuperOffice.Data.INestedPersist.OnSavedAsync
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnSavedAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.add_OnElementSaved(SuperOffice.Data.OnSaved)
  commentId: M:SuperOffice.Data.NestedPersist.add_OnElementSaved(SuperOffice.Data.OnSaved)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: add_OnElementSaved(OnSaved)
  nameWithType: NestedPersist.add_OnElementSaved(OnSaved)
  fullName: SuperOffice.Data.NestedPersist.add_OnElementSaved(SuperOffice.Data.OnSaved)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.add_OnElementSaved(SuperOffice.Data.OnSaved)
    name: add_OnElementSaved
    nameWithType: NestedPersist.add_OnElementSaved
    fullName: SuperOffice.Data.NestedPersist.add_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.add_OnElementSaved(SuperOffice.Data.OnSaved)
    name: add_OnElementSaved
    nameWithType: NestedPersist.add_OnElementSaved
    fullName: SuperOffice.Data.NestedPersist.add_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  commentId: M:SuperOffice.Data.NestedPersist.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: remove_OnElementSaved(OnSaved)
  nameWithType: NestedPersist.remove_OnElementSaved(OnSaved)
  fullName: SuperOffice.Data.NestedPersist.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.remove_OnElementSaved(SuperOffice.Data.OnSaved)
    name: remove_OnElementSaved
    nameWithType: NestedPersist.remove_OnElementSaved
    fullName: SuperOffice.Data.NestedPersist.remove_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.remove_OnElementSaved(SuperOffice.Data.OnSaved)
    name: remove_OnElementSaved
    nameWithType: NestedPersist.remove_OnElementSaved
    fullName: SuperOffice.Data.NestedPersist.remove_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  commentId: M:SuperOffice.Data.NestedPersist.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: add_OnElementIdUpdate(OnIdUpdate)
  nameWithType: NestedPersist.add_OnElementIdUpdate(OnIdUpdate)
  fullName: SuperOffice.Data.NestedPersist.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: add_OnElementIdUpdate
    nameWithType: NestedPersist.add_OnElementIdUpdate
    fullName: SuperOffice.Data.NestedPersist.add_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: add_OnElementIdUpdate
    nameWithType: NestedPersist.add_OnElementIdUpdate
    fullName: SuperOffice.Data.NestedPersist.add_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  commentId: M:SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: remove_OnElementIdUpdate(OnIdUpdate)
  nameWithType: NestedPersist.remove_OnElementIdUpdate(OnIdUpdate)
  fullName: SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: remove_OnElementIdUpdate
    nameWithType: NestedPersist.remove_OnElementIdUpdate
    fullName: SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: remove_OnElementIdUpdate
    nameWithType: NestedPersist.remove_OnElementIdUpdate
    fullName: SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.IsSaving
  commentId: P:SuperOffice.Data.NestedPersist.IsSaving
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: IsSaving
  nameWithType: NestedPersist.IsSaving
  fullName: SuperOffice.Data.NestedPersist.IsSaving
- uid: SuperOffice.Data.NestedPersist.IsMarkedForDelete
  commentId: P:SuperOffice.Data.NestedPersist.IsMarkedForDelete
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: IsMarkedForDelete
  nameWithType: NestedPersist.IsMarkedForDelete
  fullName: SuperOffice.Data.NestedPersist.IsMarkedForDelete
- uid: SuperOffice.Data.NestedPersist.OnElementSaved
  commentId: E:SuperOffice.Data.NestedPersist.OnElementSaved
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: OnElementSaved
  nameWithType: NestedPersist.OnElementSaved
  fullName: SuperOffice.Data.NestedPersist.OnElementSaved
- uid: SuperOffice.Data.NestedPersist.OnElementIdUpdate
  commentId: E:SuperOffice.Data.NestedPersist.OnElementIdUpdate
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: OnElementIdUpdate
  nameWithType: NestedPersist.OnElementIdUpdate
  fullName: SuperOffice.Data.NestedPersist.OnElementIdUpdate
- uid: SuperOffice.CRM.Entities.ContactCollection.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ContactCollection, To>()
  nameWithType: EnumUtil.MapEnums<ContactCollection, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Entities.ContactCollection, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ContactCollection, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Entities.ContactCollection, To)()
  name.vb: MapEnums(Of ContactCollection, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ContactCollection, To>
    nameWithType: EnumUtil.MapEnums<ContactCollection, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Entities.ContactCollection, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ContactCollection, To)
    nameWithType: EnumUtil.MapEnums(Of ContactCollection, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Entities.ContactCollection, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.ContactCollection.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ContactCollection, To>()
  nameWithType: Converters.MapEnums<ContactCollection, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Entities.ContactCollection, To>()
  nameWithType.vb: Converters.MapEnums(Of ContactCollection, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Entities.ContactCollection, To)()
  name.vb: MapEnums(Of ContactCollection, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ContactCollection, To>
    nameWithType: Converters.MapEnums<ContactCollection, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Entities.ContactCollection, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ContactCollection, To)
    nameWithType: Converters.MapEnums(Of ContactCollection, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Entities.ContactCollection, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Rows.ContactRows
  commentId: T:SuperOffice.CRM.Rows.ContactRows
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ContactRows
  nameWithType: ContactRows
  fullName: SuperOffice.CRM.Rows.ContactRows
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: SuperOffice.CRM.Entities.ContactCollection.ContactCollectionIdx
  commentId: T:SuperOffice.CRM.Entities.ContactCollection.ContactCollectionIdx
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: ContactCollection.ContactCollectionIdx
  nameWithType: ContactCollection.ContactCollectionIdx
  fullName: SuperOffice.CRM.Entities.ContactCollection.ContactCollectionIdx
- uid: SuperOffice.CRM.Entities.ContactCollection.ToString*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.ToString
  isExternal: true
  name: ToString
  nameWithType: ContactCollection.ToString
  fullName: SuperOffice.CRM.Entities.ContactCollection.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Entities.ContactCollection.#ctor*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.#ctor
  isExternal: true
  name: ContactCollection
  nameWithType: ContactCollection.ContactCollection
  fullName: SuperOffice.CRM.Entities.ContactCollection.ContactCollection
- uid: SuperOffice.CRM.Entities.ContactCollection.CreateNew*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.CreateNew
  isExternal: true
  name: CreateNew
  nameWithType: ContactCollection.CreateNew
  fullName: SuperOffice.CRM.Entities.ContactCollection.CreateNew
- uid: SuperOffice.CRM.Entities.ContactCollection
  commentId: T:SuperOffice.CRM.Entities.ContactCollection
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: ContactCollection
  nameWithType: ContactCollection
  fullName: SuperOffice.CRM.Entities.ContactCollection
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromCustomSearchAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.GetFromCustomSearchAsync
  isExternal: true
  name: GetFromCustomSearchAsync
  nameWithType: ContactCollection.GetFromCustomSearchAsync
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromCustomSearchAsync
- uid: SuperOffice.CRM.Entities.ContactCollection.CustomSearch
  commentId: T:SuperOffice.CRM.Entities.ContactCollection.CustomSearch
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: ContactCollection.CustomSearch
  nameWithType: ContactCollection.CustomSearch
  fullName: SuperOffice.CRM.Entities.ContactCollection.CustomSearch
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ContactCollection}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ContactCollection>
  nameWithType: Task<ContactCollection>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Entities.ContactCollection>
  nameWithType.vb: Task(Of ContactCollection)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Entities.ContactCollection)
  name.vb: Task(Of ContactCollection)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Entities.ContactCollection
    name: ContactCollection
    nameWithType: ContactCollection
    fullName: SuperOffice.CRM.Entities.ContactCollection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Entities.ContactCollection
    name: ContactCollection
    nameWithType: ContactCollection
    fullName: SuperOffice.CRM.Entities.ContactCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSoundExAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSoundExAsync
  isExternal: true
  name: GetFromIdxSoundExAsync
  nameWithType: ContactCollection.GetFromIdxSoundExAsync
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSoundExAsync
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxKananameAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxKananameAsync
  isExternal: true
  name: GetFromIdxKananameAsync
  nameWithType: ContactCollection.GetFromIdxKananameAsync
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxKananameAsync
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxMotherIdAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxMotherIdAsync
  isExternal: true
  name: GetFromIdxMotherIdAsync
  nameWithType: ContactCollection.GetFromIdxMotherIdAsync
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxMotherIdAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxBusinessIdxAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxBusinessIdxAsync
  isExternal: true
  name: GetFromIdxBusinessIdxAsync
  nameWithType: ContactCollection.GetFromIdxBusinessIdxAsync
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxBusinessIdxAsync
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameAsync
  isExternal: true
  name: GetFromIdxNameAsync
  nameWithType: ContactCollection.GetFromIdxNameAsync
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameAsync
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdefIdAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdefIdAsync
  isExternal: true
  name: GetFromIdxUserdefIdAsync
  nameWithType: ContactCollection.GetFromIdxUserdefIdAsync
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdefIdAsync
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxOrgNrAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxOrgNrAsync
  isExternal: true
  name: GetFromIdxOrgNrAsync
  nameWithType: ContactCollection.GetFromIdxOrgNrAsync
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxOrgNrAsync
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber1Async*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber1Async
  isExternal: true
  name: GetFromIdxNumber1Async
  nameWithType: ContactCollection.GetFromIdxNumber1Async
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber1Async
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber2Async*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber2Async
  isExternal: true
  name: GetFromIdxNumber2Async
  nameWithType: ContactCollection.GetFromIdxNumber2Async
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNumber2Async
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdef2IdAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdef2IdAsync
  isExternal: true
  name: GetFromIdxUserdef2IdAsync
  nameWithType: ContactCollection.GetFromIdxUserdef2IdAsync
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxUserdef2IdAsync
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxDepartmentAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxDepartmentAsync
  isExternal: true
  name: GetFromIdxDepartmentAsync
  nameWithType: ContactCollection.GetFromIdxDepartmentAsync
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxDepartmentAsync
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameDepartmentAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameDepartmentAsync
  isExternal: true
  name: GetFromIdxNameDepartmentAsync
  nameWithType: ContactCollection.GetFromIdxNameDepartmentAsync
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxNameDepartmentAsync
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxCategoryIdxAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxCategoryIdxAsync
  isExternal: true
  name: GetFromIdxCategoryIdxAsync
  nameWithType: ContactCollection.GetFromIdxCategoryIdxAsync
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxCategoryIdxAsync
- uid: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSourceAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSourceAsync
  isExternal: true
  name: GetFromIdxSourceAsync
  nameWithType: ContactCollection.GetFromIdxSourceAsync
  fullName: SuperOffice.CRM.Entities.ContactCollection.GetFromIdxSourceAsync
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: SuperOffice.CRM.Entities.ContactCollection.Add*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.Add
  isExternal: true
  name: Add
  nameWithType: ContactCollection.Add
  fullName: SuperOffice.CRM.Entities.ContactCollection.Add
- uid: SuperOffice.CRM.Entities.Contact
  commentId: T:SuperOffice.CRM.Entities.Contact
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: Contact
  nameWithType: Contact
  fullName: SuperOffice.CRM.Entities.Contact
- uid: SuperOffice.CRM.Entities.ContactCollection.AddNew*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.AddNew
  isExternal: true
  name: AddNew
  nameWithType: ContactCollection.AddNew
  fullName: SuperOffice.CRM.Entities.ContactCollection.AddNew
- uid: SuperOffice.CRM.Entities.ContactCollection.Remove*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.Remove
  isExternal: true
  name: Remove
  nameWithType: ContactCollection.Remove
  fullName: SuperOffice.CRM.Entities.ContactCollection.Remove
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.CreateChild
  commentId: M:SuperOffice.CRM.Entities.EntityCollectionBase.CreateChild
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: CreateChild()
  nameWithType: EntityCollectionBase.CreateChild()
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.CreateChild()
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.CreateChild
    name: CreateChild
    nameWithType: EntityCollectionBase.CreateChild
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.CreateChild
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.EntityCollectionBase.CreateChild
    name: CreateChild
    nameWithType: EntityCollectionBase.CreateChild
    fullName: SuperOffice.CRM.Entities.EntityCollectionBase.CreateChild
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.ContactCollection.CreateChild*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.CreateChild
  isExternal: true
  name: CreateChild
  nameWithType: ContactCollection.CreateChild
  fullName: SuperOffice.CRM.Entities.ContactCollection.CreateChild
- uid: SuperOffice.CRM.Entities.EntityBase
  commentId: T:SuperOffice.CRM.Entities.EntityBase
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: EntityBase
  nameWithType: EntityBase
  fullName: SuperOffice.CRM.Entities.EntityBase
- uid: SuperOffice.CRM.Entities.ContactCollection.ToArray*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.ToArray
  isExternal: true
  name: ToArray
  nameWithType: ContactCollection.ToArray
  fullName: SuperOffice.CRM.Entities.ContactCollection.ToArray
- uid: SuperOffice.CRM.Entities.Contact[]
  isExternal: true
  name: Contact[]
  nameWithType: Contact[]
  fullName: SuperOffice.CRM.Entities.Contact[]
  nameWithType.vb: Contact()
  fullName.vb: SuperOffice.CRM.Entities.Contact()
  name.vb: Contact()
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.Contact
    name: Contact
    nameWithType: Contact
    fullName: SuperOffice.CRM.Entities.Contact
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Entities.Contact
    name: Contact
    nameWithType: Contact
    fullName: SuperOffice.CRM.Entities.Contact
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Entities.ContactCollection.Item*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.Item
  isExternal: true
  name: Item
  nameWithType: ContactCollection.Item
  fullName: SuperOffice.CRM.Entities.ContactCollection.Item
- uid: SuperOffice.CRM.Entities.ContactCollection.Index*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.Index
  isExternal: true
  name: Index
  nameWithType: ContactCollection.Index
  fullName: SuperOffice.CRM.Entities.ContactCollection.Index
- uid: SuperOffice.CRM.Entities.ContactCollection.Rows*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.Rows
  isExternal: true
  name: Rows
  nameWithType: ContactCollection.Rows
  fullName: SuperOffice.CRM.Entities.ContactCollection.Rows
- uid: SuperOffice.CRM.Entities.EntityCollectionBase.Sentries
  commentId: P:SuperOffice.CRM.Entities.EntityCollectionBase.Sentries
  parent: SuperOffice.CRM.Entities.EntityCollectionBase
  isExternal: true
  name: Sentries
  nameWithType: EntityCollectionBase.Sentries
  fullName: SuperOffice.CRM.Entities.EntityCollectionBase.Sentries
- uid: SuperOffice.CRM.Entities.ContactCollection.Sentries*
  commentId: Overload:SuperOffice.CRM.Entities.ContactCollection.Sentries
  isExternal: true
  name: Sentries
  nameWithType: ContactCollection.Sentries
  fullName: SuperOffice.CRM.Entities.ContactCollection.Sentries
- uid: SuperOffice.CRM.Security.SentryCollection
  commentId: T:SuperOffice.CRM.Security.SentryCollection
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: SentryCollection
  nameWithType: SentryCollection
  fullName: SuperOffice.CRM.Security.SentryCollection
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
