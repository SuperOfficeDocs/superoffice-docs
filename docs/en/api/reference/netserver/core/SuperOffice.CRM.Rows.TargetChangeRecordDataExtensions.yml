### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions
  commentId: T:SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions
  id: TargetChangeRecordDataExtensions
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.TargetChangeTableInfo})
  - SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.TargetChangeTableInfo})
  - SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.TargetChangeRecordData)
  - SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TargetChangeRecordData})
  - SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.TargetChangeRow)
  langs:
  - csharp
  - vb
  name: TargetChangeRecordDataExtensions
  nameWithType: TargetChangeRecordDataExtensions
  fullName: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nExtension methods to make it easy to fetch <xref href=\"SuperOffice.CRM.Rows.TargetChangeRecordData\" data-throw-if-not-resolved=\"false\"></xref> objects from the database,\nusing the <see cref=\"!:TargetedSelect\"></see> infrastructure\n"
  syntax:
    content: 'public static class TargetChangeRecordDataExtensions : Object'
    content.vb: >-
      Public Module TargetChangeRecordDataExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.TargetChangeTableInfo})
  commentId: M:SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.TargetChangeTableInfo})
  id: FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.TargetChangeTableInfo})
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions
  langs:
  - csharp
  - vb
  name: FromSelect(TargetedSelect<TargetChangeTableInfo>)
  nameWithType: TargetChangeRecordDataExtensions.FromSelect(TargetedSelect<TargetChangeTableInfo>)
  fullName: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect<SuperOffice.CRM.Data.TargetChangeTableInfo>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFrom a TargetedSelect&lt;TargetChangeTableInfo>, execute it and return an IEnumerable&lt;TargetChangeRecordData> with the results\n"
  example:
  - >-
    <pre><code>            var s = S.NewSelect&lt;DataRightTableInfo>( /* add meaningful restrictions here, or later */ );
                var result = s.FromSelect();</code></pre>
  syntax:
    content: public static IEnumerable<TargetChangeRecordData> FromSelect(this TargetedSelect<TargetChangeTableInfo> select)
    parameters:
    - id: select
      type: SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.TargetChangeTableInfo}
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TargetChangeRecordData}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FromSelect(select As TargetedSelect(Of TargetChangeTableInfo)) As IEnumerable(Of TargetChangeRecordData)
  overload: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromSelect*
  nameWithType.vb: TargetChangeRecordDataExtensions.FromSelect(TargetedSelect(Of TargetChangeTableInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect(Of SuperOffice.CRM.Data.TargetChangeTableInfo))
  name.vb: FromSelect(TargetedSelect(Of TargetChangeTableInfo))
- uid: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.TargetChangeTableInfo})
  commentId: M:SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.TargetChangeTableInfo})
  id: FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.TargetChangeTableInfo})
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions
  langs:
  - csharp
  - vb
  name: FromRecord(TargetedDataRecord<TargetChangeTableInfo>)
  nameWithType: TargetChangeRecordDataExtensions.FromRecord(TargetedDataRecord<TargetChangeTableInfo>)
  fullName: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord<SuperOffice.CRM.Data.TargetChangeTableInfo>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFrom a TargetedDataRecord&lt;TargetChangeTableInfo>, create and populate a <xref href=\"SuperOffice.CRM.Rows.TargetChangeRecordData\" data-throw-if-not-resolved=\"false\"></xref> POCO object\n"
  example:
  - >-
    <pre><code>            var s = S.NewSelect&lt;DataRightTableInfo>( /* add meaningful restrictions here, or later */ );
                /* add joins, return fields etc. as you wish */
                s.ReturnFields.Add(s.Table.All);
                var result = s.Records().Select(r => new { TargetChangeItem = r.FromRecord(), /* fetch other fields here */ });</code></pre>
  syntax:
    content: public static TargetChangeRecordData FromRecord(this TargetedDataRecord<TargetChangeTableInfo> record)
    parameters:
    - id: record
      type: SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.TargetChangeTableInfo}
    return:
      type: SuperOffice.CRM.Rows.TargetChangeRecordData
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FromRecord(record As TargetedDataRecord(Of TargetChangeTableInfo)) As TargetChangeRecordData
  overload: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromRecord*
  nameWithType.vb: TargetChangeRecordDataExtensions.FromRecord(TargetedDataRecord(Of TargetChangeTableInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord(Of SuperOffice.CRM.Data.TargetChangeTableInfo))
  name.vb: FromRecord(TargetedDataRecord(Of TargetChangeTableInfo))
- uid: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.TargetChangeRecordData)
  commentId: M:SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.TargetChangeRecordData)
  id: ToInsert(SuperOffice.CRM.Rows.TargetChangeRecordData)
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions
  langs:
  - csharp
  - vb
  name: ToInsert(TargetChangeRecordData)
  nameWithType: TargetChangeRecordDataExtensions.ToInsert(TargetChangeRecordData)
  fullName: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.TargetChangeRecordData)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public static Insert ToInsert(this TargetChangeRecordData record)
    parameters:
    - id: record
      type: SuperOffice.CRM.Rows.TargetChangeRecordData
    return:
      type: SuperOffice.Data.SQL.Insert
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToInsert(record As TargetChangeRecordData) As Insert
  overload: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInsert*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TargetChangeRecordData})
  commentId: M:SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TargetChangeRecordData})
  id: ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TargetChangeRecordData})
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions
  langs:
  - csharp
  - vb
  name: ToInserts(IEnumerable<TargetChangeRecordData>)
  nameWithType: TargetChangeRecordDataExtensions.ToInserts(IEnumerable<TargetChangeRecordData>)
  fullName: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.TargetChangeRecordData>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public static IEnumerable<Insert> ToInserts(this IEnumerable<TargetChangeRecordData> records)
    parameters:
    - id: records
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TargetChangeRecordData}
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.Insert}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToInserts(records As IEnumerable(Of TargetChangeRecordData)) As IEnumerable(Of Insert)
  overload: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInserts*
  nameWithType.vb: TargetChangeRecordDataExtensions.ToInserts(IEnumerable(Of TargetChangeRecordData))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.TargetChangeRecordData))
  name.vb: ToInserts(IEnumerable(Of TargetChangeRecordData))
- uid: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.TargetChangeRow)
  commentId: M:SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.TargetChangeRow)
  id: ToRecordData(SuperOffice.CRM.Rows.TargetChangeRow)
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions
  langs:
  - csharp
  - vb
  name: ToRecordData(TargetChangeRow)
  nameWithType: TargetChangeRecordDataExtensions.ToRecordData(TargetChangeRow)
  fullName: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.TargetChangeRow)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public static TargetChangeRecordData ToRecordData(this TargetChangeRow row)
    parameters:
    - id: row
      type: SuperOffice.CRM.Rows.TargetChangeRow
    return:
      type: SuperOffice.CRM.Rows.TargetChangeRecordData
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToRecordData(row As TargetChangeRow) As TargetChangeRecordData
  overload: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToRecordData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromSelect*
  commentId: Overload:SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromSelect
  isExternal: true
  name: FromSelect
  nameWithType: TargetChangeRecordDataExtensions.FromSelect
  fullName: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromSelect
- uid: SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.TargetChangeTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.TargetChangeTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedSelect`1
  name: TargetedSelect<TargetChangeTableInfo>
  nameWithType: TargetedSelect<TargetChangeTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedSelect<SuperOffice.CRM.Data.TargetChangeTableInfo>
  nameWithType.vb: TargetedSelect(Of TargetChangeTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedSelect(Of SuperOffice.CRM.Data.TargetChangeTableInfo)
  name.vb: TargetedSelect(Of TargetChangeTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TargetChangeTableInfo
    name: TargetChangeTableInfo
    nameWithType: TargetChangeTableInfo
    fullName: SuperOffice.CRM.Data.TargetChangeTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TargetChangeTableInfo
    name: TargetChangeTableInfo
    nameWithType: TargetChangeTableInfo
    fullName: SuperOffice.CRM.Data.TargetChangeTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TargetChangeRecordData}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TargetChangeRecordData}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TargetChangeRecordData>
  nameWithType: IEnumerable<TargetChangeRecordData>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.TargetChangeRecordData>
  nameWithType.vb: IEnumerable(Of TargetChangeRecordData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.TargetChangeRecordData)
  name.vb: IEnumerable(Of TargetChangeRecordData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.TargetChangeRecordData
    name: TargetChangeRecordData
    nameWithType: TargetChangeRecordData
    fullName: SuperOffice.CRM.Rows.TargetChangeRecordData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.TargetChangeRecordData
    name: TargetChangeRecordData
    nameWithType: TargetChangeRecordData
    fullName: SuperOffice.CRM.Rows.TargetChangeRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TargetedSelect`1
  commentId: T:SuperOffice.Data.SQL.TargetedSelect`1
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TargetedSelect<MainTableInfo>
  nameWithType: TargetedSelect<MainTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedSelect<MainTableInfo>
  nameWithType.vb: TargetedSelect(Of MainTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedSelect(Of MainTableInfo)
  name.vb: TargetedSelect(Of MainTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromRecord*
  commentId: Overload:SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromRecord
  isExternal: true
  name: FromRecord
  nameWithType: TargetChangeRecordDataExtensions.FromRecord
  fullName: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.FromRecord
- uid: SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.TargetChangeTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.TargetChangeTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedDataRecord`1
  name: TargetedDataRecord<TargetChangeTableInfo>
  nameWithType: TargetedDataRecord<TargetChangeTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedDataRecord<SuperOffice.CRM.Data.TargetChangeTableInfo>
  nameWithType.vb: TargetedDataRecord(Of TargetChangeTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedDataRecord(Of SuperOffice.CRM.Data.TargetChangeTableInfo)
  name.vb: TargetedDataRecord(Of TargetChangeTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TargetChangeTableInfo
    name: TargetChangeTableInfo
    nameWithType: TargetChangeTableInfo
    fullName: SuperOffice.CRM.Data.TargetChangeTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TargetChangeTableInfo
    name: TargetChangeTableInfo
    nameWithType: TargetChangeTableInfo
    fullName: SuperOffice.CRM.Data.TargetChangeTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TargetChangeRecordData
  commentId: T:SuperOffice.CRM.Rows.TargetChangeRecordData
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TargetChangeRecordData
  nameWithType: TargetChangeRecordData
  fullName: SuperOffice.CRM.Rows.TargetChangeRecordData
- uid: SuperOffice.Data.SQL.TargetedDataRecord`1
  commentId: T:SuperOffice.Data.SQL.TargetedDataRecord`1
  isExternal: true
  name: TargetedDataRecord<MainTableInfo>
  nameWithType: TargetedDataRecord<MainTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedDataRecord<MainTableInfo>
  nameWithType.vb: TargetedDataRecord(Of MainTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedDataRecord(Of MainTableInfo)
  name.vb: TargetedDataRecord(Of MainTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInsert*
  commentId: Overload:SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInsert
  isExternal: true
  name: ToInsert
  nameWithType: TargetChangeRecordDataExtensions.ToInsert
  fullName: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInsert
- uid: SuperOffice.Data.SQL.Insert
  commentId: T:SuperOffice.Data.SQL.Insert
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Insert
  nameWithType: Insert
  fullName: SuperOffice.Data.SQL.Insert
- uid: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInserts*
  commentId: Overload:SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInserts
  isExternal: true
  name: ToInserts
  nameWithType: TargetChangeRecordDataExtensions.ToInserts
  fullName: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToInserts
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.Insert}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.Insert}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Insert>
  nameWithType: IEnumerable<Insert>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.Insert>
  nameWithType.vb: IEnumerable(Of Insert)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.Insert)
  name.vb: IEnumerable(Of Insert)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.Insert
    name: Insert
    nameWithType: Insert
    fullName: SuperOffice.Data.SQL.Insert
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.Insert
    name: Insert
    nameWithType: Insert
    fullName: SuperOffice.Data.SQL.Insert
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToRecordData*
  commentId: Overload:SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToRecordData
  isExternal: true
  name: ToRecordData
  nameWithType: TargetChangeRecordDataExtensions.ToRecordData
  fullName: SuperOffice.CRM.Rows.TargetChangeRecordDataExtensions.ToRecordData
- uid: SuperOffice.CRM.Rows.TargetChangeRow
  commentId: T:SuperOffice.CRM.Rows.TargetChangeRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TargetChangeRow
  nameWithType: TargetChangeRow
  fullName: SuperOffice.CRM.Rows.TargetChangeRow
