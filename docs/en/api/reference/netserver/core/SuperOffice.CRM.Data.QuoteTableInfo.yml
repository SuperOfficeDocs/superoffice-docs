### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Data.QuoteTableInfo
  commentId: T:SuperOffice.CRM.Data.QuoteTableInfo
  id: QuoteTableInfo
  parent: SuperOffice.CRM.Data
  children:
  - SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId
  - SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId_InnerJoin_QuoteAlternative
  - SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId
  - SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId_InnerJoin_QuoteVersion
  - SuperOffice.CRM.Data.QuoteTableInfo.Definition
  - SuperOffice.CRM.Data.QuoteTableInfo.DictionaryTableName
  - SuperOffice.CRM.Data.QuoteTableInfo.DictionaryTableNumber
  - SuperOffice.CRM.Data.QuoteTableInfo.DocumentId
  - SuperOffice.CRM.Data.QuoteTableInfo.DocumentId_InnerJoin_Document
  - SuperOffice.CRM.Data.QuoteTableInfo.ERPOrderKey
  - SuperOffice.CRM.Data.QuoteTableInfo.ERPQuoteKey
  - SuperOffice.CRM.Data.QuoteTableInfo.LeftOuterJoin_QuoteVersion_QuoteId
  - SuperOffice.CRM.Data.QuoteTableInfo.OrderComment
  - SuperOffice.CRM.Data.QuoteTableInfo.PoNumber
  - SuperOffice.CRM.Data.QuoteTableInfo.PreferredEmailCulture
  - SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId
  - SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId_InnerJoin_QuoteConnection
  - SuperOffice.CRM.Data.QuoteTableInfo.QuoteId
  - SuperOffice.CRM.Data.QuoteTableInfo.Registered
  - SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId
  - SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId_InnerJoin_Associate
  - SuperOffice.CRM.Data.QuoteTableInfo.RuntimeDefinition
  - SuperOffice.CRM.Data.QuoteTableInfo.SaleId
  - SuperOffice.CRM.Data.QuoteTableInfo.SaleId_InnerJoin_Sale
  - SuperOffice.CRM.Data.QuoteTableInfo.Updated
  - SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId
  - SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId_InnerJoin_Associate
  - SuperOffice.CRM.Data.QuoteTableInfo.UpdatedCount
  - SuperOffice.CRM.Data.QuoteTableInfo.UseValuesFromQuote
  langs:
  - csharp
  - vb
  name: QuoteTableInfo
  nameWithType: QuoteTableInfo
  fullName: SuperOffice.CRM.Data.QuoteTableInfo
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nTable &apos;Quote&apos;: Quote root level, at most one per Sale, always connected to one Sale\n"
  remarks: "\nAn instance of this class represents one instance of this table in an SQL statement. In most\ncases each table appears only once in a SELECT, but in cases where you need to self-join, or\nthere are multiple occurrences for other reasons (typically additional restrictions in the joins),\nthen you will need multiple instances. <br />\nInstances of this class are created by calling <see cref=\"!:TablesInfo.GetQuoteInfo()\"></see>.\n"
  syntax:
    content: >-
      [DatabaseTable("Quote")]

      public class QuoteTableInfo : TableInfo, ICloneable
    content.vb: >-
      <DatabaseTable("Quote")>

      Public Class QuoteTableInfo
          Inherits TableInfo
          Implements ICloneable
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.TableInfo
  implements:
  - System.ICloneable
  inheritedMembers:
  - SuperOffice.Data.SQL.TableInfo.ToString
  - SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  - SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  - SuperOffice.Data.SQL.TableInfo.Clone
  - SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  - SuperOffice.Data.SQL.TableInfo.ProtAll
  - SuperOffice.Data.SQL.TableInfo.HashCheckFields
  - SuperOffice.Data.SQL.TableInfo.TableName
  - SuperOffice.Data.SQL.TableInfo.DbName
  - SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
  - SuperOffice.Data.SQL.TableInfo.All
  - SuperOffice.Data.SQL.TableInfo.Item(System.String)
  - SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Data.QuoteTableInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Data.QuoteTableInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Data.SQL.DatabaseTableAttribute
    ctor: SuperOffice.Data.SQL.DatabaseTableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Quote
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Data.QuoteTableInfo.DictionaryTableName
  commentId: F:SuperOffice.CRM.Data.QuoteTableInfo.DictionaryTableName
  id: DictionaryTableName
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: DictionaryTableName
  nameWithType: QuoteTableInfo.DictionaryTableName
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.DictionaryTableName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nConceptual name of table Quote in the database dictionary: Quote\n"
  syntax:
    content: public const string DictionaryTableName = "Quote"
    return:
      type: System.String
    content.vb: Public Const DictionaryTableName As String = "Quote"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.QuoteTableInfo.DictionaryTableNumber
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.DictionaryTableNumber
  id: DictionaryTableNumber
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: DictionaryTableNumber
  nameWithType: QuoteTableInfo.DictionaryTableNumber
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.DictionaryTableNumber
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nTable number for table Quote in the database dictionary; potentially changes between databases, but\nalways the same over the lifetime of any single database\n"
  syntax:
    content: public int DictionaryTableNumber { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property DictionaryTableNumber As Integer
  overload: SuperOffice.CRM.Data.QuoteTableInfo.DictionaryTableNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.RuntimeDefinition
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.RuntimeDefinition
  id: RuntimeDefinition
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: RuntimeDefinition
  nameWithType: QuoteTableInfo.RuntimeDefinition
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.RuntimeDefinition
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDefinition of the table as described in the deployed runtime dictionary\n"
  syntax:
    content: >-
      [Obsolete("Use instance property Definition or static member DictionaryTableNumber", true)]

      public static SoTable RuntimeDefinition { get; }
    parameters: []
    return:
      type: SuperOffice.Data.Dictionary.SoTable
    content.vb: >-
      <Obsolete("Use instance property Definition or static member DictionaryTableNumber", True)>

      Public Shared ReadOnly Property RuntimeDefinition As SoTable
  overload: SuperOffice.CRM.Data.QuoteTableInfo.RuntimeDefinition*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Use instance property Definition or static member DictionaryTableNumber
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.Definition
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.Definition
  id: Definition
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: Definition
  nameWithType: QuoteTableInfo.Definition
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.Definition
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDefinition of the table as described in the deployed runtime dictionary\n"
  syntax:
    content: public override SoTable Definition { get; }
    parameters: []
    return:
      type: SuperOffice.Data.Dictionary.SoTable
    content.vb: Public Overrides ReadOnly Property Definition As SoTable
  overridden: SuperOffice.Data.SQL.TableInfo.Definition
  overload: SuperOffice.CRM.Data.QuoteTableInfo.Definition*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.QuoteId
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.QuoteId
  id: QuoteId
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: QuoteId
  nameWithType: QuoteTableInfo.QuoteId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.QuoteId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;quote_id&apos; in table &apos;Quote&apos;: Dictionary type PK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nPrimary key\n"
  syntax:
    content: public Int32FieldInfo QuoteId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property QuoteId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.QuoteId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.SaleId
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.SaleId
  id: SaleId
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: SaleId
  nameWithType: QuoteTableInfo.SaleId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.SaleId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;SaleId&apos; in table &apos;Quote&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe foreign key to the corresponding sale\n"
  syntax:
    content: public Int32FieldInfo SaleId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property SaleId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.SaleId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId
  id: QuoteConnectionId
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: QuoteConnectionId
  nameWithType: QuoteTableInfo.QuoteConnectionId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;QuoteConnectionId&apos; in table &apos;Quote&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe connection in the CRM system to where this quote came from. Identifies the ERP connection used for this quote. Each quote is bound to one and only one connection.\n"
  syntax:
    content: public Int32FieldInfo QuoteConnectionId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property QuoteConnectionId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.ERPQuoteKey
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.ERPQuoteKey
  id: ERPQuoteKey
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: ERPQuoteKey
  nameWithType: QuoteTableInfo.ERPQuoteKey
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.ERPQuoteKey
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;ERPQuoteKey&apos; in table &apos;Quote&apos;: Dictionary type String[255], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nForeign key of quote (if available). The key in the ERP system that identifies this sale&apos;s Quote (as opposed to the later Order information)\n"
  syntax:
    content: public StringFieldInfo ERPQuoteKey { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property ERPQuoteKey As StringFieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.ERPQuoteKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.ERPOrderKey
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.ERPOrderKey
  id: ERPOrderKey
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: ERPOrderKey
  nameWithType: QuoteTableInfo.ERPOrderKey
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.ERPOrderKey
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;ERPOrderKey&apos; in table &apos;Quote&apos;: Dictionary type String[255], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe key in the ERP system that identifies this sale&apos;s Order, as transferred and possibly later edited in the ERP system.  Only filled out if there exists a corresponding order representation of the quote in the ERP system.\n"
  syntax:
    content: public StringFieldInfo ERPOrderKey { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property ERPOrderKey As StringFieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.ERPOrderKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId
  id: ActiveQuoteVersionId
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: ActiveQuoteVersionId
  nameWithType: QuoteTableInfo.ActiveQuoteVersionId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;ActiveQuoteVersionId&apos; in table &apos;Quote&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe primary key of the Quote Version that is currently active. (The active version will always be the latest version.)\n"
  syntax:
    content: public Int32FieldInfo ActiveQuoteVersionId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property ActiveQuoteVersionId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId
  id: AcceptedQuoteAlternativeId
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: AcceptedQuoteAlternativeId
  nameWithType: QuoteTableInfo.AcceptedQuoteAlternativeId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;AcceptedQuoteAlternativeId&apos; in table &apos;Quote&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe primary key of the Quote Alternative which was finally accepted by the customer. Set when the user is marking a quote as accepted.\n"
  syntax:
    content: public Int32FieldInfo AcceptedQuoteAlternativeId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property AcceptedQuoteAlternativeId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.UseValuesFromQuote
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.UseValuesFromQuote
  id: UseValuesFromQuote
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: UseValuesFromQuote
  nameWithType: QuoteTableInfo.UseValuesFromQuote
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.UseValuesFromQuote
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;UseValuesFromQuote&apos; in table &apos;Quote&apos;: Dictionary type Bool, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nIf true, then the Earning, Earning_Percent and Amount fields are populated from the QuoteVersion.QuoteAlternative (current revision, most-likely alternative).\n"
  syntax:
    content: public UInt16FieldInfo UseValuesFromQuote { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property UseValuesFromQuote As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.UseValuesFromQuote*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.DocumentId
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.DocumentId
  id: DocumentId
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: DocumentId
  nameWithType: QuoteTableInfo.DocumentId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.DocumentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;DocumentId&apos; in table &apos;Quote&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe ID of the main Quote Document\n"
  syntax:
    content: public Int32FieldInfo DocumentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property DocumentId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.DocumentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.PreferredEmailCulture
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.PreferredEmailCulture
  id: PreferredEmailCulture
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: PreferredEmailCulture
  nameWithType: QuoteTableInfo.PreferredEmailCulture
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.PreferredEmailCulture
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;PreferredEmailCulture&apos; in table &apos;Quote&apos;: Dictionary type String[20], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nWhen emails are sent (offer or confirmation), a language can be chosen in the GUI; this field saves the most recent choice and can be used to default the next such choice. Default-default is user&apos;s current language\n"
  syntax:
    content: public StringFieldInfo PreferredEmailCulture { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property PreferredEmailCulture As StringFieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.PreferredEmailCulture*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.PoNumber
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.PoNumber
  id: PoNumber
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: PoNumber
  nameWithType: QuoteTableInfo.PoNumber
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.PoNumber
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;PoNumber&apos; in table &apos;Quote&apos;: Dictionary type String[128], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nCustomer&apos;s Purchase order number\n"
  syntax:
    content: public StringFieldInfo PoNumber { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property PoNumber As StringFieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.PoNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.OrderComment
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.OrderComment
  id: OrderComment
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: OrderComment
  nameWithType: QuoteTableInfo.OrderComment
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.OrderComment
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;OrderComment&apos; in table &apos;Quote&apos;: Dictionary type String[2047], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nA comment that is intended for the Invoice, Order, Packing list and similar stages - AFTER the quote has become an order and goes to ERP for processing\n"
  syntax:
    content: public StringFieldInfo OrderComment { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property OrderComment As StringFieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.OrderComment*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.Registered
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.Registered
  id: Registered
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: Registered
  nameWithType: QuoteTableInfo.Registered
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.Registered
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;registered&apos; in table &apos;Quote&apos;: Dictionary type UtcDateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nRegistered when\n"
  syntax:
    content: public DateTimeFieldInfo Registered { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property Registered As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.Registered*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId
  id: RegisteredAssociateId
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId
  nameWithType: QuoteTableInfo.RegisteredAssociateId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;registered_associate_id&apos; in table &apos;Quote&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nRegistered by whom\n"
  syntax:
    content: public Int32FieldInfo RegisteredAssociateId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property RegisteredAssociateId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.Updated
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.Updated
  id: Updated
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: QuoteTableInfo.Updated
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.Updated
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;updated&apos; in table &apos;Quote&apos;: Dictionary type UtcDateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nLast updated when\n"
  syntax:
    content: public DateTimeFieldInfo Updated { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property Updated As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.Updated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId
  id: UpdatedAssociateId
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId
  nameWithType: QuoteTableInfo.UpdatedAssociateId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;updated_associate_id&apos; in table &apos;Quote&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nLast updated by whom\n"
  syntax:
    content: public Int32FieldInfo UpdatedAssociateId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property UpdatedAssociateId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.UpdatedCount
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.UpdatedCount
  id: UpdatedCount
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: UpdatedCount
  nameWithType: QuoteTableInfo.UpdatedCount
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.UpdatedCount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;updatedCount&apos; in table &apos;Quote&apos;: Dictionary type UShort, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nNumber of updates made to this record\n"
  syntax:
    content: public UInt16FieldInfo UpdatedCount { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property UpdatedCount As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.QuoteTableInfo.UpdatedCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.SaleId_InnerJoin_Sale
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.SaleId_InnerJoin_Sale
  id: SaleId_InnerJoin_Sale
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: SaleId_InnerJoin_Sale
  nameWithType: QuoteTableInfo.SaleId_InnerJoin_Sale
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.SaleId_InnerJoin_Sale
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key SaleId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.SaleTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<SaleTableInfo> SaleId_InnerJoin_Sale { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SaleTableInfo}
    content.vb: Public ReadOnly Property SaleId_InnerJoin_Sale As TargetedInnerJoin(Of SaleTableInfo)
  overload: SuperOffice.CRM.Data.QuoteTableInfo.SaleId_InnerJoin_Sale*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId_InnerJoin_QuoteConnection
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId_InnerJoin_QuoteConnection
  id: QuoteConnectionId_InnerJoin_QuoteConnection
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: QuoteConnectionId_InnerJoin_QuoteConnection
  nameWithType: QuoteTableInfo.QuoteConnectionId_InnerJoin_QuoteConnection
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId_InnerJoin_QuoteConnection
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key QuoteConnectionId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.QuoteConnectionTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<QuoteConnectionTableInfo> QuoteConnectionId_InnerJoin_QuoteConnection { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.QuoteConnectionTableInfo}
    content.vb: Public ReadOnly Property QuoteConnectionId_InnerJoin_QuoteConnection As TargetedInnerJoin(Of QuoteConnectionTableInfo)
  overload: SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId_InnerJoin_QuoteConnection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId_InnerJoin_QuoteVersion
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId_InnerJoin_QuoteVersion
  id: ActiveQuoteVersionId_InnerJoin_QuoteVersion
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: ActiveQuoteVersionId_InnerJoin_QuoteVersion
  nameWithType: QuoteTableInfo.ActiveQuoteVersionId_InnerJoin_QuoteVersion
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId_InnerJoin_QuoteVersion
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key ActiveQuoteVersionId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.QuoteVersionTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<QuoteVersionTableInfo> ActiveQuoteVersionId_InnerJoin_QuoteVersion { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.QuoteVersionTableInfo}
    content.vb: Public ReadOnly Property ActiveQuoteVersionId_InnerJoin_QuoteVersion As TargetedInnerJoin(Of QuoteVersionTableInfo)
  overload: SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId_InnerJoin_QuoteVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId_InnerJoin_QuoteAlternative
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId_InnerJoin_QuoteAlternative
  id: AcceptedQuoteAlternativeId_InnerJoin_QuoteAlternative
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: AcceptedQuoteAlternativeId_InnerJoin_QuoteAlternative
  nameWithType: QuoteTableInfo.AcceptedQuoteAlternativeId_InnerJoin_QuoteAlternative
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId_InnerJoin_QuoteAlternative
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key AcceptedQuoteAlternativeId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.QuoteAlternativeTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<QuoteAlternativeTableInfo> AcceptedQuoteAlternativeId_InnerJoin_QuoteAlternative { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.QuoteAlternativeTableInfo}
    content.vb: Public ReadOnly Property AcceptedQuoteAlternativeId_InnerJoin_QuoteAlternative As TargetedInnerJoin(Of QuoteAlternativeTableInfo)
  overload: SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId_InnerJoin_QuoteAlternative*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.DocumentId_InnerJoin_Document
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.DocumentId_InnerJoin_Document
  id: DocumentId_InnerJoin_Document
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: DocumentId_InnerJoin_Document
  nameWithType: QuoteTableInfo.DocumentId_InnerJoin_Document
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.DocumentId_InnerJoin_Document
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key DocumentId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.DocumentTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<DocumentTableInfo> DocumentId_InnerJoin_Document { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.DocumentTableInfo}
    content.vb: Public ReadOnly Property DocumentId_InnerJoin_Document As TargetedInnerJoin(Of DocumentTableInfo)
  overload: SuperOffice.CRM.Data.QuoteTableInfo.DocumentId_InnerJoin_Document*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId_InnerJoin_Associate
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId_InnerJoin_Associate
  id: RegisteredAssociateId_InnerJoin_Associate
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId_InnerJoin_Associate
  nameWithType: QuoteTableInfo.RegisteredAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId_InnerJoin_Associate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key RegisteredAssociateId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.AssociateTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<AssociateTableInfo> RegisteredAssociateId_InnerJoin_Associate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
    content.vb: Public ReadOnly Property RegisteredAssociateId_InnerJoin_Associate As TargetedInnerJoin(Of AssociateTableInfo)
  overload: SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId_InnerJoin_Associate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId_InnerJoin_Associate
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId_InnerJoin_Associate
  id: UpdatedAssociateId_InnerJoin_Associate
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId_InnerJoin_Associate
  nameWithType: QuoteTableInfo.UpdatedAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId_InnerJoin_Associate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key UpdatedAssociateId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.AssociateTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<AssociateTableInfo> UpdatedAssociateId_InnerJoin_Associate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
    content.vb: Public ReadOnly Property UpdatedAssociateId_InnerJoin_Associate As TargetedInnerJoin(Of AssociateTableInfo)
  overload: SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId_InnerJoin_Associate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.QuoteTableInfo.LeftOuterJoin_QuoteVersion_QuoteId
  commentId: P:SuperOffice.CRM.Data.QuoteTableInfo.LeftOuterJoin_QuoteVersion_QuoteId
  id: LeftOuterJoin_QuoteVersion_QuoteId
  parent: SuperOffice.CRM.Data.QuoteTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_QuoteVersion_QuoteId
  nameWithType: QuoteTableInfo.LeftOuterJoin_QuoteVersion_QuoteId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.LeftOuterJoin_QuoteVersion_QuoteId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key QuoteId on this table, to QuoteVersion.<xref href=\"SuperOffice.CRM.Data.QuoteVersionTableInfo.QuoteId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<QuoteVersionTableInfo> LeftOuterJoin_QuoteVersion_QuoteId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.QuoteVersionTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_QuoteVersion_QuoteId As TargetedLeftOuterJoin(Of QuoteVersionTableInfo)
  overload: SuperOffice.CRM.Data.QuoteTableInfo.LeftOuterJoin_QuoteVersion_QuoteId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: SuperOffice.Data.SQL.TableInfo.ToString
  commentId: M:SuperOffice.Data.SQL.TableInfo.ToString
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: ToString()
  nameWithType: TableInfo.ToString()
  fullName: SuperOffice.Data.SQL.TableInfo.ToString()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.ToString
    name: ToString
    nameWithType: TableInfo.ToString
    fullName: SuperOffice.Data.SQL.TableInfo.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.ToString
    name: ToString
    nameWithType: TableInfo.ToString
    fullName: SuperOffice.Data.SQL.TableInfo.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  commentId: M:SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: RegisterFields(FieldInfo[])
  nameWithType: TableInfo.RegisterFields(FieldInfo[])
  fullName: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  nameWithType.vb: TableInfo.RegisterFields(FieldInfo())
  fullName.vb: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo())
  name.vb: RegisterFields(FieldInfo())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
    name: RegisterFields
    nameWithType: TableInfo.RegisterFields
    fullName: SuperOffice.Data.SQL.TableInfo.RegisterFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
    name: RegisterFields
    nameWithType: TableInfo.RegisterFields
    fullName: SuperOffice.Data.SQL.TableInfo.RegisterFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  commentId: M:SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: FieldInfoFromSoField(SoField)
  nameWithType: TableInfo.FieldInfoFromSoField(SoField)
  fullName: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
    name: FieldInfoFromSoField
    nameWithType: TableInfo.FieldInfoFromSoField
    fullName: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
    name: FieldInfoFromSoField
    nameWithType: TableInfo.FieldInfoFromSoField
    fullName: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.Clone
  commentId: M:SuperOffice.Data.SQL.TableInfo.Clone
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: Clone()
  nameWithType: TableInfo.Clone()
  fullName: SuperOffice.Data.SQL.TableInfo.Clone()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.Clone
    name: Clone
    nameWithType: TableInfo.Clone
    fullName: SuperOffice.Data.SQL.TableInfo.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.Clone
    name: Clone
    nameWithType: TableInfo.Clone
    fullName: SuperOffice.Data.SQL.TableInfo.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: IsSameTable(TableInfo)
  nameWithType: TableInfo.IsSameTable(TableInfo)
  fullName: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
    name: IsSameTable
    nameWithType: TableInfo.IsSameTable
    fullName: SuperOffice.Data.SQL.TableInfo.IsSameTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
    name: IsSameTable
    nameWithType: TableInfo.IsSameTable
    fullName: SuperOffice.Data.SQL.TableInfo.IsSameTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  commentId: M:SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: FindField(String)
  nameWithType: TableInfo.FindField(String)
  fullName: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
    name: FindField
    nameWithType: TableInfo.FindField
    fullName: SuperOffice.Data.SQL.TableInfo.FindField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
    name: FindField
    nameWithType: TableInfo.FindField
    fullName: SuperOffice.Data.SQL.TableInfo.FindField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.ProtAll
  commentId: P:SuperOffice.Data.SQL.TableInfo.ProtAll
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: ProtAll
  nameWithType: TableInfo.ProtAll
  fullName: SuperOffice.Data.SQL.TableInfo.ProtAll
- uid: SuperOffice.Data.SQL.TableInfo.HashCheckFields
  commentId: P:SuperOffice.Data.SQL.TableInfo.HashCheckFields
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: HashCheckFields
  nameWithType: TableInfo.HashCheckFields
  fullName: SuperOffice.Data.SQL.TableInfo.HashCheckFields
- uid: SuperOffice.Data.SQL.TableInfo.TableName
  commentId: P:SuperOffice.Data.SQL.TableInfo.TableName
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: TableName
  nameWithType: TableInfo.TableName
  fullName: SuperOffice.Data.SQL.TableInfo.TableName
- uid: SuperOffice.Data.SQL.TableInfo.DbName
  commentId: P:SuperOffice.Data.SQL.TableInfo.DbName
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: DbName
  nameWithType: TableInfo.DbName
  fullName: SuperOffice.Data.SQL.TableInfo.DbName
- uid: SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
  commentId: P:SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: IsDictionaryTable
  nameWithType: TableInfo.IsDictionaryTable
  fullName: SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
- uid: SuperOffice.Data.SQL.TableInfo.All
  commentId: P:SuperOffice.Data.SQL.TableInfo.All
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: All
  nameWithType: TableInfo.All
  fullName: SuperOffice.Data.SQL.TableInfo.All
- uid: SuperOffice.Data.SQL.TableInfo.Item(System.String)
  commentId: P:SuperOffice.Data.SQL.TableInfo.Item(System.String)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: Item[String]
  nameWithType: TableInfo.Item[String]
  fullName: SuperOffice.Data.SQL.TableInfo.Item[System.String]
  nameWithType.vb: TableInfo.Item(String)
  fullName.vb: SuperOffice.Data.SQL.TableInfo.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.Item(System.String)
    name: Item
    nameWithType: TableInfo.Item
    fullName: SuperOffice.Data.SQL.TableInfo.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.Item(System.String)
    name: Item
    nameWithType: TableInfo.Item
    fullName: SuperOffice.Data.SQL.TableInfo.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
  commentId: P:SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: PrimaryKeyField
  nameWithType: TableInfo.PrimaryKeyField
  fullName: SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.QuoteTableInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<QuoteTableInfo, To>()
  nameWithType: EnumUtil.MapEnums<QuoteTableInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Data.QuoteTableInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of QuoteTableInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Data.QuoteTableInfo, To)()
  name.vb: MapEnums(Of QuoteTableInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<QuoteTableInfo, To>
    nameWithType: EnumUtil.MapEnums<QuoteTableInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Data.QuoteTableInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of QuoteTableInfo, To)
    nameWithType: EnumUtil.MapEnums(Of QuoteTableInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Data.QuoteTableInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.QuoteTableInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<QuoteTableInfo, To>()
  nameWithType: Converters.MapEnums<QuoteTableInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Data.QuoteTableInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of QuoteTableInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Data.QuoteTableInfo, To)()
  name.vb: MapEnums(Of QuoteTableInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<QuoteTableInfo, To>
    nameWithType: Converters.MapEnums<QuoteTableInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Data.QuoteTableInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of QuoteTableInfo, To)
    nameWithType: Converters.MapEnums(Of QuoteTableInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Data.QuoteTableInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Data.QuoteTableInfo.DictionaryTableNumber*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.DictionaryTableNumber
  isExternal: true
  name: DictionaryTableNumber
  nameWithType: QuoteTableInfo.DictionaryTableNumber
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.DictionaryTableNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Data.QuoteTableInfo.RuntimeDefinition*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.RuntimeDefinition
  isExternal: true
  name: RuntimeDefinition
  nameWithType: QuoteTableInfo.RuntimeDefinition
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.RuntimeDefinition
- uid: SuperOffice.Data.Dictionary.SoTable
  commentId: T:SuperOffice.Data.Dictionary.SoTable
  parent: SuperOffice.Data.Dictionary
  isExternal: true
  name: SoTable
  nameWithType: SoTable
  fullName: SuperOffice.Data.Dictionary.SoTable
- uid: SuperOffice.Data.Dictionary
  commentId: N:SuperOffice.Data.Dictionary
  isExternal: true
  name: SuperOffice.Data.Dictionary
  nameWithType: SuperOffice.Data.Dictionary
  fullName: SuperOffice.Data.Dictionary
- uid: SuperOffice.Data.SQL.TableInfo.Definition
  commentId: P:SuperOffice.Data.SQL.TableInfo.Definition
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: Definition
  nameWithType: TableInfo.Definition
  fullName: SuperOffice.Data.SQL.TableInfo.Definition
- uid: SuperOffice.CRM.Data.QuoteTableInfo.Definition*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.Definition
  isExternal: true
  name: Definition
  nameWithType: QuoteTableInfo.Definition
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.Definition
- uid: SuperOffice.CRM.Data.QuoteTableInfo.QuoteId*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.QuoteId
  isExternal: true
  name: QuoteId
  nameWithType: QuoteTableInfo.QuoteId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.QuoteId
- uid: SuperOffice.Data.SQL.Int32FieldInfo
  commentId: T:SuperOffice.Data.SQL.Int32FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Int32FieldInfo
  nameWithType: Int32FieldInfo
  fullName: SuperOffice.Data.SQL.Int32FieldInfo
- uid: SuperOffice.CRM.Data.QuoteTableInfo.SaleId*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.SaleId
  isExternal: true
  name: SaleId
  nameWithType: QuoteTableInfo.SaleId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.SaleId
- uid: SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId
  isExternal: true
  name: QuoteConnectionId
  nameWithType: QuoteTableInfo.QuoteConnectionId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId
- uid: SuperOffice.CRM.Data.QuoteTableInfo.ERPQuoteKey*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.ERPQuoteKey
  isExternal: true
  name: ERPQuoteKey
  nameWithType: QuoteTableInfo.ERPQuoteKey
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.ERPQuoteKey
- uid: SuperOffice.Data.SQL.StringFieldInfo
  commentId: T:SuperOffice.Data.SQL.StringFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: StringFieldInfo
  nameWithType: StringFieldInfo
  fullName: SuperOffice.Data.SQL.StringFieldInfo
- uid: SuperOffice.CRM.Data.QuoteTableInfo.ERPOrderKey*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.ERPOrderKey
  isExternal: true
  name: ERPOrderKey
  nameWithType: QuoteTableInfo.ERPOrderKey
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.ERPOrderKey
- uid: SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId
  isExternal: true
  name: ActiveQuoteVersionId
  nameWithType: QuoteTableInfo.ActiveQuoteVersionId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId
- uid: SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId
  isExternal: true
  name: AcceptedQuoteAlternativeId
  nameWithType: QuoteTableInfo.AcceptedQuoteAlternativeId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId
- uid: SuperOffice.CRM.Data.QuoteTableInfo.UseValuesFromQuote*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.UseValuesFromQuote
  isExternal: true
  name: UseValuesFromQuote
  nameWithType: QuoteTableInfo.UseValuesFromQuote
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.UseValuesFromQuote
- uid: SuperOffice.Data.SQL.UInt16FieldInfo
  commentId: T:SuperOffice.Data.SQL.UInt16FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: UInt16FieldInfo
  nameWithType: UInt16FieldInfo
  fullName: SuperOffice.Data.SQL.UInt16FieldInfo
- uid: SuperOffice.CRM.Data.QuoteTableInfo.DocumentId*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.DocumentId
  isExternal: true
  name: DocumentId
  nameWithType: QuoteTableInfo.DocumentId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.DocumentId
- uid: SuperOffice.CRM.Data.QuoteTableInfo.PreferredEmailCulture*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.PreferredEmailCulture
  isExternal: true
  name: PreferredEmailCulture
  nameWithType: QuoteTableInfo.PreferredEmailCulture
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.PreferredEmailCulture
- uid: SuperOffice.CRM.Data.QuoteTableInfo.PoNumber*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.PoNumber
  isExternal: true
  name: PoNumber
  nameWithType: QuoteTableInfo.PoNumber
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.PoNumber
- uid: SuperOffice.CRM.Data.QuoteTableInfo.OrderComment*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.OrderComment
  isExternal: true
  name: OrderComment
  nameWithType: QuoteTableInfo.OrderComment
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.OrderComment
- uid: SuperOffice.CRM.Data.QuoteTableInfo.Registered*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.Registered
  isExternal: true
  name: Registered
  nameWithType: QuoteTableInfo.Registered
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.Registered
- uid: SuperOffice.Data.SQL.DateTimeFieldInfo
  commentId: T:SuperOffice.Data.SQL.DateTimeFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: DateTimeFieldInfo
  nameWithType: DateTimeFieldInfo
  fullName: SuperOffice.Data.SQL.DateTimeFieldInfo
- uid: SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId
  isExternal: true
  name: RegisteredAssociateId
  nameWithType: QuoteTableInfo.RegisteredAssociateId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId
- uid: SuperOffice.CRM.Data.QuoteTableInfo.Updated*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.Updated
  isExternal: true
  name: Updated
  nameWithType: QuoteTableInfo.Updated
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.Updated
- uid: SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId
  isExternal: true
  name: UpdatedAssociateId
  nameWithType: QuoteTableInfo.UpdatedAssociateId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId
- uid: SuperOffice.CRM.Data.QuoteTableInfo.UpdatedCount*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.UpdatedCount
  isExternal: true
  name: UpdatedCount
  nameWithType: QuoteTableInfo.UpdatedCount
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.UpdatedCount
- uid: SuperOffice.CRM.Data.QuoteTableInfo.SaleId_InnerJoin_Sale*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.SaleId_InnerJoin_Sale
  isExternal: true
  name: SaleId_InnerJoin_Sale
  nameWithType: QuoteTableInfo.SaleId_InnerJoin_Sale
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.SaleId_InnerJoin_Sale
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SaleTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.SaleTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<SaleTableInfo>
  nameWithType: TargetedInnerJoin<SaleTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.SaleTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of SaleTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.SaleTableInfo)
  name.vb: TargetedInnerJoin(Of SaleTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.SaleTableInfo
    name: SaleTableInfo
    nameWithType: SaleTableInfo
    fullName: SuperOffice.CRM.Data.SaleTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.SaleTableInfo
    name: SaleTableInfo
    nameWithType: SaleTableInfo
    fullName: SuperOffice.CRM.Data.SaleTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin`1
  isExternal: true
  name: TargetedInnerJoin<TargetTableInfo>
  nameWithType: TargetedInnerJoin<TargetTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<TargetTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of TargetTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of TargetTableInfo)
  name.vb: TargetedInnerJoin(Of TargetTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId_InnerJoin_QuoteConnection*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId_InnerJoin_QuoteConnection
  isExternal: true
  name: QuoteConnectionId_InnerJoin_QuoteConnection
  nameWithType: QuoteTableInfo.QuoteConnectionId_InnerJoin_QuoteConnection
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.QuoteConnectionId_InnerJoin_QuoteConnection
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.QuoteConnectionTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.QuoteConnectionTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<QuoteConnectionTableInfo>
  nameWithType: TargetedInnerJoin<QuoteConnectionTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.QuoteConnectionTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of QuoteConnectionTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.QuoteConnectionTableInfo)
  name.vb: TargetedInnerJoin(Of QuoteConnectionTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.QuoteConnectionTableInfo
    name: QuoteConnectionTableInfo
    nameWithType: QuoteConnectionTableInfo
    fullName: SuperOffice.CRM.Data.QuoteConnectionTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.QuoteConnectionTableInfo
    name: QuoteConnectionTableInfo
    nameWithType: QuoteConnectionTableInfo
    fullName: SuperOffice.CRM.Data.QuoteConnectionTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId_InnerJoin_QuoteVersion*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId_InnerJoin_QuoteVersion
  isExternal: true
  name: ActiveQuoteVersionId_InnerJoin_QuoteVersion
  nameWithType: QuoteTableInfo.ActiveQuoteVersionId_InnerJoin_QuoteVersion
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.ActiveQuoteVersionId_InnerJoin_QuoteVersion
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.QuoteVersionTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.QuoteVersionTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<QuoteVersionTableInfo>
  nameWithType: TargetedInnerJoin<QuoteVersionTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.QuoteVersionTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of QuoteVersionTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.QuoteVersionTableInfo)
  name.vb: TargetedInnerJoin(Of QuoteVersionTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.QuoteVersionTableInfo
    name: QuoteVersionTableInfo
    nameWithType: QuoteVersionTableInfo
    fullName: SuperOffice.CRM.Data.QuoteVersionTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.QuoteVersionTableInfo
    name: QuoteVersionTableInfo
    nameWithType: QuoteVersionTableInfo
    fullName: SuperOffice.CRM.Data.QuoteVersionTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId_InnerJoin_QuoteAlternative*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId_InnerJoin_QuoteAlternative
  isExternal: true
  name: AcceptedQuoteAlternativeId_InnerJoin_QuoteAlternative
  nameWithType: QuoteTableInfo.AcceptedQuoteAlternativeId_InnerJoin_QuoteAlternative
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.AcceptedQuoteAlternativeId_InnerJoin_QuoteAlternative
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.QuoteAlternativeTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.QuoteAlternativeTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<QuoteAlternativeTableInfo>
  nameWithType: TargetedInnerJoin<QuoteAlternativeTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.QuoteAlternativeTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of QuoteAlternativeTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.QuoteAlternativeTableInfo)
  name.vb: TargetedInnerJoin(Of QuoteAlternativeTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.QuoteAlternativeTableInfo
    name: QuoteAlternativeTableInfo
    nameWithType: QuoteAlternativeTableInfo
    fullName: SuperOffice.CRM.Data.QuoteAlternativeTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.QuoteAlternativeTableInfo
    name: QuoteAlternativeTableInfo
    nameWithType: QuoteAlternativeTableInfo
    fullName: SuperOffice.CRM.Data.QuoteAlternativeTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.QuoteTableInfo.DocumentId_InnerJoin_Document*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.DocumentId_InnerJoin_Document
  isExternal: true
  name: DocumentId_InnerJoin_Document
  nameWithType: QuoteTableInfo.DocumentId_InnerJoin_Document
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.DocumentId_InnerJoin_Document
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.DocumentTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.DocumentTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<DocumentTableInfo>
  nameWithType: TargetedInnerJoin<DocumentTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.DocumentTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of DocumentTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.DocumentTableInfo)
  name.vb: TargetedInnerJoin(Of DocumentTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.DocumentTableInfo
    name: DocumentTableInfo
    nameWithType: DocumentTableInfo
    fullName: SuperOffice.CRM.Data.DocumentTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.DocumentTableInfo
    name: DocumentTableInfo
    nameWithType: DocumentTableInfo
    fullName: SuperOffice.CRM.Data.DocumentTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId_InnerJoin_Associate*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId_InnerJoin_Associate
  isExternal: true
  name: RegisteredAssociateId_InnerJoin_Associate
  nameWithType: QuoteTableInfo.RegisteredAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.RegisteredAssociateId_InnerJoin_Associate
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<AssociateTableInfo>
  nameWithType: TargetedInnerJoin<AssociateTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.AssociateTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of AssociateTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.AssociateTableInfo)
  name.vb: TargetedInnerJoin(Of AssociateTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.AssociateTableInfo
    name: AssociateTableInfo
    nameWithType: AssociateTableInfo
    fullName: SuperOffice.CRM.Data.AssociateTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.AssociateTableInfo
    name: AssociateTableInfo
    nameWithType: AssociateTableInfo
    fullName: SuperOffice.CRM.Data.AssociateTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId_InnerJoin_Associate*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId_InnerJoin_Associate
  isExternal: true
  name: UpdatedAssociateId_InnerJoin_Associate
  nameWithType: QuoteTableInfo.UpdatedAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.UpdatedAssociateId_InnerJoin_Associate
- uid: SuperOffice.CRM.Data.QuoteTableInfo.LeftOuterJoin_QuoteVersion_QuoteId*
  commentId: Overload:SuperOffice.CRM.Data.QuoteTableInfo.LeftOuterJoin_QuoteVersion_QuoteId
  isExternal: true
  name: LeftOuterJoin_QuoteVersion_QuoteId
  nameWithType: QuoteTableInfo.LeftOuterJoin_QuoteVersion_QuoteId
  fullName: SuperOffice.CRM.Data.QuoteTableInfo.LeftOuterJoin_QuoteVersion_QuoteId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.QuoteVersionTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.QuoteVersionTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<QuoteVersionTableInfo>
  nameWithType: TargetedLeftOuterJoin<QuoteVersionTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.QuoteVersionTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of QuoteVersionTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.QuoteVersionTableInfo)
  name.vb: TargetedLeftOuterJoin(Of QuoteVersionTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.QuoteVersionTableInfo
    name: QuoteVersionTableInfo
    nameWithType: QuoteVersionTableInfo
    fullName: SuperOffice.CRM.Data.QuoteVersionTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.QuoteVersionTableInfo
    name: QuoteVersionTableInfo
    nameWithType: QuoteVersionTableInfo
    fullName: SuperOffice.CRM.Data.QuoteVersionTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  isExternal: true
  name: TargetedLeftOuterJoin<TargetTableInfo>
  nameWithType: TargetedLeftOuterJoin<TargetTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<TargetTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of TargetTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of TargetTableInfo)
  name.vb: TargetedLeftOuterJoin(Of TargetTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: )
    nameWithType: )
    fullName: )
