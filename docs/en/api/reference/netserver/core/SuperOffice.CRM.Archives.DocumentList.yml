### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Archives.DocumentList
  commentId: T:SuperOffice.CRM.Archives.DocumentList
  id: DocumentList
  parent: SuperOffice.CRM.Archives
  children:
  - SuperOffice.CRM.Archives.DocumentList.DocumentExist(System.Int32)
  - SuperOffice.CRM.Archives.DocumentList.GetDocument(System.Int32)
  - SuperOffice.CRM.Archives.DocumentList.GetDocumentListItem(System.Int32)
  - SuperOffice.CRM.Archives.DocumentList.OnLoad(SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.Data.SoDataReader)
  langs:
  - csharp
  - vb
  name: DocumentList
  nameWithType: DocumentList
  fullName: SuperOffice.CRM.Archives.DocumentList
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nDocumentList implements the document list in SuperOffice. \n"
  syntax:
    content: 'public sealed class DocumentList : ListBase<DocumentList.DocumentListQuery, DocumentListItem>, IEnumerable, IEnumerable<DocumentListItem>, IList, ICollection, IList<DocumentListItem>, ICollection<DocumentListItem>'
    content.vb: >-
      Public NotInheritable Class DocumentList
          Inherits ListBase(Of DocumentList.DocumentListQuery, DocumentListItem)
          Implements IEnumerable, IEnumerable(Of DocumentListItem), IList, ICollection, IList(Of DocumentListItem), ICollection(Of DocumentListItem)
  inheritance:
  - System.Object
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}
  implements:
  - System.Collections.IEnumerable
  - System.Collections.Generic.IEnumerable{SuperOffice.CRM.Archives.DocumentListItem}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IList{SuperOffice.CRM.Archives.DocumentListItem}
  - System.Collections.Generic.ICollection{SuperOffice.CRM.Archives.DocumentListItem}
  inheritedMembers:
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.CopyTo(System.Array,System.Int32)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.CopyTo(SuperOffice.CRM.Archives.DocumentListItem[],System.Int32)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.IndexOf(SuperOffice.CRM.Archives.DocumentListItem)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.Contains(SuperOffice.CRM.Archives.DocumentListItem)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.OnLoad(SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.Data.SoDataReader)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.GetEnumerator
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.Item(System.Int32)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.ListCollection
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.Count
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.IsFixedSize
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.IsReadOnly
  extensionMethods:
  - SuperOffice.CRM.Archives.DocumentList.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Archives.DocumentList.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.Archives.DocumentList.OnLoad(SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Archives.DocumentList.OnLoad(SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.Data.SoDataReader)
  id: OnLoad(SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Archives.DocumentList
  langs:
  - csharp
  - vb
  name: OnLoad(DocumentList.DocumentListQuery, SoDataReader)
  nameWithType: DocumentList.OnLoad(DocumentList.DocumentListQuery, SoDataReader)
  fullName: SuperOffice.CRM.Archives.DocumentList.OnLoad(SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.Data.SoDataReader)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nResponsible for reading each row with data from the SoDataReader and insert the object each row represents\ninto the class&apos; collection. \n"
  syntax:
    content: protected override void OnLoad(DocumentList.DocumentListQuery query, SoDataReader reader)
    parameters:
    - id: query
      type: SuperOffice.CRM.Archives.DocumentList.DocumentListQuery
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: The reader which contains all data in the list.
    content.vb: Protected Overrides Sub OnLoad(query As DocumentList.DocumentListQuery, reader As SoDataReader)
  overridden: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.OnLoad(SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.Data.SoDataReader)
  overload: SuperOffice.CRM.Archives.DocumentList.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Archives.DocumentList.GetDocument(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.DocumentList.GetDocument(System.Int32)
  id: GetDocument(System.Int32)
  parent: SuperOffice.CRM.Archives.DocumentList
  langs:
  - csharp
  - vb
  name: GetDocument(Int32)
  nameWithType: DocumentList.GetDocument(Int32)
  fullName: SuperOffice.CRM.Archives.DocumentList.GetDocument(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nReturns the document described by the document_id.\n"
  syntax:
    content: public Document GetDocument(int documentId)
    parameters:
    - id: documentId
      type: System.Int32
      description: The document in question
    return:
      type: SuperOffice.CRM.Entities.Document
      description: The Document
    content.vb: Public Function GetDocument(documentId As Integer) As Document
  overload: SuperOffice.CRM.Archives.DocumentList.GetDocument*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Archives.DocumentList.DocumentExist(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.DocumentList.DocumentExist(System.Int32)
  id: DocumentExist(System.Int32)
  parent: SuperOffice.CRM.Archives.DocumentList
  langs:
  - csharp
  - vb
  name: DocumentExist(Int32)
  nameWithType: DocumentList.DocumentExist(Int32)
  fullName: SuperOffice.CRM.Archives.DocumentList.DocumentExist(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nChecks if the document described by the document exist in the list.\n"
  syntax:
    content: public bool DocumentExist(int documentId)
    parameters:
    - id: documentId
      type: System.Int32
      description: The document
    return:
      type: System.Boolean
      description: True/false
    content.vb: Public Function DocumentExist(documentId As Integer) As Boolean
  overload: SuperOffice.CRM.Archives.DocumentList.DocumentExist*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Archives.DocumentList.GetDocumentListItem(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.DocumentList.GetDocumentListItem(System.Int32)
  id: GetDocumentListItem(System.Int32)
  parent: SuperOffice.CRM.Archives.DocumentList
  langs:
  - csharp
  - vb
  name: GetDocumentListItem(Int32)
  nameWithType: DocumentList.GetDocumentListItem(Int32)
  fullName: SuperOffice.CRM.Archives.DocumentList.GetDocumentListItem(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nWill return the DocumentListItem described by the documentId.\n"
  syntax:
    content: public DocumentListItem GetDocumentListItem(int documentId)
    parameters:
    - id: documentId
      type: System.Int32
      description: The person
    return:
      type: SuperOffice.CRM.Archives.DocumentListItem
      description: The document.
    content.vb: Public Function GetDocumentListItem(documentId As Integer) As DocumentListItem
  overload: SuperOffice.CRM.Archives.DocumentList.GetDocumentListItem*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Archives
  commentId: N:SuperOffice.CRM.Archives
  isExternal: true
  name: SuperOffice.CRM.Archives
  nameWithType: SuperOffice.CRM.Archives
  fullName: SuperOffice.CRM.Archives
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}
  commentId: T:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}
  parent: SuperOffice.CRM.Lists
  definition: SuperOffice.CRM.Lists.ListBase`2
  name: ListBase<DocumentList.DocumentListQuery, DocumentListItem>
  nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>
  nameWithType.vb: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem)
  name.vb: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.DocumentList.DocumentListQuery
    name: DocumentList.DocumentListQuery
    nameWithType: DocumentList.DocumentListQuery
    fullName: SuperOffice.CRM.Archives.DocumentList.DocumentListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Archives.DocumentListItem
    name: DocumentListItem
    nameWithType: DocumentListItem
    fullName: SuperOffice.CRM.Archives.DocumentListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.DocumentList.DocumentListQuery
    name: DocumentList.DocumentListQuery
    nameWithType: DocumentList.DocumentListQuery
    fullName: SuperOffice.CRM.Archives.DocumentList.DocumentListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Archives.DocumentListItem
    name: DocumentListItem
    nameWithType: DocumentListItem
    fullName: SuperOffice.CRM.Archives.DocumentListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Archives.DocumentListItem}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Archives.DocumentListItem}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<DocumentListItem>
  nameWithType: IEnumerable<DocumentListItem>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Archives.DocumentListItem>
  nameWithType.vb: IEnumerable(Of DocumentListItem)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Archives.DocumentListItem)
  name.vb: IEnumerable(Of DocumentListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.DocumentListItem
    name: DocumentListItem
    nameWithType: DocumentListItem
    fullName: SuperOffice.CRM.Archives.DocumentListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.DocumentListItem
    name: DocumentListItem
    nameWithType: DocumentListItem
    fullName: SuperOffice.CRM.Archives.DocumentListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IList{SuperOffice.CRM.Archives.DocumentListItem}
  commentId: '!:System.Collections.Generic.IList{SuperOffice.CRM.Archives.DocumentListItem}'
  definition: System.Collections.Generic.IList`1
  name: IList<DocumentListItem>
  nameWithType: IList<DocumentListItem>
  fullName: System.Collections.Generic.IList<SuperOffice.CRM.Archives.DocumentListItem>
  nameWithType.vb: IList(Of DocumentListItem)
  fullName.vb: System.Collections.Generic.IList(Of SuperOffice.CRM.Archives.DocumentListItem)
  name.vb: IList(Of DocumentListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.DocumentListItem
    name: DocumentListItem
    nameWithType: DocumentListItem
    fullName: SuperOffice.CRM.Archives.DocumentListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.DocumentListItem
    name: DocumentListItem
    nameWithType: DocumentListItem
    fullName: SuperOffice.CRM.Archives.DocumentListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{SuperOffice.CRM.Archives.DocumentListItem}
  commentId: '!:System.Collections.Generic.ICollection{SuperOffice.CRM.Archives.DocumentListItem}'
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<DocumentListItem>
  nameWithType: ICollection<DocumentListItem>
  fullName: System.Collections.Generic.ICollection<SuperOffice.CRM.Archives.DocumentListItem>
  nameWithType.vb: ICollection(Of DocumentListItem)
  fullName.vb: System.Collections.Generic.ICollection(Of SuperOffice.CRM.Archives.DocumentListItem)
  name.vb: ICollection(Of DocumentListItem)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.DocumentListItem
    name: DocumentListItem
    nameWithType: DocumentListItem
    fullName: SuperOffice.CRM.Archives.DocumentListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.DocumentListItem
    name: DocumentListItem
    nameWithType: DocumentListItem
    fullName: SuperOffice.CRM.Archives.DocumentListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.CopyTo(System.Array,System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.CopyTo(System.Array,System.Int32)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
  name: CopyTo(Array, Int32)
  nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.CopyTo(Array, Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.CopyTo(System.Array, System.Int32)
  nameWithType.vb: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).CopyTo(Array, Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.CopyTo(SuperOffice.CRM.Archives.DocumentListItem[],System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.CopyTo(SuperOffice.CRM.Archives.DocumentListItem[],System.Int32)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
  name: CopyTo(DocumentListItem[], Int32)
  nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.CopyTo(DocumentListItem[], Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.CopyTo(SuperOffice.CRM.Archives.DocumentListItem[], System.Int32)
  nameWithType.vb: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).CopyTo(DocumentListItem(), Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).CopyTo(SuperOffice.CRM.Archives.DocumentListItem(), System.Int32)
  name.vb: CopyTo(DocumentListItem(), Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.DocumentListItem
    name: DocumentListItem
    nameWithType: DocumentListItem
    fullName: SuperOffice.CRM.Archives.DocumentListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.DocumentListItem
    name: DocumentListItem
    nameWithType: DocumentListItem
    fullName: SuperOffice.CRM.Archives.DocumentListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.IndexOf(SuperOffice.CRM.Archives.DocumentListItem)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.IndexOf(SuperOffice.CRM.Archives.DocumentListItem)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
  name: IndexOf(DocumentListItem)
  nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.IndexOf(DocumentListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.IndexOf(SuperOffice.CRM.Archives.DocumentListItem)
  nameWithType.vb: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).IndexOf(DocumentListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).IndexOf(SuperOffice.CRM.Archives.DocumentListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.DocumentListItem
    name: DocumentListItem
    nameWithType: DocumentListItem
    fullName: SuperOffice.CRM.Archives.DocumentListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.DocumentListItem
    name: DocumentListItem
    nameWithType: DocumentListItem
    fullName: SuperOffice.CRM.Archives.DocumentListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.Contains(SuperOffice.CRM.Archives.DocumentListItem)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.Contains(SuperOffice.CRM.Archives.DocumentListItem)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
  name: Contains(DocumentListItem)
  nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.Contains(DocumentListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.Contains(SuperOffice.CRM.Archives.DocumentListItem)
  nameWithType.vb: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).Contains(DocumentListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).Contains(SuperOffice.CRM.Archives.DocumentListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.Contains
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.DocumentListItem
    name: DocumentListItem
    nameWithType: DocumentListItem
    fullName: SuperOffice.CRM.Archives.DocumentListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).Contains
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.DocumentListItem
    name: DocumentListItem
    nameWithType: DocumentListItem
    fullName: SuperOffice.CRM.Archives.DocumentListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.OnLoad(SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.OnLoad(SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
  name: OnLoad(DocumentList.DocumentListQuery, SoDataReader)
  nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.OnLoad(DocumentList.DocumentListQuery, SoDataReader)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.OnLoad(SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.Data.SoDataReader)
  nameWithType.vb: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).OnLoad(DocumentList.DocumentListQuery, SoDataReader)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).OnLoad(SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.Data.SoDataReader)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
    name: OnLoad
    nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.OnLoad
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.DocumentList.DocumentListQuery
    name: DocumentList.DocumentListQuery
    nameWithType: DocumentList.DocumentListQuery
    fullName: SuperOffice.CRM.Archives.DocumentList.DocumentListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
    name: OnLoad
    nameWithType: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).OnLoad
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.DocumentList.DocumentListQuery
    name: DocumentList.DocumentListQuery
    nameWithType: DocumentList.DocumentListQuery
    fullName: SuperOffice.CRM.Archives.DocumentList.DocumentListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.GetEnumerator
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.GetEnumerator
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.GetEnumerator()
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.GetEnumerator()
  nameWithType.vb: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).GetEnumerator()
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).GetEnumerator()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.Item(System.Int32)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
  name: Item[Int32]
  nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.Item[Int32]
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.Item[System.Int32]
  nameWithType.vb: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).Item(Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.Item
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).Item
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.ListCollection
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.ListCollection
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.ListCollection
  name: ListCollection
  nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.ListCollection
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.ListCollection
  nameWithType.vb: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).ListCollection
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).ListCollection
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.Count
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.Count
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.Count
  name: Count
  nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.Count
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.Count
  nameWithType.vb: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).Count
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).Count
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.IsFixedSize
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.IsFixedSize
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  name: IsFixedSize
  nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.IsFixedSize
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.IsFixedSize
  nameWithType.vb: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).IsFixedSize
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).IsFixedSize
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.IsReadOnly
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}.IsReadOnly
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.DocumentList.DocumentListQuery,SuperOffice.CRM.Archives.DocumentListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  name: IsReadOnly
  nameWithType: ListBase<DocumentList.DocumentListQuery, DocumentListItem>.IsReadOnly
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem>.IsReadOnly
  nameWithType.vb: ListBase(Of DocumentList.DocumentListQuery, DocumentListItem).IsReadOnly
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.DocumentList.DocumentListQuery, SuperOffice.CRM.Archives.DocumentListItem).IsReadOnly
- uid: SuperOffice.CRM.Archives.DocumentList.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<DocumentList, To>()
  nameWithType: EnumUtil.MapEnums<DocumentList, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Archives.DocumentList, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of DocumentList, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Archives.DocumentList, To)()
  name.vb: MapEnums(Of DocumentList, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<DocumentList, To>
    nameWithType: EnumUtil.MapEnums<DocumentList, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Archives.DocumentList, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of DocumentList, To)
    nameWithType: EnumUtil.MapEnums(Of DocumentList, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Archives.DocumentList, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Archives.DocumentList.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<DocumentList, To>()
  nameWithType: Converters.MapEnums<DocumentList, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Archives.DocumentList, To>()
  nameWithType.vb: Converters.MapEnums(Of DocumentList, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Archives.DocumentList, To)()
  name.vb: MapEnums(Of DocumentList, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<DocumentList, To>
    nameWithType: Converters.MapEnums<DocumentList, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Archives.DocumentList, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of DocumentList, To)
    nameWithType: Converters.MapEnums(Of DocumentList, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Archives.DocumentList, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Lists.ListBase`2
  commentId: T:SuperOffice.CRM.Lists.ListBase`2
  isExternal: true
  name: ListBase<TListSelect, TListItem>
  nameWithType: ListBase<TListSelect, TListItem>
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>
  nameWithType.vb: ListBase(Of TListSelect, TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem)
  name.vb: ListBase(Of TListSelect, TListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists
  commentId: N:SuperOffice.CRM.Lists
  isExternal: true
  name: SuperOffice.CRM.Lists
  nameWithType: SuperOffice.CRM.Lists
  fullName: SuperOffice.CRM.Lists
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: System.Collections.Generic.IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: System.Collections.Generic.ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: System.Collections.Generic.ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
  isExternal: true
  name: CopyTo(Array, Int32)
  nameWithType: ListBase<TListSelect, TListItem>.CopyTo(Array, Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo(System.Array, System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).CopyTo(Array, Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase<TListSelect, TListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of TListSelect, TListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
  isExternal: true
  name: CopyTo(TListItem[], Int32)
  nameWithType: ListBase<TListSelect, TListItem>.CopyTo(TListItem[], Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo(TListItem[], System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).CopyTo(TListItem(), Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo(TListItem(), System.Int32)
  name.vb: CopyTo(TListItem(), Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase<TListSelect, TListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of TListSelect, TListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
  isExternal: true
  name: IndexOf(TListItem)
  nameWithType: ListBase<TListSelect, TListItem>.IndexOf(TListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IndexOf(TListItem)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IndexOf(TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IndexOf(TListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase<TListSelect, TListItem>.IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase(Of TListSelect, TListItem).IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
  isExternal: true
  name: Contains(TListItem)
  nameWithType: ListBase<TListSelect, TListItem>.Contains(TListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Contains(TListItem)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Contains(TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Contains(TListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase<TListSelect, TListItem>.Contains
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase(Of TListSelect, TListItem).Contains
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
  isExternal: true
  name: OnLoad(TListSelect, SoDataReader)
  nameWithType: ListBase<TListSelect, TListItem>.OnLoad(TListSelect, SoDataReader)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.OnLoad(TListSelect, SuperOffice.Data.SoDataReader)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).OnLoad(TListSelect, SoDataReader)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).OnLoad(TListSelect, SuperOffice.Data.SoDataReader)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
    name: OnLoad
    nameWithType: ListBase<TListSelect, TListItem>.OnLoad
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
    name: OnLoad
    nameWithType: ListBase(Of TListSelect, TListItem).OnLoad
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: ListBase<TListSelect, TListItem>.GetEnumerator()
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.GetEnumerator()
  nameWithType.vb: ListBase(Of TListSelect, TListItem).GetEnumerator()
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).GetEnumerator()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase<TListSelect, TListItem>.GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase(Of TListSelect, TListItem).GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: ListBase<TListSelect, TListItem>.Item[Int32]
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Item[System.Int32]
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Item(Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase<TListSelect, TListItem>.Item
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase(Of TListSelect, TListItem).Item
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.ListCollection
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.ListCollection
  isExternal: true
  name: ListCollection
  nameWithType: ListBase<TListSelect, TListItem>.ListCollection
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.ListCollection
  nameWithType.vb: ListBase(Of TListSelect, TListItem).ListCollection
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).ListCollection
- uid: SuperOffice.CRM.Lists.ListBase`2.Count
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.Count
  isExternal: true
  name: Count
  nameWithType: ListBase<TListSelect, TListItem>.Count
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Count
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Count
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Count
- uid: SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  isExternal: true
  name: IsFixedSize
  nameWithType: ListBase<TListSelect, TListItem>.IsFixedSize
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IsFixedSize
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IsFixedSize
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IsFixedSize
- uid: SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ListBase<TListSelect, TListItem>.IsReadOnly
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IsReadOnly
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IsReadOnly
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IsReadOnly
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Archives.DocumentList.OnLoad*
  commentId: Overload:SuperOffice.CRM.Archives.DocumentList.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: DocumentList.OnLoad
  fullName: SuperOffice.CRM.Archives.DocumentList.OnLoad
- uid: SuperOffice.CRM.Archives.DocumentList.DocumentListQuery
  commentId: T:SuperOffice.CRM.Archives.DocumentList.DocumentListQuery
  parent: SuperOffice.CRM.Archives
  isExternal: true
  name: DocumentList.DocumentListQuery
  nameWithType: DocumentList.DocumentListQuery
  fullName: SuperOffice.CRM.Archives.DocumentList.DocumentListQuery
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Archives.DocumentList.GetDocument*
  commentId: Overload:SuperOffice.CRM.Archives.DocumentList.GetDocument
  isExternal: true
  name: GetDocument
  nameWithType: DocumentList.GetDocument
  fullName: SuperOffice.CRM.Archives.DocumentList.GetDocument
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Entities.Document
  commentId: T:SuperOffice.CRM.Entities.Document
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: Document
  nameWithType: Document
  fullName: SuperOffice.CRM.Entities.Document
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
- uid: SuperOffice.CRM.Archives.DocumentList.DocumentExist*
  commentId: Overload:SuperOffice.CRM.Archives.DocumentList.DocumentExist
  isExternal: true
  name: DocumentExist
  nameWithType: DocumentList.DocumentExist
  fullName: SuperOffice.CRM.Archives.DocumentList.DocumentExist
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Archives.DocumentList.GetDocumentListItem*
  commentId: Overload:SuperOffice.CRM.Archives.DocumentList.GetDocumentListItem
  isExternal: true
  name: GetDocumentListItem
  nameWithType: DocumentList.GetDocumentListItem
  fullName: SuperOffice.CRM.Archives.DocumentList.GetDocumentListItem
- uid: SuperOffice.CRM.Archives.DocumentListItem
  commentId: T:SuperOffice.CRM.Archives.DocumentListItem
  parent: SuperOffice.CRM.Archives
  isExternal: true
  name: DocumentListItem
  nameWithType: DocumentListItem
  fullName: SuperOffice.CRM.Archives.DocumentListItem
