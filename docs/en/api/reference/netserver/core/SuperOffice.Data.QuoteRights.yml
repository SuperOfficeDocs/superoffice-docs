### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.QuoteRights
  commentId: T:SuperOffice.Data.QuoteRights
  id: QuoteRights
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.QuoteRights.Mandatory
  - SuperOffice.Data.QuoteRights.None
  - SuperOffice.Data.QuoteRights.ReadOnly
  - SuperOffice.Data.QuoteRights.Writable
  langs:
  - csharp
  - vb
  name: QuoteRights
  nameWithType: QuoteRights
  fullName: SuperOffice.Data.QuoteRights
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\nQuoteRights are used for quoteline and product rights\nRights can be one of: N (=None or Hidden), R (=Read-only), W (=Writeable), M (=Mandatory).\n"
  syntax:
    content: 'public static class QuoteRights : Object'
    content.vb: >-
      Public Module QuoteRights
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.Data.QuoteRights.None
  commentId: F:SuperOffice.Data.QuoteRights.None
  id: None
  parent: SuperOffice.Data.QuoteRights
  langs:
  - csharp
  - vb
  name: None
  nameWithType: QuoteRights.None
  fullName: SuperOffice.Data.QuoteRights.None
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  syntax:
    content: public const string None = "N"
    return:
      type: System.String
    content.vb: Public Const None As String = "N"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.QuoteRights.ReadOnly
  commentId: F:SuperOffice.Data.QuoteRights.ReadOnly
  id: ReadOnly
  parent: SuperOffice.Data.QuoteRights
  langs:
  - csharp
  - vb
  name: ReadOnly
  nameWithType: QuoteRights.ReadOnly
  fullName: SuperOffice.Data.QuoteRights.ReadOnly
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  syntax:
    content: public const string ReadOnly = "R"
    return:
      type: System.String
    content.vb: Public Const ReadOnly As String = "R"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.QuoteRights.Writable
  commentId: F:SuperOffice.Data.QuoteRights.Writable
  id: Writable
  parent: SuperOffice.Data.QuoteRights
  langs:
  - csharp
  - vb
  name: Writable
  nameWithType: QuoteRights.Writable
  fullName: SuperOffice.Data.QuoteRights.Writable
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  syntax:
    content: public const string Writable = "W"
    return:
      type: System.String
    content.vb: Public Const Writable As String = "W"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.QuoteRights.Mandatory
  commentId: F:SuperOffice.Data.QuoteRights.Mandatory
  id: Mandatory
  parent: SuperOffice.Data.QuoteRights
  langs:
  - csharp
  - vb
  name: Mandatory
  nameWithType: QuoteRights.Mandatory
  fullName: SuperOffice.Data.QuoteRights.Mandatory
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  syntax:
    content: public const string Mandatory = "M"
    return:
      type: System.String
    content.vb: Public Const Mandatory As String = "M"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
