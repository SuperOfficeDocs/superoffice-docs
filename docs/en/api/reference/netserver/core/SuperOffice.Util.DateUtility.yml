### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.DateUtility
  commentId: T:SuperOffice.Util.DateUtility
  id: DateUtility
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.DateUtility.AddReporterHalfYears(System.DateTime,System.Int32)
  - SuperOffice.Util.DateUtility.AddReporterMonth(System.DateTime)
  - SuperOffice.Util.DateUtility.AddReporterMonths(System.DateTime,System.Int32)
  - SuperOffice.Util.DateUtility.AddReporterQuarter(System.DateTime)
  - SuperOffice.Util.DateUtility.AddReporterQuarters(System.DateTime,System.Int32)
  - SuperOffice.Util.DateUtility.AddReporterWeek(System.DateTime)
  - SuperOffice.Util.DateUtility.AddReporterWeeks(System.DateTime,System.Int32)
  - SuperOffice.Util.DateUtility.AddReporterYear(System.DateTime)
  - SuperOffice.Util.DateUtility.AddReporterYears(System.DateTime,System.Int32)
  - SuperOffice.Util.DateUtility.CalcSeconds(System.DateTime)
  - SuperOffice.Util.DateUtility.CalculateEndDate(System.DateTime,System.Int32,SuperOffice.Data.DurationUnit)
  - SuperOffice.Util.DateUtility.CalculateEndDate(System.Int32,SuperOffice.Data.DurationUnit)
  - SuperOffice.Util.DateUtility.CloseEnoughTo(System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.Util.DateUtility.DropFractionsOfSecond(System.DateTime,System.Nullable{System.DateTimeKind})
  - SuperOffice.Util.DateUtility.Earliest(System.DateTime[])
  - SuperOffice.Util.DateUtility.GetFirstInMonth(System.DateTime)
  - SuperOffice.Util.DateUtility.GetStartOfHalfYear(System.DateTime)
  - SuperOffice.Util.DateUtility.GetStartOfMonth(System.DateTime)
  - SuperOffice.Util.DateUtility.GetStartOfQuarter(System.DateTime)
  - SuperOffice.Util.DateUtility.GetStartOfWeek(System.DateTime,System.Boolean)
  - SuperOffice.Util.DateUtility.GetStartOfYear(System.DateTime)
  - SuperOffice.Util.DateUtility.GetWeekStartDelta(System.DateTime,System.Boolean)
  - SuperOffice.Util.DateUtility.Latest(System.DateTime[])
  - SuperOffice.Util.DateUtility.Round(System.DateTime,System.Int32,SuperOffice.Data.RoundDirection)
  - SuperOffice.Util.DateUtility.SetTime(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32)
  - SuperOffice.Util.DateUtility.SetToEndOfDay(System.DateTime)
  - SuperOffice.Util.DateUtility.ToMinutes(System.Double)
  - SuperOffice.Util.DateUtility.ToMinutes(System.TimeSpan)
  langs:
  - csharp
  - vb
  name: DateUtility
  nameWithType: DateUtility
  fullName: SuperOffice.Util.DateUtility
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: 'public static class DateUtility : Object'
    content.vb: >-
      Public Module DateUtility
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.Util.DateUtility.Round(System.DateTime,System.Int32,SuperOffice.Data.RoundDirection)
  commentId: M:SuperOffice.Util.DateUtility.Round(System.DateTime,System.Int32,SuperOffice.Data.RoundDirection)
  id: Round(System.DateTime,System.Int32,SuperOffice.Data.RoundDirection)
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: Round(DateTime, Int32, RoundDirection)
  nameWithType: DateUtility.Round(DateTime, Int32, RoundDirection)
  fullName: SuperOffice.Util.DateUtility.Round(System.DateTime, System.Int32, SuperOffice.Data.RoundDirection)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static DateTime Round(DateTime dateTime, int minutes, RoundDirection direction)
    parameters:
    - id: dateTime
      type: System.DateTime
    - id: minutes
      type: System.Int32
    - id: direction
      type: SuperOffice.Data.RoundDirection
    return:
      type: System.DateTime
    content.vb: Public Shared Function Round(dateTime As DateTime, minutes As Integer, direction As RoundDirection) As DateTime
  overload: SuperOffice.Util.DateUtility.Round*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterYears(System.DateTime,System.Int32)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterYears(System.DateTime,System.Int32)
  id: AddReporterYears(System.DateTime,System.Int32)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterYears(DateTime, Int32)
  nameWithType: DateUtility.AddReporterYears(DateTime, Int32)
  fullName: SuperOffice.Util.DateUtility.AddReporterYears(System.DateTime, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds the required amount of years, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterYears(this DateTime date, int yearCount)
    parameters:
    - id: date
      type: System.DateTime
    - id: yearCount
      type: System.Int32
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterYears(date As DateTime, yearCount As Integer) As DateTime
  overload: SuperOffice.Util.DateUtility.AddReporterYears*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterYear(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterYear(System.DateTime)
  id: AddReporterYear(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterYear(DateTime)
  nameWithType: DateUtility.AddReporterYear(DateTime)
  fullName: SuperOffice.Util.DateUtility.AddReporterYear(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds a year, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterYear(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterYear(date As DateTime) As DateTime
  overload: SuperOffice.Util.DateUtility.AddReporterYear*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterHalfYears(System.DateTime,System.Int32)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterHalfYears(System.DateTime,System.Int32)
  id: AddReporterHalfYears(System.DateTime,System.Int32)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterHalfYears(DateTime, Int32)
  nameWithType: DateUtility.AddReporterHalfYears(DateTime, Int32)
  fullName: SuperOffice.Util.DateUtility.AddReporterHalfYears(System.DateTime, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds the required amount of half years, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterHalfYears(this DateTime date, int halfYearCount = 1)
    parameters:
    - id: date
      type: System.DateTime
    - id: halfYearCount
      type: System.Int32
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterHalfYears(date As DateTime, halfYearCount As Integer = 1) As DateTime
  overload: SuperOffice.Util.DateUtility.AddReporterHalfYears*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterQuarters(System.DateTime,System.Int32)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterQuarters(System.DateTime,System.Int32)
  id: AddReporterQuarters(System.DateTime,System.Int32)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterQuarters(DateTime, Int32)
  nameWithType: DateUtility.AddReporterQuarters(DateTime, Int32)
  fullName: SuperOffice.Util.DateUtility.AddReporterQuarters(System.DateTime, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds the required amount of quarters of a year, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterQuarters(this DateTime date, int quarterCount)
    parameters:
    - id: date
      type: System.DateTime
    - id: quarterCount
      type: System.Int32
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterQuarters(date As DateTime, quarterCount As Integer) As DateTime
  overload: SuperOffice.Util.DateUtility.AddReporterQuarters*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterQuarter(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterQuarter(System.DateTime)
  id: AddReporterQuarter(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterQuarter(DateTime)
  nameWithType: DateUtility.AddReporterQuarter(DateTime)
  fullName: SuperOffice.Util.DateUtility.AddReporterQuarter(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds a quarter of a year, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterQuarter(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterQuarter(date As DateTime) As DateTime
  overload: SuperOffice.Util.DateUtility.AddReporterQuarter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterMonths(System.DateTime,System.Int32)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterMonths(System.DateTime,System.Int32)
  id: AddReporterMonths(System.DateTime,System.Int32)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterMonths(DateTime, Int32)
  nameWithType: DateUtility.AddReporterMonths(DateTime, Int32)
  fullName: SuperOffice.Util.DateUtility.AddReporterMonths(System.DateTime, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds the required amount of months, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterMonths(this DateTime date, int monthCount)
    parameters:
    - id: date
      type: System.DateTime
    - id: monthCount
      type: System.Int32
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterMonths(date As DateTime, monthCount As Integer) As DateTime
  overload: SuperOffice.Util.DateUtility.AddReporterMonths*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterMonth(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterMonth(System.DateTime)
  id: AddReporterMonth(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterMonth(DateTime)
  nameWithType: DateUtility.AddReporterMonth(DateTime)
  fullName: SuperOffice.Util.DateUtility.AddReporterMonth(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds a month, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterMonth(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterMonth(date As DateTime) As DateTime
  overload: SuperOffice.Util.DateUtility.AddReporterMonth*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterWeeks(System.DateTime,System.Int32)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterWeeks(System.DateTime,System.Int32)
  id: AddReporterWeeks(System.DateTime,System.Int32)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterWeeks(DateTime, Int32)
  nameWithType: DateUtility.AddReporterWeeks(DateTime, Int32)
  fullName: SuperOffice.Util.DateUtility.AddReporterWeeks(System.DateTime, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds the required number of weeks, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterWeeks(this DateTime date, int weekCount)
    parameters:
    - id: date
      type: System.DateTime
    - id: weekCount
      type: System.Int32
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterWeeks(date As DateTime, weekCount As Integer) As DateTime
  overload: SuperOffice.Util.DateUtility.AddReporterWeeks*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterWeek(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterWeek(System.DateTime)
  id: AddReporterWeek(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterWeek(DateTime)
  nameWithType: DateUtility.AddReporterWeek(DateTime)
  fullName: SuperOffice.Util.DateUtility.AddReporterWeek(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds a week, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterWeek(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterWeek(date As DateTime) As DateTime
  overload: SuperOffice.Util.DateUtility.AddReporterWeek*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.CalculateEndDate(System.DateTime,System.Int32,SuperOffice.Data.DurationUnit)
  commentId: M:SuperOffice.Util.DateUtility.CalculateEndDate(System.DateTime,System.Int32,SuperOffice.Data.DurationUnit)
  id: CalculateEndDate(System.DateTime,System.Int32,SuperOffice.Data.DurationUnit)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: CalculateEndDate(DateTime, Int32, DurationUnit)
  nameWithType: DateUtility.CalculateEndDate(DateTime, Int32, DurationUnit)
  fullName: SuperOffice.Util.DateUtility.CalculateEndDate(System.DateTime, System.Int32, SuperOffice.Data.DurationUnit)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds the amount of days/months depending on the DurationUnit specified.\n"
  syntax:
    content: public static DateTime CalculateEndDate(this DateTime date, int duration, DurationUnit unit)
    parameters:
    - id: date
      type: System.DateTime
    - id: duration
      type: System.Int32
    - id: unit
      type: SuperOffice.Data.DurationUnit
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CalculateEndDate(date As DateTime, duration As Integer, unit As DurationUnit) As DateTime
  overload: SuperOffice.Util.DateUtility.CalculateEndDate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.CalculateEndDate(System.Int32,SuperOffice.Data.DurationUnit)
  commentId: M:SuperOffice.Util.DateUtility.CalculateEndDate(System.Int32,SuperOffice.Data.DurationUnit)
  id: CalculateEndDate(System.Int32,SuperOffice.Data.DurationUnit)
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: CalculateEndDate(Int32, DurationUnit)
  nameWithType: DateUtility.CalculateEndDate(Int32, DurationUnit)
  fullName: SuperOffice.Util.DateUtility.CalculateEndDate(System.Int32, SuperOffice.Data.DurationUnit)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds the amount of days/months depending on the DurationUnit specified to the current datetime.\n"
  syntax:
    content: public static DateTime CalculateEndDate(int duration, DurationUnit unit)
    parameters:
    - id: duration
      type: System.Int32
    - id: unit
      type: SuperOffice.Data.DurationUnit
    return:
      type: System.DateTime
    content.vb: Public Shared Function CalculateEndDate(duration As Integer, unit As DurationUnit) As DateTime
  overload: SuperOffice.Util.DateUtility.CalculateEndDate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.GetFirstInMonth(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.GetFirstInMonth(System.DateTime)
  id: GetFirstInMonth(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: GetFirstInMonth(DateTime)
  nameWithType: DateUtility.GetFirstInMonth(DateTime)
  fullName: SuperOffice.Util.DateUtility.GetFirstInMonth(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static DateTime GetFirstInMonth(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFirstInMonth(date As DateTime) As DateTime
  overload: SuperOffice.Util.DateUtility.GetFirstInMonth*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.SetToEndOfDay(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.SetToEndOfDay(System.DateTime)
  id: SetToEndOfDay(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: SetToEndOfDay(DateTime)
  nameWithType: DateUtility.SetToEndOfDay(DateTime)
  fullName: SuperOffice.Util.DateUtility.SetToEndOfDay(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nCopies <code data-dev-comment-type=\"paramref\" class=\"paramref\">date</code> and sets the time component to be 23:59:59.\n"
  syntax:
    content: public static DateTime SetToEndOfDay(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
      description: A copy of date, with the time component set to 23:59:59
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetToEndOfDay(date As DateTime) As DateTime
  overload: SuperOffice.Util.DateUtility.SetToEndOfDay*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.GetStartOfQuarter(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.GetStartOfQuarter(System.DateTime)
  id: GetStartOfQuarter(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: GetStartOfQuarter(DateTime)
  nameWithType: DateUtility.GetStartOfQuarter(DateTime)
  fullName: SuperOffice.Util.DateUtility.GetStartOfQuarter(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGets the start of the quarter that the input date is within.\n"
  syntax:
    content: public static DateTime GetStartOfQuarter(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
      description: Returns a datetime representing the first second of the first day of the quarter.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStartOfQuarter(date As DateTime) As DateTime
  overload: SuperOffice.Util.DateUtility.GetStartOfQuarter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.GetWeekStartDelta(System.DateTime,System.Boolean)
  commentId: M:SuperOffice.Util.DateUtility.GetWeekStartDelta(System.DateTime,System.Boolean)
  id: GetWeekStartDelta(System.DateTime,System.Boolean)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: GetWeekStartDelta(DateTime, Boolean)
  nameWithType: DateUtility.GetWeekStartDelta(DateTime, Boolean)
  fullName: SuperOffice.Util.DateUtility.GetWeekStartDelta(System.DateTime, System.Boolean)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nCalculate how many days we need to go back from given date to get to the start-of-week day.\nThis is sunday or monday depending on preference. In .NET, dow 0 is sunday.\n"
  syntax:
    content: public static int GetWeekStartDelta(this DateTime date, bool weekStartsOnSunday = false)
    parameters:
    - id: date
      type: System.DateTime
    - id: weekStartsOnSunday
      type: System.Boolean
    return:
      type: System.Int32
      description: Day of week delta, a negative value which when added to <code data-dev-comment-type="paramref" class="paramref">date</code> will produce start of first day
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetWeekStartDelta(date As DateTime, weekStartsOnSunday As Boolean = False) As Integer
  overload: SuperOffice.Util.DateUtility.GetWeekStartDelta*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.GetStartOfWeek(System.DateTime,System.Boolean)
  commentId: M:SuperOffice.Util.DateUtility.GetStartOfWeek(System.DateTime,System.Boolean)
  id: GetStartOfWeek(System.DateTime,System.Boolean)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: GetStartOfWeek(DateTime, Boolean)
  nameWithType: DateUtility.GetStartOfWeek(DateTime, Boolean)
  fullName: SuperOffice.Util.DateUtility.GetStartOfWeek(System.DateTime, System.Boolean)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGets the start of the week of the input date.\n"
  syntax:
    content: public static DateTime GetStartOfWeek(this DateTime date, bool weekStartsOnSunday = false)
    parameters:
    - id: date
      type: System.DateTime
    - id: weekStartsOnSunday
      type: System.Boolean
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStartOfWeek(date As DateTime, weekStartsOnSunday As Boolean = False) As DateTime
  overload: SuperOffice.Util.DateUtility.GetStartOfWeek*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.GetStartOfMonth(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.GetStartOfMonth(System.DateTime)
  id: GetStartOfMonth(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: GetStartOfMonth(DateTime)
  nameWithType: DateUtility.GetStartOfMonth(DateTime)
  fullName: SuperOffice.Util.DateUtility.GetStartOfMonth(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGets the start of the month of the input date.\n"
  syntax:
    content: public static DateTime GetStartOfMonth(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStartOfMonth(date As DateTime) As DateTime
  overload: SuperOffice.Util.DateUtility.GetStartOfMonth*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.GetStartOfHalfYear(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.GetStartOfHalfYear(System.DateTime)
  id: GetStartOfHalfYear(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: GetStartOfHalfYear(DateTime)
  nameWithType: DateUtility.GetStartOfHalfYear(DateTime)
  fullName: SuperOffice.Util.DateUtility.GetStartOfHalfYear(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGets the start of the half year of the input date.\n"
  syntax:
    content: public static DateTime GetStartOfHalfYear(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStartOfHalfYear(date As DateTime) As DateTime
  overload: SuperOffice.Util.DateUtility.GetStartOfHalfYear*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.GetStartOfYear(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.GetStartOfYear(System.DateTime)
  id: GetStartOfYear(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: GetStartOfYear(DateTime)
  nameWithType: DateUtility.GetStartOfYear(DateTime)
  fullName: SuperOffice.Util.DateUtility.GetStartOfYear(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGets the start of the year of the input date.\n"
  syntax:
    content: public static DateTime GetStartOfYear(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStartOfYear(date As DateTime) As DateTime
  overload: SuperOffice.Util.DateUtility.GetStartOfYear*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.DropFractionsOfSecond(System.DateTime,System.Nullable{System.DateTimeKind})
  commentId: M:SuperOffice.Util.DateUtility.DropFractionsOfSecond(System.DateTime,System.Nullable{System.DateTimeKind})
  id: DropFractionsOfSecond(System.DateTime,System.Nullable{System.DateTimeKind})
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: DropFractionsOfSecond(DateTime, Nullable<DateTimeKind>)
  nameWithType: DateUtility.DropFractionsOfSecond(DateTime, Nullable<DateTimeKind>)
  fullName: SuperOffice.Util.DateUtility.DropFractionsOfSecond(System.DateTime, System.Nullable<System.DateTimeKind>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nReturn a DateTime that is the same as the <strong>input</strong> parameter, but eliminate all sub-second parts by truncating them. This is how \nwe store datetimes in the database, and should generally be done to avoid meaningless inequalities.\n"
  syntax:
    content: public static DateTime DropFractionsOfSecond(this DateTime input, Nullable<DateTimeKind> kind = null)
    parameters:
    - id: input
      type: System.DateTime
      description: Input datetime
    - id: kind
      type: System.Nullable{System.DateTimeKind}
      description: Optional override of DateTime.<xref href="System.DateTime.Kind" data-throw-if-not-resolved="false"></xref>; the returned value will have this kind. If null or not specified then the original Kind will be propagated
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DropFractionsOfSecond(input As DateTime, kind As Nullable(Of DateTimeKind) = Nothing) As DateTime
  overload: SuperOffice.Util.DateUtility.DropFractionsOfSecond*
  nameWithType.vb: DateUtility.DropFractionsOfSecond(DateTime, Nullable(Of DateTimeKind))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Util.DateUtility.DropFractionsOfSecond(System.DateTime, System.Nullable(Of System.DateTimeKind))
  name.vb: DropFractionsOfSecond(DateTime, Nullable(Of DateTimeKind))
- uid: SuperOffice.Util.DateUtility.Earliest(System.DateTime[])
  commentId: M:SuperOffice.Util.DateUtility.Earliest(System.DateTime[])
  id: Earliest(System.DateTime[])
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: Earliest(DateTime[])
  nameWithType: DateUtility.Earliest(DateTime[])
  fullName: SuperOffice.Util.DateUtility.Earliest(System.DateTime[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static DateTime Earliest(params DateTime[] dates)
    parameters:
    - id: dates
      type: System.DateTime[]
    return:
      type: System.DateTime
    content.vb: Public Shared Function Earliest(ParamArray dates As DateTime()) As DateTime
  overload: SuperOffice.Util.DateUtility.Earliest*
  nameWithType.vb: DateUtility.Earliest(DateTime())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Util.DateUtility.Earliest(System.DateTime())
  name.vb: Earliest(DateTime())
- uid: SuperOffice.Util.DateUtility.Latest(System.DateTime[])
  commentId: M:SuperOffice.Util.DateUtility.Latest(System.DateTime[])
  id: Latest(System.DateTime[])
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: Latest(DateTime[])
  nameWithType: DateUtility.Latest(DateTime[])
  fullName: SuperOffice.Util.DateUtility.Latest(System.DateTime[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static DateTime Latest(params DateTime[] dates)
    parameters:
    - id: dates
      type: System.DateTime[]
    return:
      type: System.DateTime
    content.vb: Public Shared Function Latest(ParamArray dates As DateTime()) As DateTime
  overload: SuperOffice.Util.DateUtility.Latest*
  nameWithType.vb: DateUtility.Latest(DateTime())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Util.DateUtility.Latest(System.DateTime())
  name.vb: Latest(DateTime())
- uid: SuperOffice.Util.DateUtility.CloseEnoughTo(System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.Util.DateUtility.CloseEnoughTo(System.DateTime,System.DateTime,System.Int32)
  id: CloseEnoughTo(System.DateTime,System.DateTime,System.Int32)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: CloseEnoughTo(DateTime, DateTime, Int32)
  nameWithType: DateUtility.CloseEnoughTo(DateTime, DateTime, Int32)
  fullName: SuperOffice.Util.DateUtility.CloseEnoughTo(System.DateTime, System.DateTime, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static bool CloseEnoughTo(this DateTime a, DateTime b, int toleranceSeconds = 30)
    parameters:
    - id: a
      type: System.DateTime
    - id: b
      type: System.DateTime
    - id: toleranceSeconds
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CloseEnoughTo(a As DateTime, b As DateTime, toleranceSeconds As Integer = 30) As Boolean
  overload: SuperOffice.Util.DateUtility.CloseEnoughTo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.SetTime(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:SuperOffice.Util.DateUtility.SetTime(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32)
  id: SetTime(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: SetTime(DateTime, Int32, Int32, Int32, Int32)
  nameWithType: DateUtility.SetTime(DateTime, Int32, Int32, Int32, Int32)
  fullName: SuperOffice.Util.DateUtility.SetTime(System.DateTime, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static DateTime SetTime(this DateTime dt, int hour, int minute, int second = 0, int millisecond = 0)
    parameters:
    - id: dt
      type: System.DateTime
    - id: hour
      type: System.Int32
    - id: minute
      type: System.Int32
    - id: second
      type: System.Int32
    - id: millisecond
      type: System.Int32
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetTime(dt As DateTime, hour As Integer, minute As Integer, second As Integer = 0, millisecond As Integer = 0) As DateTime
  overload: SuperOffice.Util.DateUtility.SetTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.CalcSeconds(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.CalcSeconds(System.DateTime)
  id: CalcSeconds(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: CalcSeconds(DateTime)
  nameWithType: DateUtility.CalcSeconds(DateTime)
  fullName: SuperOffice.Util.DateUtility.CalcSeconds(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static int CalcSeconds(this DateTime dt)
    parameters:
    - id: dt
      type: System.DateTime
    return:
      type: System.Int32
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CalcSeconds(dt As DateTime) As Integer
  overload: SuperOffice.Util.DateUtility.CalcSeconds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.ToMinutes(System.TimeSpan)
  commentId: M:SuperOffice.Util.DateUtility.ToMinutes(System.TimeSpan)
  id: ToMinutes(System.TimeSpan)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: ToMinutes(TimeSpan)
  nameWithType: DateUtility.ToMinutes(TimeSpan)
  fullName: SuperOffice.Util.DateUtility.ToMinutes(System.TimeSpan)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static int ToMinutes(this TimeSpan span)
    parameters:
    - id: span
      type: System.TimeSpan
    return:
      type: System.Int32
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToMinutes(span As TimeSpan) As Integer
  overload: SuperOffice.Util.DateUtility.ToMinutes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.ToMinutes(System.Double)
  commentId: M:SuperOffice.Util.DateUtility.ToMinutes(System.Double)
  id: ToMinutes(System.Double)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: ToMinutes(Double)
  nameWithType: DateUtility.ToMinutes(Double)
  fullName: SuperOffice.Util.DateUtility.ToMinutes(System.Double)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static int ToMinutes(this double seconds)
    parameters:
    - id: seconds
      type: System.Double
    return:
      type: System.Int32
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToMinutes(seconds As Double) As Integer
  overload: SuperOffice.Util.DateUtility.ToMinutes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Util.DateUtility.Round*
  commentId: Overload:SuperOffice.Util.DateUtility.Round
  isExternal: true
  name: Round
  nameWithType: DateUtility.Round
  fullName: SuperOffice.Util.DateUtility.Round
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Data.RoundDirection
  commentId: T:SuperOffice.Data.RoundDirection
  parent: SuperOffice.Data
  isExternal: true
  name: RoundDirection
  nameWithType: RoundDirection
  fullName: SuperOffice.Data.RoundDirection
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Util.DateUtility.AddReporterYears*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterYears
  isExternal: true
  name: AddReporterYears
  nameWithType: DateUtility.AddReporterYears
  fullName: SuperOffice.Util.DateUtility.AddReporterYears
- uid: SuperOffice.Util.DateUtility.AddReporterYear*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterYear
  isExternal: true
  name: AddReporterYear
  nameWithType: DateUtility.AddReporterYear
  fullName: SuperOffice.Util.DateUtility.AddReporterYear
- uid: SuperOffice.Util.DateUtility.AddReporterHalfYears*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterHalfYears
  isExternal: true
  name: AddReporterHalfYears
  nameWithType: DateUtility.AddReporterHalfYears
  fullName: SuperOffice.Util.DateUtility.AddReporterHalfYears
- uid: SuperOffice.Util.DateUtility.AddReporterQuarters*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterQuarters
  isExternal: true
  name: AddReporterQuarters
  nameWithType: DateUtility.AddReporterQuarters
  fullName: SuperOffice.Util.DateUtility.AddReporterQuarters
- uid: SuperOffice.Util.DateUtility.AddReporterQuarter*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterQuarter
  isExternal: true
  name: AddReporterQuarter
  nameWithType: DateUtility.AddReporterQuarter
  fullName: SuperOffice.Util.DateUtility.AddReporterQuarter
- uid: SuperOffice.Util.DateUtility.AddReporterMonths*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterMonths
  isExternal: true
  name: AddReporterMonths
  nameWithType: DateUtility.AddReporterMonths
  fullName: SuperOffice.Util.DateUtility.AddReporterMonths
- uid: SuperOffice.Util.DateUtility.AddReporterMonth*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterMonth
  isExternal: true
  name: AddReporterMonth
  nameWithType: DateUtility.AddReporterMonth
  fullName: SuperOffice.Util.DateUtility.AddReporterMonth
- uid: SuperOffice.Util.DateUtility.AddReporterWeeks*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterWeeks
  isExternal: true
  name: AddReporterWeeks
  nameWithType: DateUtility.AddReporterWeeks
  fullName: SuperOffice.Util.DateUtility.AddReporterWeeks
- uid: SuperOffice.Util.DateUtility.AddReporterWeek*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterWeek
  isExternal: true
  name: AddReporterWeek
  nameWithType: DateUtility.AddReporterWeek
  fullName: SuperOffice.Util.DateUtility.AddReporterWeek
- uid: SuperOffice.Util.DateUtility.CalculateEndDate*
  commentId: Overload:SuperOffice.Util.DateUtility.CalculateEndDate
  isExternal: true
  name: CalculateEndDate
  nameWithType: DateUtility.CalculateEndDate
  fullName: SuperOffice.Util.DateUtility.CalculateEndDate
- uid: SuperOffice.Data.DurationUnit
  commentId: T:SuperOffice.Data.DurationUnit
  parent: SuperOffice.Data
  isExternal: true
  name: DurationUnit
  nameWithType: DurationUnit
  fullName: SuperOffice.Data.DurationUnit
- uid: SuperOffice.Util.DateUtility.GetFirstInMonth*
  commentId: Overload:SuperOffice.Util.DateUtility.GetFirstInMonth
  isExternal: true
  name: GetFirstInMonth
  nameWithType: DateUtility.GetFirstInMonth
  fullName: SuperOffice.Util.DateUtility.GetFirstInMonth
- uid: SuperOffice.Util.DateUtility.SetToEndOfDay*
  commentId: Overload:SuperOffice.Util.DateUtility.SetToEndOfDay
  isExternal: true
  name: SetToEndOfDay
  nameWithType: DateUtility.SetToEndOfDay
  fullName: SuperOffice.Util.DateUtility.SetToEndOfDay
- uid: SuperOffice.Util.DateUtility.GetStartOfQuarter*
  commentId: Overload:SuperOffice.Util.DateUtility.GetStartOfQuarter
  isExternal: true
  name: GetStartOfQuarter
  nameWithType: DateUtility.GetStartOfQuarter
  fullName: SuperOffice.Util.DateUtility.GetStartOfQuarter
- uid: SuperOffice.Util.DateUtility.GetWeekStartDelta*
  commentId: Overload:SuperOffice.Util.DateUtility.GetWeekStartDelta
  isExternal: true
  name: GetWeekStartDelta
  nameWithType: DateUtility.GetWeekStartDelta
  fullName: SuperOffice.Util.DateUtility.GetWeekStartDelta
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Util.DateUtility.GetStartOfWeek*
  commentId: Overload:SuperOffice.Util.DateUtility.GetStartOfWeek
  isExternal: true
  name: GetStartOfWeek
  nameWithType: DateUtility.GetStartOfWeek
  fullName: SuperOffice.Util.DateUtility.GetStartOfWeek
- uid: SuperOffice.Util.DateUtility.GetStartOfMonth*
  commentId: Overload:SuperOffice.Util.DateUtility.GetStartOfMonth
  isExternal: true
  name: GetStartOfMonth
  nameWithType: DateUtility.GetStartOfMonth
  fullName: SuperOffice.Util.DateUtility.GetStartOfMonth
- uid: SuperOffice.Util.DateUtility.GetStartOfHalfYear*
  commentId: Overload:SuperOffice.Util.DateUtility.GetStartOfHalfYear
  isExternal: true
  name: GetStartOfHalfYear
  nameWithType: DateUtility.GetStartOfHalfYear
  fullName: SuperOffice.Util.DateUtility.GetStartOfHalfYear
- uid: SuperOffice.Util.DateUtility.GetStartOfYear*
  commentId: Overload:SuperOffice.Util.DateUtility.GetStartOfYear
  isExternal: true
  name: GetStartOfYear
  nameWithType: DateUtility.GetStartOfYear
  fullName: SuperOffice.Util.DateUtility.GetStartOfYear
- uid: SuperOffice.Util.DateUtility.DropFractionsOfSecond*
  commentId: Overload:SuperOffice.Util.DateUtility.DropFractionsOfSecond
  isExternal: true
  name: DropFractionsOfSecond
  nameWithType: DateUtility.DropFractionsOfSecond
  fullName: SuperOffice.Util.DateUtility.DropFractionsOfSecond
- uid: System.Nullable{System.DateTimeKind}
  commentId: '!:System.Nullable{System.DateTimeKind}'
  definition: System.Nullable`1
  name: Nullable<DateTimeKind>
  nameWithType: Nullable<DateTimeKind>
  fullName: System.Nullable<System.DateTimeKind>
  nameWithType.vb: Nullable(Of DateTimeKind)
  fullName.vb: System.Nullable(Of System.DateTimeKind)
  name.vb: Nullable(Of DateTimeKind)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeKind
    name: DateTimeKind
    nameWithType: DateTimeKind
    fullName: System.DateTimeKind
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeKind
    name: DateTimeKind
    nameWithType: DateTimeKind
    fullName: System.DateTimeKind
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.DateUtility.Earliest*
  commentId: Overload:SuperOffice.Util.DateUtility.Earliest
  isExternal: true
  name: Earliest
  nameWithType: DateUtility.Earliest
  fullName: SuperOffice.Util.DateUtility.Earliest
- uid: System.DateTime[]
  isExternal: true
  name: DateTime[]
  nameWithType: DateTime[]
  fullName: System.DateTime[]
  nameWithType.vb: DateTime()
  fullName.vb: System.DateTime()
  name.vb: DateTime()
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Util.DateUtility.Latest*
  commentId: Overload:SuperOffice.Util.DateUtility.Latest
  isExternal: true
  name: Latest
  nameWithType: DateUtility.Latest
  fullName: SuperOffice.Util.DateUtility.Latest
- uid: SuperOffice.Util.DateUtility.CloseEnoughTo*
  commentId: Overload:SuperOffice.Util.DateUtility.CloseEnoughTo
  isExternal: true
  name: CloseEnoughTo
  nameWithType: DateUtility.CloseEnoughTo
  fullName: SuperOffice.Util.DateUtility.CloseEnoughTo
- uid: SuperOffice.Util.DateUtility.SetTime*
  commentId: Overload:SuperOffice.Util.DateUtility.SetTime
  isExternal: true
  name: SetTime
  nameWithType: DateUtility.SetTime
  fullName: SuperOffice.Util.DateUtility.SetTime
- uid: SuperOffice.Util.DateUtility.CalcSeconds*
  commentId: Overload:SuperOffice.Util.DateUtility.CalcSeconds
  isExternal: true
  name: CalcSeconds
  nameWithType: DateUtility.CalcSeconds
  fullName: SuperOffice.Util.DateUtility.CalcSeconds
- uid: SuperOffice.Util.DateUtility.ToMinutes*
  commentId: Overload:SuperOffice.Util.DateUtility.ToMinutes
  isExternal: true
  name: ToMinutes
  nameWithType: DateUtility.ToMinutes
  fullName: SuperOffice.Util.DateUtility.ToMinutes
- uid: System.TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
