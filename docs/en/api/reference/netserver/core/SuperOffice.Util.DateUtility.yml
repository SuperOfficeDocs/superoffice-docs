### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.DateUtility
  commentId: T:SuperOffice.Util.DateUtility
  id: DateUtility
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.DateUtility.AddReporterHalfYears(System.DateTime,System.Int32)
  - SuperOffice.Util.DateUtility.AddReporterMonth(System.DateTime)
  - SuperOffice.Util.DateUtility.AddReporterMonths(System.DateTime,System.Int32)
  - SuperOffice.Util.DateUtility.AddReporterQuarter(System.DateTime)
  - SuperOffice.Util.DateUtility.AddReporterQuarters(System.DateTime,System.Int32)
  - SuperOffice.Util.DateUtility.AddReporterWeek(System.DateTime)
  - SuperOffice.Util.DateUtility.AddReporterWeeks(System.DateTime,System.Int32)
  - SuperOffice.Util.DateUtility.AddReporterYear(System.DateTime)
  - SuperOffice.Util.DateUtility.AddReporterYears(System.DateTime,System.Int32)
  - SuperOffice.Util.DateUtility.CalculateEndDate(System.DateTime,System.Int32,SuperOffice.Data.DurationUnit)
  - SuperOffice.Util.DateUtility.CalculateEndDate(System.Int32,SuperOffice.Data.DurationUnit)
  - SuperOffice.Util.DateUtility.DropFractionsOfSecond(System.DateTime,System.Nullable{System.DateTimeKind})
  - SuperOffice.Util.DateUtility.GetFirstInMonth(System.DateTime)
  - SuperOffice.Util.DateUtility.GetStartOfHalfYear(System.DateTime)
  - SuperOffice.Util.DateUtility.GetStartOfMonth(System.DateTime)
  - SuperOffice.Util.DateUtility.GetStartOfQuarter(System.DateTime)
  - SuperOffice.Util.DateUtility.GetStartOfWeek(System.DateTime,System.Boolean)
  - SuperOffice.Util.DateUtility.GetStartOfYear(System.DateTime)
  - SuperOffice.Util.DateUtility.GetWeekStartDelta(System.DateTime,System.Boolean)
  - SuperOffice.Util.DateUtility.Round(System.DateTime,System.Int32,SuperOffice.Data.RoundDirection)
  - SuperOffice.Util.DateUtility.SetToEndOfDay(System.DateTime)
  langs:
  - csharp
  - vb
  name: DateUtility
  nameWithType: DateUtility
  fullName: SuperOffice.Util.DateUtility
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static class DateUtility
    content.vb: Public Module DateUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.Util.DateUtility.Round(System.DateTime,System.Int32,SuperOffice.Data.RoundDirection)
  commentId: M:SuperOffice.Util.DateUtility.Round(System.DateTime,System.Int32,SuperOffice.Data.RoundDirection)
  id: Round(System.DateTime,System.Int32,SuperOffice.Data.RoundDirection)
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: Round(DateTime, Int32, RoundDirection)
  nameWithType: DateUtility.Round(DateTime, Int32, RoundDirection)
  fullName: SuperOffice.Util.DateUtility.Round(System.DateTime, System.Int32, SuperOffice.Data.RoundDirection)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static DateTime Round(DateTime dateTime, int minutes, RoundDirection direction)
    parameters:
    - id: dateTime
      type: System.DateTime
    - id: minutes
      type: System.Int32
    - id: direction
      type: SuperOffice.Data.RoundDirection
    return:
      type: System.DateTime
    content.vb: Public Shared Function Round(dateTime As Date, minutes As Integer, direction As RoundDirection) As Date
  overload: SuperOffice.Util.DateUtility.Round*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterYears(System.DateTime,System.Int32)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterYears(System.DateTime,System.Int32)
  id: AddReporterYears(System.DateTime,System.Int32)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterYears(DateTime, Int32)
  nameWithType: DateUtility.AddReporterYears(DateTime, Int32)
  fullName: SuperOffice.Util.DateUtility.AddReporterYears(System.DateTime, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds the required amount of years, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterYears(this DateTime date, int yearCount)
    parameters:
    - id: date
      type: System.DateTime
    - id: yearCount
      type: System.Int32
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterYears(date As Date, yearCount As Integer) As Date
  overload: SuperOffice.Util.DateUtility.AddReporterYears*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterYear(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterYear(System.DateTime)
  id: AddReporterYear(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterYear(DateTime)
  nameWithType: DateUtility.AddReporterYear(DateTime)
  fullName: SuperOffice.Util.DateUtility.AddReporterYear(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds a year, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterYear(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterYear(date As Date) As Date
  overload: SuperOffice.Util.DateUtility.AddReporterYear*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterHalfYears(System.DateTime,System.Int32)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterHalfYears(System.DateTime,System.Int32)
  id: AddReporterHalfYears(System.DateTime,System.Int32)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterHalfYears(DateTime, Int32)
  nameWithType: DateUtility.AddReporterHalfYears(DateTime, Int32)
  fullName: SuperOffice.Util.DateUtility.AddReporterHalfYears(System.DateTime, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds the required amount of half years, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterHalfYears(this DateTime date, int halfYearCount = 1)
    parameters:
    - id: date
      type: System.DateTime
    - id: halfYearCount
      type: System.Int32
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterHalfYears(date As Date, halfYearCount As Integer = 1) As Date
  overload: SuperOffice.Util.DateUtility.AddReporterHalfYears*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterQuarters(System.DateTime,System.Int32)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterQuarters(System.DateTime,System.Int32)
  id: AddReporterQuarters(System.DateTime,System.Int32)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterQuarters(DateTime, Int32)
  nameWithType: DateUtility.AddReporterQuarters(DateTime, Int32)
  fullName: SuperOffice.Util.DateUtility.AddReporterQuarters(System.DateTime, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds the required amount of quarters of a year, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterQuarters(this DateTime date, int quarterCount)
    parameters:
    - id: date
      type: System.DateTime
    - id: quarterCount
      type: System.Int32
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterQuarters(date As Date, quarterCount As Integer) As Date
  overload: SuperOffice.Util.DateUtility.AddReporterQuarters*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterQuarter(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterQuarter(System.DateTime)
  id: AddReporterQuarter(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterQuarter(DateTime)
  nameWithType: DateUtility.AddReporterQuarter(DateTime)
  fullName: SuperOffice.Util.DateUtility.AddReporterQuarter(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds a quarter of a year, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterQuarter(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterQuarter(date As Date) As Date
  overload: SuperOffice.Util.DateUtility.AddReporterQuarter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterMonths(System.DateTime,System.Int32)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterMonths(System.DateTime,System.Int32)
  id: AddReporterMonths(System.DateTime,System.Int32)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterMonths(DateTime, Int32)
  nameWithType: DateUtility.AddReporterMonths(DateTime, Int32)
  fullName: SuperOffice.Util.DateUtility.AddReporterMonths(System.DateTime, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds the required amount of months, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterMonths(this DateTime date, int monthCount)
    parameters:
    - id: date
      type: System.DateTime
    - id: monthCount
      type: System.Int32
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterMonths(date As Date, monthCount As Integer) As Date
  overload: SuperOffice.Util.DateUtility.AddReporterMonths*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterMonth(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterMonth(System.DateTime)
  id: AddReporterMonth(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterMonth(DateTime)
  nameWithType: DateUtility.AddReporterMonth(DateTime)
  fullName: SuperOffice.Util.DateUtility.AddReporterMonth(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds a month, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterMonth(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterMonth(date As Date) As Date
  overload: SuperOffice.Util.DateUtility.AddReporterMonth*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterWeeks(System.DateTime,System.Int32)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterWeeks(System.DateTime,System.Int32)
  id: AddReporterWeeks(System.DateTime,System.Int32)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterWeeks(DateTime, Int32)
  nameWithType: DateUtility.AddReporterWeeks(DateTime, Int32)
  fullName: SuperOffice.Util.DateUtility.AddReporterWeeks(System.DateTime, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds the required number of weeks, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterWeeks(this DateTime date, int weekCount)
    parameters:
    - id: date
      type: System.DateTime
    - id: weekCount
      type: System.Int32
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterWeeks(date As Date, weekCount As Integer) As Date
  overload: SuperOffice.Util.DateUtility.AddReporterWeeks*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.AddReporterWeek(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.AddReporterWeek(System.DateTime)
  id: AddReporterWeek(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: AddReporterWeek(DateTime)
  nameWithType: DateUtility.AddReporterWeek(DateTime)
  fullName: SuperOffice.Util.DateUtility.AddReporterWeek(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds a week, then subtracts a second.\n"
  syntax:
    content: public static DateTime AddReporterWeek(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddReporterWeek(date As Date) As Date
  overload: SuperOffice.Util.DateUtility.AddReporterWeek*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.CalculateEndDate(System.DateTime,System.Int32,SuperOffice.Data.DurationUnit)
  commentId: M:SuperOffice.Util.DateUtility.CalculateEndDate(System.DateTime,System.Int32,SuperOffice.Data.DurationUnit)
  id: CalculateEndDate(System.DateTime,System.Int32,SuperOffice.Data.DurationUnit)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: CalculateEndDate(DateTime, Int32, DurationUnit)
  nameWithType: DateUtility.CalculateEndDate(DateTime, Int32, DurationUnit)
  fullName: SuperOffice.Util.DateUtility.CalculateEndDate(System.DateTime, System.Int32, SuperOffice.Data.DurationUnit)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds the amount of days/months depending on the DurationUnit specified.\n"
  syntax:
    content: public static DateTime CalculateEndDate(this DateTime date, int duration, DurationUnit unit)
    parameters:
    - id: date
      type: System.DateTime
    - id: duration
      type: System.Int32
    - id: unit
      type: SuperOffice.Data.DurationUnit
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CalculateEndDate(date As Date, duration As Integer, unit As DurationUnit) As Date
  overload: SuperOffice.Util.DateUtility.CalculateEndDate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.CalculateEndDate(System.Int32,SuperOffice.Data.DurationUnit)
  commentId: M:SuperOffice.Util.DateUtility.CalculateEndDate(System.Int32,SuperOffice.Data.DurationUnit)
  id: CalculateEndDate(System.Int32,SuperOffice.Data.DurationUnit)
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: CalculateEndDate(Int32, DurationUnit)
  nameWithType: DateUtility.CalculateEndDate(Int32, DurationUnit)
  fullName: SuperOffice.Util.DateUtility.CalculateEndDate(System.Int32, SuperOffice.Data.DurationUnit)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nAdds the amount of days/months depending on the DurationUnit specified to the current datetime.\n"
  syntax:
    content: public static DateTime CalculateEndDate(int duration, DurationUnit unit)
    parameters:
    - id: duration
      type: System.Int32
    - id: unit
      type: SuperOffice.Data.DurationUnit
    return:
      type: System.DateTime
    content.vb: Public Shared Function CalculateEndDate(duration As Integer, unit As DurationUnit) As Date
  overload: SuperOffice.Util.DateUtility.CalculateEndDate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.GetFirstInMonth(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.GetFirstInMonth(System.DateTime)
  id: GetFirstInMonth(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: GetFirstInMonth(DateTime)
  nameWithType: DateUtility.GetFirstInMonth(DateTime)
  fullName: SuperOffice.Util.DateUtility.GetFirstInMonth(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static DateTime GetFirstInMonth(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFirstInMonth(date As Date) As Date
  overload: SuperOffice.Util.DateUtility.GetFirstInMonth*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.SetToEndOfDay(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.SetToEndOfDay(System.DateTime)
  id: SetToEndOfDay(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: SetToEndOfDay(DateTime)
  nameWithType: DateUtility.SetToEndOfDay(DateTime)
  fullName: SuperOffice.Util.DateUtility.SetToEndOfDay(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nCopies <code data-dev-comment-type=\"paramref\" class=\"paramref\">date</code> and sets the time component to be 23:59:59.\n"
  syntax:
    content: public static DateTime SetToEndOfDay(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
      description: A copy of date, with the time component set to 23:59:59
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetToEndOfDay(date As Date) As Date
  overload: SuperOffice.Util.DateUtility.SetToEndOfDay*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.GetStartOfQuarter(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.GetStartOfQuarter(System.DateTime)
  id: GetStartOfQuarter(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: GetStartOfQuarter(DateTime)
  nameWithType: DateUtility.GetStartOfQuarter(DateTime)
  fullName: SuperOffice.Util.DateUtility.GetStartOfQuarter(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGets the start of the quarter that the input date is within.\n"
  syntax:
    content: public static DateTime GetStartOfQuarter(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
      description: Returns a datetime representing the first second of the first day of the quarter.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStartOfQuarter(date As Date) As Date
  overload: SuperOffice.Util.DateUtility.GetStartOfQuarter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.GetWeekStartDelta(System.DateTime,System.Boolean)
  commentId: M:SuperOffice.Util.DateUtility.GetWeekStartDelta(System.DateTime,System.Boolean)
  id: GetWeekStartDelta(System.DateTime,System.Boolean)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: GetWeekStartDelta(DateTime, Boolean)
  nameWithType: DateUtility.GetWeekStartDelta(DateTime, Boolean)
  fullName: SuperOffice.Util.DateUtility.GetWeekStartDelta(System.DateTime, System.Boolean)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nCalculate how many days we need to go back from given date to get to the start-of-week day.\nThis is sunday or monday depending on preference. In .NET, dow 0 is sunday.\n"
  syntax:
    content: public static int GetWeekStartDelta(this DateTime date, bool weekStartsOnSunday = false)
    parameters:
    - id: date
      type: System.DateTime
    - id: weekStartsOnSunday
      type: System.Boolean
    return:
      type: System.Int32
      description: Day of week delta, a negative value which when added to <code data-dev-comment-type="paramref" class="paramref">date</code> will produce start of first day
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetWeekStartDelta(date As Date, weekStartsOnSunday As Boolean = False) As Integer
  overload: SuperOffice.Util.DateUtility.GetWeekStartDelta*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.GetStartOfWeek(System.DateTime,System.Boolean)
  commentId: M:SuperOffice.Util.DateUtility.GetStartOfWeek(System.DateTime,System.Boolean)
  id: GetStartOfWeek(System.DateTime,System.Boolean)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: GetStartOfWeek(DateTime, Boolean)
  nameWithType: DateUtility.GetStartOfWeek(DateTime, Boolean)
  fullName: SuperOffice.Util.DateUtility.GetStartOfWeek(System.DateTime, System.Boolean)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGets the start of the week of the input date.\n"
  syntax:
    content: public static DateTime GetStartOfWeek(this DateTime date, bool weekStartsOnSunday = false)
    parameters:
    - id: date
      type: System.DateTime
    - id: weekStartsOnSunday
      type: System.Boolean
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStartOfWeek(date As Date, weekStartsOnSunday As Boolean = False) As Date
  overload: SuperOffice.Util.DateUtility.GetStartOfWeek*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.GetStartOfMonth(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.GetStartOfMonth(System.DateTime)
  id: GetStartOfMonth(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: GetStartOfMonth(DateTime)
  nameWithType: DateUtility.GetStartOfMonth(DateTime)
  fullName: SuperOffice.Util.DateUtility.GetStartOfMonth(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGets the start of the month of the input date.\n"
  syntax:
    content: public static DateTime GetStartOfMonth(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStartOfMonth(date As Date) As Date
  overload: SuperOffice.Util.DateUtility.GetStartOfMonth*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.GetStartOfHalfYear(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.GetStartOfHalfYear(System.DateTime)
  id: GetStartOfHalfYear(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: GetStartOfHalfYear(DateTime)
  nameWithType: DateUtility.GetStartOfHalfYear(DateTime)
  fullName: SuperOffice.Util.DateUtility.GetStartOfHalfYear(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGets the start of the half year of the input date.\n"
  syntax:
    content: public static DateTime GetStartOfHalfYear(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStartOfHalfYear(date As Date) As Date
  overload: SuperOffice.Util.DateUtility.GetStartOfHalfYear*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.GetStartOfYear(System.DateTime)
  commentId: M:SuperOffice.Util.DateUtility.GetStartOfYear(System.DateTime)
  id: GetStartOfYear(System.DateTime)
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: GetStartOfYear(DateTime)
  nameWithType: DateUtility.GetStartOfYear(DateTime)
  fullName: SuperOffice.Util.DateUtility.GetStartOfYear(System.DateTime)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGets the start of the year of the input date.\n"
  syntax:
    content: public static DateTime GetStartOfYear(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStartOfYear(date As Date) As Date
  overload: SuperOffice.Util.DateUtility.GetStartOfYear*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.DateUtility.DropFractionsOfSecond(System.DateTime,System.Nullable{System.DateTimeKind})
  commentId: M:SuperOffice.Util.DateUtility.DropFractionsOfSecond(System.DateTime,System.Nullable{System.DateTimeKind})
  id: DropFractionsOfSecond(System.DateTime,System.Nullable{System.DateTimeKind})
  isExtensionMethod: true
  parent: SuperOffice.Util.DateUtility
  langs:
  - csharp
  - vb
  name: DropFractionsOfSecond(DateTime, Nullable<DateTimeKind>)
  nameWithType: DateUtility.DropFractionsOfSecond(DateTime, Nullable<DateTimeKind>)
  fullName: SuperOffice.Util.DateUtility.DropFractionsOfSecond(System.DateTime, System.Nullable<System.DateTimeKind>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nReturn a DateTime that is the same as the <strong>input</strong> parameter, but eliminate all sub-second parts by truncating them. This is how \nwe store datetimes in the database, and should generally be done to avoid meaningless inequalities.\n"
  syntax:
    content: public static DateTime DropFractionsOfSecond(this DateTime input, DateTimeKind? kind = default(DateTimeKind? ))
    parameters:
    - id: input
      type: System.DateTime
      description: Input datetime
    - id: kind
      type: System.Nullable{System.DateTimeKind}
      description: Optional override of DateTime.<xref href="System.DateTime.Kind" data-throw-if-not-resolved="false"></xref>; the returned value will have this kind. If null or not specified then the original Kind will be propagated
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DropFractionsOfSecond(input As Date, kind As DateTimeKind? = Nothing) As Date
  overload: SuperOffice.Util.DateUtility.DropFractionsOfSecond*
  nameWithType.vb: DateUtility.DropFractionsOfSecond(DateTime, Nullable(Of DateTimeKind))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Util.DateUtility.DropFractionsOfSecond(System.DateTime, System.Nullable(Of System.DateTimeKind))
  name.vb: DropFractionsOfSecond(DateTime, Nullable(Of DateTimeKind))
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Util.DateUtility.Round*
  commentId: Overload:SuperOffice.Util.DateUtility.Round
  isExternal: true
  name: Round
  nameWithType: DateUtility.Round
  fullName: SuperOffice.Util.DateUtility.Round
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Data.RoundDirection
  commentId: T:SuperOffice.Data.RoundDirection
  parent: SuperOffice.Data
  isExternal: true
  name: RoundDirection
  nameWithType: RoundDirection
  fullName: SuperOffice.Data.RoundDirection
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Util.DateUtility.AddReporterYears*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterYears
  isExternal: true
  name: AddReporterYears
  nameWithType: DateUtility.AddReporterYears
  fullName: SuperOffice.Util.DateUtility.AddReporterYears
- uid: SuperOffice.Util.DateUtility.AddReporterYear*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterYear
  isExternal: true
  name: AddReporterYear
  nameWithType: DateUtility.AddReporterYear
  fullName: SuperOffice.Util.DateUtility.AddReporterYear
- uid: SuperOffice.Util.DateUtility.AddReporterHalfYears*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterHalfYears
  isExternal: true
  name: AddReporterHalfYears
  nameWithType: DateUtility.AddReporterHalfYears
  fullName: SuperOffice.Util.DateUtility.AddReporterHalfYears
- uid: SuperOffice.Util.DateUtility.AddReporterQuarters*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterQuarters
  isExternal: true
  name: AddReporterQuarters
  nameWithType: DateUtility.AddReporterQuarters
  fullName: SuperOffice.Util.DateUtility.AddReporterQuarters
- uid: SuperOffice.Util.DateUtility.AddReporterQuarter*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterQuarter
  isExternal: true
  name: AddReporterQuarter
  nameWithType: DateUtility.AddReporterQuarter
  fullName: SuperOffice.Util.DateUtility.AddReporterQuarter
- uid: SuperOffice.Util.DateUtility.AddReporterMonths*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterMonths
  isExternal: true
  name: AddReporterMonths
  nameWithType: DateUtility.AddReporterMonths
  fullName: SuperOffice.Util.DateUtility.AddReporterMonths
- uid: SuperOffice.Util.DateUtility.AddReporterMonth*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterMonth
  isExternal: true
  name: AddReporterMonth
  nameWithType: DateUtility.AddReporterMonth
  fullName: SuperOffice.Util.DateUtility.AddReporterMonth
- uid: SuperOffice.Util.DateUtility.AddReporterWeeks*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterWeeks
  isExternal: true
  name: AddReporterWeeks
  nameWithType: DateUtility.AddReporterWeeks
  fullName: SuperOffice.Util.DateUtility.AddReporterWeeks
- uid: SuperOffice.Util.DateUtility.AddReporterWeek*
  commentId: Overload:SuperOffice.Util.DateUtility.AddReporterWeek
  isExternal: true
  name: AddReporterWeek
  nameWithType: DateUtility.AddReporterWeek
  fullName: SuperOffice.Util.DateUtility.AddReporterWeek
- uid: SuperOffice.Util.DateUtility.CalculateEndDate*
  commentId: Overload:SuperOffice.Util.DateUtility.CalculateEndDate
  isExternal: true
  name: CalculateEndDate
  nameWithType: DateUtility.CalculateEndDate
  fullName: SuperOffice.Util.DateUtility.CalculateEndDate
- uid: SuperOffice.Data.DurationUnit
  commentId: T:SuperOffice.Data.DurationUnit
  parent: SuperOffice.Data
  isExternal: true
  name: DurationUnit
  nameWithType: DurationUnit
  fullName: SuperOffice.Data.DurationUnit
- uid: SuperOffice.Util.DateUtility.GetFirstInMonth*
  commentId: Overload:SuperOffice.Util.DateUtility.GetFirstInMonth
  isExternal: true
  name: GetFirstInMonth
  nameWithType: DateUtility.GetFirstInMonth
  fullName: SuperOffice.Util.DateUtility.GetFirstInMonth
- uid: SuperOffice.Util.DateUtility.SetToEndOfDay*
  commentId: Overload:SuperOffice.Util.DateUtility.SetToEndOfDay
  isExternal: true
  name: SetToEndOfDay
  nameWithType: DateUtility.SetToEndOfDay
  fullName: SuperOffice.Util.DateUtility.SetToEndOfDay
- uid: SuperOffice.Util.DateUtility.GetStartOfQuarter*
  commentId: Overload:SuperOffice.Util.DateUtility.GetStartOfQuarter
  isExternal: true
  name: GetStartOfQuarter
  nameWithType: DateUtility.GetStartOfQuarter
  fullName: SuperOffice.Util.DateUtility.GetStartOfQuarter
- uid: SuperOffice.Util.DateUtility.GetWeekStartDelta*
  commentId: Overload:SuperOffice.Util.DateUtility.GetWeekStartDelta
  isExternal: true
  name: GetWeekStartDelta
  nameWithType: DateUtility.GetWeekStartDelta
  fullName: SuperOffice.Util.DateUtility.GetWeekStartDelta
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Util.DateUtility.GetStartOfWeek*
  commentId: Overload:SuperOffice.Util.DateUtility.GetStartOfWeek
  isExternal: true
  name: GetStartOfWeek
  nameWithType: DateUtility.GetStartOfWeek
  fullName: SuperOffice.Util.DateUtility.GetStartOfWeek
- uid: SuperOffice.Util.DateUtility.GetStartOfMonth*
  commentId: Overload:SuperOffice.Util.DateUtility.GetStartOfMonth
  isExternal: true
  name: GetStartOfMonth
  nameWithType: DateUtility.GetStartOfMonth
  fullName: SuperOffice.Util.DateUtility.GetStartOfMonth
- uid: SuperOffice.Util.DateUtility.GetStartOfHalfYear*
  commentId: Overload:SuperOffice.Util.DateUtility.GetStartOfHalfYear
  isExternal: true
  name: GetStartOfHalfYear
  nameWithType: DateUtility.GetStartOfHalfYear
  fullName: SuperOffice.Util.DateUtility.GetStartOfHalfYear
- uid: SuperOffice.Util.DateUtility.GetStartOfYear*
  commentId: Overload:SuperOffice.Util.DateUtility.GetStartOfYear
  isExternal: true
  name: GetStartOfYear
  nameWithType: DateUtility.GetStartOfYear
  fullName: SuperOffice.Util.DateUtility.GetStartOfYear
- uid: SuperOffice.Util.DateUtility.DropFractionsOfSecond*
  commentId: Overload:SuperOffice.Util.DateUtility.DropFractionsOfSecond
  isExternal: true
  name: DropFractionsOfSecond
  nameWithType: DateUtility.DropFractionsOfSecond
  fullName: SuperOffice.Util.DateUtility.DropFractionsOfSecond
- uid: System.Nullable{System.DateTimeKind}
  commentId: T:System.Nullable{System.DateTimeKind}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeKind>
  nameWithType: Nullable<DateTimeKind>
  fullName: System.Nullable<System.DateTimeKind>
  nameWithType.vb: Nullable(Of DateTimeKind)
  fullName.vb: System.Nullable(Of System.DateTimeKind)
  name.vb: Nullable(Of DateTimeKind)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeKind
    name: DateTimeKind
    nameWithType: DateTimeKind
    fullName: System.DateTimeKind
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeKind
    name: DateTimeKind
    nameWithType: DateTimeKind
    fullName: System.DateTimeKind
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
