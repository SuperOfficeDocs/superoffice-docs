### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SoftTrigger.OnChange
  commentId: T:SuperOffice.Data.SoftTrigger.OnChange
  id: SoftTrigger.OnChange
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.SoftTrigger.OnChange.#ctor(System.Object,System.IntPtr)
  - SuperOffice.Data.SoftTrigger.OnChange.BeginInvoke(SuperOffice.Data.Dictionary.SoTable,SuperOffice.Data.SQL.SqlType,System.Int32,SuperOffice.Data.SQL.PrivateSave,SuperOffice.Data.SQL.SqlCommand,System.AsyncCallback,System.Object)
  - SuperOffice.Data.SoftTrigger.OnChange.EndInvoke(System.IAsyncResult)
  - SuperOffice.Data.SoftTrigger.OnChange.Invoke(SuperOffice.Data.Dictionary.SoTable,SuperOffice.Data.SQL.SqlType,System.Int32,SuperOffice.Data.SQL.PrivateSave,SuperOffice.Data.SQL.SqlCommand)
  langs:
  - csharp
  - vb
  name: SoftTrigger.OnChange
  nameWithType: SoftTrigger.OnChange
  fullName: SuperOffice.Data.SoftTrigger.OnChange
  type: Delegate
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nDelegate implemented by subscribers to be notified on changes in the database taking place.\n"
  syntax:
    content: public delegate void OnChange(SoTable table, SqlType sqlType, int primaryKey, PrivateSave save, SqlCommand orgSqlCommandInner);
    parameters:
    - id: table
      type: SuperOffice.Data.Dictionary.SoTable
      description: Table in the database being modified.
    - id: sqlType
      type: SuperOffice.Data.SQL.SqlType
      description: Type of modification.
    - id: primaryKey
      type: System.Int32
      description: Primary key of the row being modified.
    - id: save
      type: SuperOffice.Data.SQL.PrivateSave
      description: The actual command being sent to the database.
    - id: orgSqlCommandInner
      type: SuperOffice.Data.SQL.SqlCommand
      description: The original command this change is a part of.  <xref href="SuperOffice.Data.SQL.BatchSave" data-throw-if-not-resolved="false"></xref> commands are expanded to it&apos;s acutal sql command.
    content.vb: Public Delegate Sub OnChange(table As SoTable, sqlType As SqlType, primaryKey As Integer, save As PrivateSave, orgSqlCommandInner As SqlCommand)
  extensionMethods:
  - SuperOffice.Data.SoftTrigger.OnChange.EnumUtil.MapEnums``2
  - SuperOffice.Data.SoftTrigger.OnChange.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
- uid: SuperOffice.Data.SoftTrigger.OnChange.#ctor(System.Object,System.IntPtr)
  commentId: M:SuperOffice.Data.SoftTrigger.OnChange.#ctor(System.Object,System.IntPtr)
  id: '#ctor(System.Object,System.IntPtr)'
  parent: SuperOffice.Data.SoftTrigger.OnChange
  langs:
  - csharp
  - vb
  name: OnChange(Object, IntPtr)
  nameWithType: SoftTrigger.OnChange.OnChange(Object, IntPtr)
  fullName: SuperOffice.Data.SoftTrigger.OnChange.OnChange(System.Object, System.IntPtr)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public OnChange(object object, IntPtr method)
    parameters:
    - id: object
      type: System.Object
    - id: method
      type: System.IntPtr
    content.vb: Public Sub New(object As Object, method As IntPtr)
  overload: SuperOffice.Data.SoftTrigger.OnChange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoftTrigger.OnChange.Invoke(SuperOffice.Data.Dictionary.SoTable,SuperOffice.Data.SQL.SqlType,System.Int32,SuperOffice.Data.SQL.PrivateSave,SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.SoftTrigger.OnChange.Invoke(SuperOffice.Data.Dictionary.SoTable,SuperOffice.Data.SQL.SqlType,System.Int32,SuperOffice.Data.SQL.PrivateSave,SuperOffice.Data.SQL.SqlCommand)
  id: Invoke(SuperOffice.Data.Dictionary.SoTable,SuperOffice.Data.SQL.SqlType,System.Int32,SuperOffice.Data.SQL.PrivateSave,SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.SoftTrigger.OnChange
  langs:
  - csharp
  - vb
  name: Invoke(SoTable, SqlType, Int32, PrivateSave, SqlCommand)
  nameWithType: SoftTrigger.OnChange.Invoke(SoTable, SqlType, Int32, PrivateSave, SqlCommand)
  fullName: SuperOffice.Data.SoftTrigger.OnChange.Invoke(SuperOffice.Data.Dictionary.SoTable, SuperOffice.Data.SQL.SqlType, System.Int32, SuperOffice.Data.SQL.PrivateSave, SuperOffice.Data.SQL.SqlCommand)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public virtual void Invoke(SoTable table, SqlType sqlType, int primaryKey, PrivateSave save, SqlCommand orgSqlCommandInner)
    parameters:
    - id: table
      type: SuperOffice.Data.Dictionary.SoTable
    - id: sqlType
      type: SuperOffice.Data.SQL.SqlType
    - id: primaryKey
      type: System.Int32
    - id: save
      type: SuperOffice.Data.SQL.PrivateSave
    - id: orgSqlCommandInner
      type: SuperOffice.Data.SQL.SqlCommand
    content.vb: Public Overridable Sub Invoke(table As SoTable, sqlType As SqlType, primaryKey As Integer, save As PrivateSave, orgSqlCommandInner As SqlCommand)
  overload: SuperOffice.Data.SoftTrigger.OnChange.Invoke*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.Data.SoftTrigger.OnChange.BeginInvoke(SuperOffice.Data.Dictionary.SoTable,SuperOffice.Data.SQL.SqlType,System.Int32,SuperOffice.Data.SQL.PrivateSave,SuperOffice.Data.SQL.SqlCommand,System.AsyncCallback,System.Object)
  commentId: M:SuperOffice.Data.SoftTrigger.OnChange.BeginInvoke(SuperOffice.Data.Dictionary.SoTable,SuperOffice.Data.SQL.SqlType,System.Int32,SuperOffice.Data.SQL.PrivateSave,SuperOffice.Data.SQL.SqlCommand,System.AsyncCallback,System.Object)
  id: BeginInvoke(SuperOffice.Data.Dictionary.SoTable,SuperOffice.Data.SQL.SqlType,System.Int32,SuperOffice.Data.SQL.PrivateSave,SuperOffice.Data.SQL.SqlCommand,System.AsyncCallback,System.Object)
  parent: SuperOffice.Data.SoftTrigger.OnChange
  langs:
  - csharp
  - vb
  name: BeginInvoke(SoTable, SqlType, Int32, PrivateSave, SqlCommand, AsyncCallback, Object)
  nameWithType: SoftTrigger.OnChange.BeginInvoke(SoTable, SqlType, Int32, PrivateSave, SqlCommand, AsyncCallback, Object)
  fullName: SuperOffice.Data.SoftTrigger.OnChange.BeginInvoke(SuperOffice.Data.Dictionary.SoTable, SuperOffice.Data.SQL.SqlType, System.Int32, SuperOffice.Data.SQL.PrivateSave, SuperOffice.Data.SQL.SqlCommand, System.AsyncCallback, System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public virtual IAsyncResult BeginInvoke(SoTable table, SqlType sqlType, int primaryKey, PrivateSave save, SqlCommand orgSqlCommandInner, AsyncCallback callback, object object)
    parameters:
    - id: table
      type: SuperOffice.Data.Dictionary.SoTable
    - id: sqlType
      type: SuperOffice.Data.SQL.SqlType
    - id: primaryKey
      type: System.Int32
    - id: save
      type: SuperOffice.Data.SQL.PrivateSave
    - id: orgSqlCommandInner
      type: SuperOffice.Data.SQL.SqlCommand
    - id: callback
      type: System.AsyncCallback
    - id: object
      type: System.Object
    return:
      type: System.IAsyncResult
    content.vb: Public Overridable Function BeginInvoke(table As SoTable, sqlType As SqlType, primaryKey As Integer, save As PrivateSave, orgSqlCommandInner As SqlCommand, callback As AsyncCallback, object As Object) As IAsyncResult
  overload: SuperOffice.Data.SoftTrigger.OnChange.BeginInvoke*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.Data.SoftTrigger.OnChange.EndInvoke(System.IAsyncResult)
  commentId: M:SuperOffice.Data.SoftTrigger.OnChange.EndInvoke(System.IAsyncResult)
  id: EndInvoke(System.IAsyncResult)
  parent: SuperOffice.Data.SoftTrigger.OnChange
  langs:
  - csharp
  - vb
  name: EndInvoke(IAsyncResult)
  nameWithType: SoftTrigger.OnChange.EndInvoke(IAsyncResult)
  fullName: SuperOffice.Data.SoftTrigger.OnChange.EndInvoke(System.IAsyncResult)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public virtual void EndInvoke(IAsyncResult result)
    parameters:
    - id: result
      type: System.IAsyncResult
    content.vb: Public Overridable Sub EndInvoke(result As IAsyncResult)
  overload: SuperOffice.Data.SoftTrigger.OnChange.EndInvoke*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Data.SoftTrigger.OnChange.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoftTrigger.OnChange, To>()
  nameWithType: EnumUtil.MapEnums<SoftTrigger.OnChange, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SoftTrigger.OnChange, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoftTrigger.OnChange, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SoftTrigger.OnChange, To)()
  name.vb: MapEnums(Of SoftTrigger.OnChange, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoftTrigger.OnChange, To>
    nameWithType: EnumUtil.MapEnums<SoftTrigger.OnChange, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.SoftTrigger.OnChange, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoftTrigger.OnChange, To)
    nameWithType: EnumUtil.MapEnums(Of SoftTrigger.OnChange, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.SoftTrigger.OnChange, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SoftTrigger.OnChange.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoftTrigger.OnChange, To>()
  nameWithType: Converters.MapEnums<SoftTrigger.OnChange, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SoftTrigger.OnChange, To>()
  nameWithType.vb: Converters.MapEnums(Of SoftTrigger.OnChange, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SoftTrigger.OnChange, To)()
  name.vb: MapEnums(Of SoftTrigger.OnChange, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoftTrigger.OnChange, To>
    nameWithType: Converters.MapEnums<SoftTrigger.OnChange, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SoftTrigger.OnChange, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoftTrigger.OnChange, To)
    nameWithType: Converters.MapEnums(Of SoftTrigger.OnChange, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SoftTrigger.OnChange, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dictionary.SoTable
  commentId: T:SuperOffice.Data.Dictionary.SoTable
  parent: SuperOffice.Data.Dictionary
  isExternal: true
  name: SoTable
  nameWithType: SoTable
  fullName: SuperOffice.Data.Dictionary.SoTable
- uid: SuperOffice.Data.SQL.SqlType
  commentId: T:SuperOffice.Data.SQL.SqlType
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SqlType
  nameWithType: SqlType
  fullName: SuperOffice.Data.SQL.SqlType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Data.SQL.PrivateSave
  commentId: T:SuperOffice.Data.SQL.PrivateSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: PrivateSave
  nameWithType: PrivateSave
  fullName: SuperOffice.Data.SQL.PrivateSave
- uid: SuperOffice.Data.SQL.SqlCommand
  commentId: T:SuperOffice.Data.SQL.SqlCommand
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: SuperOffice.Data.SQL.SqlCommand
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Data.Dictionary
  commentId: N:SuperOffice.Data.Dictionary
  isExternal: true
  name: SuperOffice.Data.Dictionary
  nameWithType: SuperOffice.Data.Dictionary
  fullName: SuperOffice.Data.Dictionary
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.SoftTrigger.OnChange.#ctor*
  commentId: Overload:SuperOffice.Data.SoftTrigger.OnChange.#ctor
  isExternal: true
  name: OnChange
  nameWithType: SoftTrigger.OnChange.OnChange
  fullName: SuperOffice.Data.SoftTrigger.OnChange.OnChange
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: SuperOffice.Data.SoftTrigger.OnChange.Invoke*
  commentId: Overload:SuperOffice.Data.SoftTrigger.OnChange.Invoke
  isExternal: true
  name: Invoke
  nameWithType: SoftTrigger.OnChange.Invoke
  fullName: SuperOffice.Data.SoftTrigger.OnChange.Invoke
- uid: SuperOffice.Data.SoftTrigger.OnChange.BeginInvoke*
  commentId: Overload:SuperOffice.Data.SoftTrigger.OnChange.BeginInvoke
  isExternal: true
  name: BeginInvoke
  nameWithType: SoftTrigger.OnChange.BeginInvoke
  fullName: SuperOffice.Data.SoftTrigger.OnChange.BeginInvoke
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: SuperOffice.Data.SoftTrigger.OnChange.EndInvoke*
  commentId: Overload:SuperOffice.Data.SoftTrigger.OnChange.EndInvoke
  isExternal: true
  name: EndInvoke
  nameWithType: SoftTrigger.OnChange.EndInvoke
  fullName: SuperOffice.Data.SoftTrigger.OnChange.EndInvoke
