### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade
  commentId: T:SuperOffice.CRM.BatchProcessing.BatchTaskFacade
  id: BatchTaskFacade
  parent: SuperOffice.CRM.BatchProcessing
  children:
  - SuperOffice.CRM.BatchProcessing.BatchTaskFacade.#ctor
  - SuperOffice.CRM.BatchProcessing.BatchTaskFacade.EndTask
  - SuperOffice.CRM.BatchProcessing.BatchTaskFacade.GetTaskInfo
  - SuperOffice.CRM.BatchProcessing.BatchTaskFacade.StartTask(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  - SuperOffice.CRM.BatchProcessing.BatchTaskFacade.StartTask(System.Int32,System.String,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  langs:
  - csharp
  - vb
  name: BatchTaskFacade
  nameWithType: BatchTaskFacade
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFacade
  type: Class
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nLocal representation of a task that is processed in another process.\n"
  syntax:
    content: 'public class BatchTaskFacade : Object, IBatchTask, IPlugin'
    content.vb: >-
      Public Class BatchTaskFacade
          Inherits Object
          Implements IBatchTask, IPlugin
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTask
  extensionMethods:
  - SuperOffice.CRM.BatchProcessing.BatchTaskFacade.EnumUtil.MapEnums``2
  - SuperOffice.CRM.BatchProcessing.BatchTaskFacade.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.BatchProcessing.BatchTaskFacade)
  - SuperOffice.CRM.BatchProcessing.BatchTaskFacade.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.BatchProcessing.BatchTaskFacade.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.StartTask(System.Int32,System.String,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchTaskFacade.StartTask(System.Int32,System.String,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  id: StartTask(System.Int32,System.String,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  parent: SuperOffice.CRM.BatchProcessing.BatchTaskFacade
  langs:
  - csharp
  - vb
  name: StartTask(Int32, String, String, BatchTaskStatusChanged)
  nameWithType: BatchTaskFacade.StartTask(Int32, String, String, BatchTaskStatusChanged)
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.StartTask(System.Int32, System.String, System.String, SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nStart processing the task remotely\n"
  syntax:
    content: public BatchTaskInfo StartTask(int id, string name, string context, BatchTaskStatusChanged onBatchTaskStatusChanged)
    parameters:
    - id: id
      type: System.Int32
      description: Id of the task.  This value can be null for remotely processed tasks.
    - id: name
      type: System.String
      description: Name of the task.
    - id: context
      type: System.String
      description: Context of the task.
    - id: onBatchTaskStatusChanged
      type: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged
      description: Callback to recieve notifications about the task.
    return:
      type: SuperOffice.CRM.Services.BatchTaskInfo
      description: Information about the task.
    content.vb: Public Function StartTask(id As Integer, name As String, context As String, onBatchTaskStatusChanged As BatchTaskStatusChanged) As BatchTaskInfo
  overload: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.StartTask*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask(System.Int32,System.String,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.StartTask(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchTaskFacade.StartTask(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  id: StartTask(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  parent: SuperOffice.CRM.BatchProcessing.BatchTaskFacade
  langs:
  - csharp
  - vb
  name: StartTask(BatchTaskInfo, String, BatchTaskStatusChanged)
  nameWithType: BatchTaskFacade.StartTask(BatchTaskInfo, String, BatchTaskStatusChanged)
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.StartTask(SuperOffice.CRM.Services.BatchTaskInfo, System.String, SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: public BatchTaskInfo StartTask(BatchTaskInfo batchTaskInfo, string context, BatchTaskStatusChanged onBatchTaskStatusChanged)
    parameters:
    - id: batchTaskInfo
      type: SuperOffice.CRM.Services.BatchTaskInfo
    - id: context
      type: System.String
    - id: onBatchTaskStatusChanged
      type: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged
    return:
      type: SuperOffice.CRM.Services.BatchTaskInfo
    content.vb: Public Function StartTask(batchTaskInfo As BatchTaskInfo, context As String, onBatchTaskStatusChanged As BatchTaskStatusChanged) As BatchTaskInfo
  overload: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.StartTask*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.GetTaskInfo
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchTaskFacade.GetTaskInfo
  id: GetTaskInfo
  parent: SuperOffice.CRM.BatchProcessing.BatchTaskFacade
  langs:
  - csharp
  - vb
  name: GetTaskInfo()
  nameWithType: BatchTaskFacade.GetTaskInfo()
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.GetTaskInfo()
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nObtain information about the task.\n"
  syntax:
    content: public BatchTaskInfo GetTaskInfo()
    return:
      type: SuperOffice.CRM.Services.BatchTaskInfo
    content.vb: Public Function GetTaskInfo As BatchTaskInfo
  overload: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.GetTaskInfo*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfo
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.EndTask
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchTaskFacade.EndTask
  id: EndTask
  parent: SuperOffice.CRM.BatchProcessing.BatchTaskFacade
  langs:
  - csharp
  - vb
  name: EndTask()
  nameWithType: BatchTaskFacade.EndTask()
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.EndTask()
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: public void EndTask()
    content.vb: Public Sub
  overload: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.EndTask*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTask.EndTask
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.#ctor
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchTaskFacade.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.BatchProcessing.BatchTaskFacade
  langs:
  - csharp
  - vb
  name: BatchTaskFacade()
  nameWithType: BatchTaskFacade.BatchTaskFacade()
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.BatchTaskFacade()
  type: Constructor
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: public BatchTaskFacade()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.BatchProcessing
  commentId: N:SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: SuperOffice.CRM.BatchProcessing
  nameWithType: SuperOffice.CRM.BatchProcessing
  fullName: SuperOffice.CRM.BatchProcessing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.BatchProcessing.IBatchTask
  commentId: T:SuperOffice.CRM.BatchProcessing.IBatchTask
  parent: SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: IBatchTask
  nameWithType: IBatchTask
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTask
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<BatchTaskFacade, To>()
  nameWithType: EnumUtil.MapEnums<BatchTaskFacade, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.BatchProcessing.BatchTaskFacade, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of BatchTaskFacade, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.BatchProcessing.BatchTaskFacade, To)()
  name.vb: MapEnums(Of BatchTaskFacade, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<BatchTaskFacade, To>
    nameWithType: EnumUtil.MapEnums<BatchTaskFacade, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.BatchProcessing.BatchTaskFacade, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of BatchTaskFacade, To)
    nameWithType: EnumUtil.MapEnums(Of BatchTaskFacade, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.BatchProcessing.BatchTaskFacade, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.BatchProcessing.BatchTaskFacade)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<BatchTaskFacade>(BatchTaskFacade)
  nameWithType: ObjectExtensions.AssignByReflection<BatchTaskFacade>(BatchTaskFacade)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.BatchProcessing.BatchTaskFacade>(SuperOffice.CRM.BatchProcessing.BatchTaskFacade)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of BatchTaskFacade)(BatchTaskFacade)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.BatchProcessing.BatchTaskFacade)(SuperOffice.CRM.BatchProcessing.BatchTaskFacade)
  name.vb: AssignByReflection(Of BatchTaskFacade)(BatchTaskFacade)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<BatchTaskFacade>
    nameWithType: ObjectExtensions.AssignByReflection<BatchTaskFacade>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.BatchProcessing.BatchTaskFacade>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade
    name: BatchTaskFacade
    nameWithType: BatchTaskFacade
    fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFacade
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of BatchTaskFacade)
    nameWithType: ObjectExtensions.AssignByReflection(Of BatchTaskFacade)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.BatchProcessing.BatchTaskFacade)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade
    name: BatchTaskFacade
    nameWithType: BatchTaskFacade
    fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFacade
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<BatchTaskFacade>()
  nameWithType: ObjectExtensions.GraphCopy<BatchTaskFacade>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.BatchProcessing.BatchTaskFacade>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of BatchTaskFacade)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.BatchProcessing.BatchTaskFacade)()
  name.vb: GraphCopy(Of BatchTaskFacade)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<BatchTaskFacade>
    nameWithType: ObjectExtensions.GraphCopy<BatchTaskFacade>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.BatchProcessing.BatchTaskFacade>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of BatchTaskFacade)
    nameWithType: ObjectExtensions.GraphCopy(Of BatchTaskFacade)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.BatchProcessing.BatchTaskFacade)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<BatchTaskFacade, To>()
  nameWithType: Converters.MapEnums<BatchTaskFacade, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BatchProcessing.BatchTaskFacade, To>()
  nameWithType.vb: Converters.MapEnums(Of BatchTaskFacade, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BatchProcessing.BatchTaskFacade, To)()
  name.vb: MapEnums(Of BatchTaskFacade, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<BatchTaskFacade, To>
    nameWithType: Converters.MapEnums<BatchTaskFacade, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BatchProcessing.BatchTaskFacade, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of BatchTaskFacade, To)
    nameWithType: Converters.MapEnums(Of BatchTaskFacade, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BatchProcessing.BatchTaskFacade, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.StartTask*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchTaskFacade.StartTask
  isExternal: true
  name: StartTask
  nameWithType: BatchTaskFacade.StartTask
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.StartTask
- uid: SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask(System.Int32,System.String,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask(System.Int32,System.String,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  parent: SuperOffice.CRM.BatchProcessing.IBatchTask
  isExternal: true
  name: StartTask(Int32, String, String, BatchTaskStatusChanged)
  nameWithType: IBatchTask.StartTask(Int32, String, String, BatchTaskStatusChanged)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask(System.Int32, System.String, System.String, SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask(System.Int32,System.String,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
    name: StartTask
    nameWithType: IBatchTask.StartTask
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged
    name: BatchTaskStatusChanged
    nameWithType: BatchTaskStatusChanged
    fullName: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask(System.Int32,System.String,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
    name: StartTask
    nameWithType: IBatchTask.StartTask
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged
    name: BatchTaskStatusChanged
    nameWithType: BatchTaskStatusChanged
    fullName: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged
  commentId: T:SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged
  parent: SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: BatchTaskStatusChanged
  nameWithType: BatchTaskStatusChanged
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged
- uid: SuperOffice.CRM.Services.BatchTaskInfo
  isExternal: true
  name: BatchTaskInfo
  nameWithType: BatchTaskInfo
  fullName: SuperOffice.CRM.Services.BatchTaskInfo
- uid: SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  parent: SuperOffice.CRM.BatchProcessing.IBatchTask
  isExternal: true
  name: StartTask(BatchTaskInfo, String, BatchTaskStatusChanged)
  nameWithType: IBatchTask.StartTask(BatchTaskInfo, String, BatchTaskStatusChanged)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask(SuperOffice.CRM.Services.BatchTaskInfo, System.String, SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
    name: StartTask
    nameWithType: IBatchTask.StartTask
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged
    name: BatchTaskStatusChanged
    nameWithType: BatchTaskStatusChanged
    fullName: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged)
    name: StartTask
    nameWithType: IBatchTask.StartTask
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.StartTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged
    name: BatchTaskStatusChanged
    nameWithType: BatchTaskStatusChanged
    fullName: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChanged
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.GetTaskInfo*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchTaskFacade.GetTaskInfo
  isExternal: true
  name: GetTaskInfo
  nameWithType: BatchTaskFacade.GetTaskInfo
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.GetTaskInfo
- uid: SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfo
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfo
  parent: SuperOffice.CRM.BatchProcessing.IBatchTask
  isExternal: true
  name: GetTaskInfo()
  nameWithType: IBatchTask.GetTaskInfo()
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfo
    name: GetTaskInfo
    nameWithType: IBatchTask.GetTaskInfo
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfo
    name: GetTaskInfo
    nameWithType: IBatchTask.GetTaskInfo
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.EndTask*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchTaskFacade.EndTask
  isExternal: true
  name: EndTask
  nameWithType: BatchTaskFacade.EndTask
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.EndTask
- uid: SuperOffice.CRM.BatchProcessing.IBatchTask.EndTask
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchTask.EndTask
  parent: SuperOffice.CRM.BatchProcessing.IBatchTask
  isExternal: true
  name: EndTask()
  nameWithType: IBatchTask.EndTask()
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.EndTask()
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTask.EndTask
    name: EndTask
    nameWithType: IBatchTask.EndTask
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.EndTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTask.EndTask
    name: EndTask
    nameWithType: IBatchTask.EndTask
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.EndTask
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.#ctor*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchTaskFacade.#ctor
  isExternal: true
  name: BatchTaskFacade
  nameWithType: BatchTaskFacade.BatchTaskFacade
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFacade.BatchTaskFacade
