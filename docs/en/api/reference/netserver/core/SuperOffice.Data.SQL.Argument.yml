### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SQL.Argument
  commentId: T:SuperOffice.Data.SQL.Argument
  id: Argument
  parent: SuperOffice.Data.SQL
  children:
  - SuperOffice.Data.SQL.Argument.#ctor(SuperOffice.Data.FieldDataType,System.Int32)
  - SuperOffice.Data.SQL.Argument.Alias
  - SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.DataType
  - SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.GetMainField
  - SuperOffice.Data.SQL.Argument.GetSubElements
  - SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.IsNotNull
  - SuperOffice.Data.SQL.Argument.IsNull
  - SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.Like(System.String)
  - SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.Size
  - SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
  - SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
  - SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  langs:
  - csharp
  - vb
  name: Argument
  nameWithType: Argument
  fullName: SuperOffice.Data.SQL.Argument
  type: Class
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: >-
    The Argument class.

    Inherit QueryElement as part of a Visitor Pattern
  example: []
  syntax:
    content: 'public abstract class Argument : QueryElement, ICloneable'
    content.vb: Public MustInherit Class Argument Inherits QueryElement Implements ICloneable
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.QueryElement
  derivedClasses:
  - SuperOffice.Data.SQL.Aggregation
  - SuperOffice.Data.SQL.ArgumentFunction
  - SuperOffice.Data.SQL.DatabaseFunctions
  - SuperOffice.Data.SQL.FieldInfo
  - SuperOffice.Data.SQL.MathematicalExpression
  - SuperOffice.Data.SQL.Parameter
  - SuperOffice.Data.SQL.ResultModification
  implements:
  - System.ICloneable
  inheritedMembers:
  - SuperOffice.Data.SQL.QueryElement.Clone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.SQL.Argument.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.Argument.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.Data.SQL.Argument.#ctor(SuperOffice.Data.FieldDataType,System.Int32)
  commentId: M:SuperOffice.Data.SQL.Argument.#ctor(SuperOffice.Data.FieldDataType,System.Int32)
  id: '#ctor(SuperOffice.Data.FieldDataType,System.Int32)'
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: Argument(FieldDataType, int)
  nameWithType: Argument.Argument(FieldDataType, int)
  fullName: SuperOffice.Data.SQL.Argument.Argument(SuperOffice.Data.FieldDataType, int)
  type: Constructor
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: Initializes a new instance of the <xref href="SuperOffice.Data.SQL.Argument" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public Argument(FieldDataType dataType, int size)
    parameters:
    - id: dataType
      type: SuperOffice.Data.FieldDataType
      description: Type of the data.
    - id: size
      type: System.Int32
      description: The size.
    content.vb: Public Sub New(dataType As FieldDataType, size As Integer)
  overload: SuperOffice.Data.SQL.Argument.#ctor*
  nameWithType.vb: Argument.New(FieldDataType, Integer)
  fullName.vb: SuperOffice.Data.SQL.Argument.New(SuperOffice.Data.FieldDataType, Integer)
  name.vb: New(FieldDataType, Integer)
- uid: SuperOffice.Data.SQL.Argument.GetMainField
  commentId: M:SuperOffice.Data.SQL.Argument.GetMainField
  id: GetMainField
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: GetMainField()
  nameWithType: Argument.GetMainField()
  fullName: SuperOffice.Data.SQL.Argument.GetMainField()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: Information about a database field.
  example: []
  syntax:
    content: public abstract FieldInfo GetMainField()
    return:
      type: SuperOffice.Data.SQL.FieldInfo
      description: Information about the database field
    content.vb: Public MustOverride Function GetMainField() As FieldInfo
  overload: SuperOffice.Data.SQL.Argument.GetMainField*
- uid: SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  id: Equal(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: Equal(Argument)
  nameWithType: Argument.Equal(Argument)
  fullName: SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the Equal operator, based on the argument provided.
  example: []
  syntax:
    content: public Equal Equal(Argument argument)
    parameters:
    - id: argument
      type: SuperOffice.Data.SQL.Argument
      description: The argument.
    return:
      type: SuperOffice.Data.SQL.Equal
      description: a new instance of the Equal operator, based on the argument provided
    content.vb: Public Function Equal(argument As Argument) As Equal
  overload: SuperOffice.Data.SQL.Argument.Equal*
- uid: SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  id: UnEqual(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: UnEqual(Argument)
  nameWithType: Argument.UnEqual(Argument)
  fullName: SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the UnEqual operator, based on the argument provided.
  example: []
  syntax:
    content: public UnEqual UnEqual(Argument argument)
    parameters:
    - id: argument
      type: SuperOffice.Data.SQL.Argument
      description: The argument.
    return:
      type: SuperOffice.Data.SQL.UnEqual
      description: a new instance of the UnEqual operator, based on the argument provided
    content.vb: Public Function UnEqual(argument As Argument) As UnEqual
  overload: SuperOffice.Data.SQL.Argument.UnEqual*
- uid: SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  id: LessThan(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: LessThan(Argument)
  nameWithType: Argument.LessThan(Argument)
  fullName: SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the LessThan operator, based on the argument provided.
  example: []
  syntax:
    content: public LessThan LessThan(Argument argument)
    parameters:
    - id: argument
      type: SuperOffice.Data.SQL.Argument
      description: The argument.
    return:
      type: SuperOffice.Data.SQL.LessThan
      description: a new instance of the LessThan operator, based on the argument provided
    content.vb: Public Function LessThan(argument As Argument) As LessThan
  overload: SuperOffice.Data.SQL.Argument.LessThan*
- uid: SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  id: LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Argument)
  nameWithType: Argument.LessThanOrEqual(Argument)
  fullName: SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the LessThan operator, based on the argument provided.
  example: []
  syntax:
    content: public LessThanOrEqual LessThanOrEqual(Argument argument)
    parameters:
    - id: argument
      type: SuperOffice.Data.SQL.Argument
      description: The argument.
    return:
      type: SuperOffice.Data.SQL.LessThanOrEqual
      description: a new instance of the LessThanOrEqual operator, based on the argument provided
    content.vb: Public Function LessThanOrEqual(argument As Argument) As LessThanOrEqual
  overload: SuperOffice.Data.SQL.Argument.LessThanOrEqual*
- uid: SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  id: GreaterThan(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: GreaterThan(Argument)
  nameWithType: Argument.GreaterThan(Argument)
  fullName: SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the GreaterThan operator, based on the argument provided.
  example: []
  syntax:
    content: public GreaterThan GreaterThan(Argument argument)
    parameters:
    - id: argument
      type: SuperOffice.Data.SQL.Argument
      description: The argument.
    return:
      type: SuperOffice.Data.SQL.GreaterThan
      description: a new instance of the GreaterThan operator, based on the argument provided
    content.vb: Public Function GreaterThan(argument As Argument) As GreaterThan
  overload: SuperOffice.Data.SQL.Argument.GreaterThan*
- uid: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  id: GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Argument)
  nameWithType: Argument.GreaterThanOrEqual(Argument)
  fullName: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the GreaterThanOrEqual operator, based on the argument provided.
  example: []
  syntax:
    content: public GreaterThanOrEqual GreaterThanOrEqual(Argument argument)
    parameters:
    - id: argument
      type: SuperOffice.Data.SQL.Argument
      description: The argument.
    return:
      type: SuperOffice.Data.SQL.GreaterThanOrEqual
      description: a new instance of the GreaterThanOrEqual operator, based on the argument provided
    content.vb: Public Function GreaterThanOrEqual(argument As Argument) As GreaterThanOrEqual
  overload: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual*
- uid: SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  id: Like(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: Like(Argument)
  nameWithType: Argument.Like(Argument)
  fullName: SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the Like operator, based on the argument provided.
  example: []
  syntax:
    content: public Like Like(Argument argument)
    parameters:
    - id: argument
      type: SuperOffice.Data.SQL.Argument
      description: The argument.
    return:
      type: SuperOffice.Data.SQL.Like
      description: a new instance of the Like operator, based on the argument provided
    content.vb: Public Function [Like](argument As Argument) As [Like]
  overload: SuperOffice.Data.SQL.Argument.Like*
- uid: SuperOffice.Data.SQL.Argument.Like(System.String)
  commentId: M:SuperOffice.Data.SQL.Argument.Like(System.String)
  id: Like(System.String)
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: Like(string)
  nameWithType: Argument.Like(string)
  fullName: SuperOffice.Data.SQL.Argument.Like(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the Like operator, based on the argument provided.
  example: []
  syntax:
    content: public Like Like(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: SuperOffice.Data.SQL.Like
      description: a new instance of the Like operator, based on the argument provided
    content.vb: Public Function [Like](value As String) As [Like]
  overload: SuperOffice.Data.SQL.Argument.Like*
  nameWithType.vb: Argument.Like(String)
  fullName.vb: SuperOffice.Data.SQL.Argument.Like(String)
  name.vb: Like(String)
- uid: SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  id: NotLike(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: NotLike(Argument)
  nameWithType: Argument.NotLike(Argument)
  fullName: SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the NotLike operator, based on the argument provided.
  example: []
  syntax:
    content: public NotLike NotLike(Argument argument)
    parameters:
    - id: argument
      type: SuperOffice.Data.SQL.Argument
      description: string value
    return:
      type: SuperOffice.Data.SQL.NotLike
      description: a new instance of the NotLike operator, based on the argument provided
    content.vb: Public Function NotLike(argument As Argument) As NotLike
  overload: SuperOffice.Data.SQL.Argument.NotLike*
- uid: SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  id: NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: NotBetween(Argument, Argument)
  nameWithType: Argument.NotBetween(Argument, Argument)
  fullName: SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the NotBetween operator, based on the arguments provided.
  example: []
  syntax:
    content: public NotBetween NotBetween(Argument min, Argument max)
    parameters:
    - id: min
      type: SuperOffice.Data.SQL.Argument
      description: Minimum value
    - id: max
      type: SuperOffice.Data.SQL.Argument
      description: Maximum value
    return:
      type: SuperOffice.Data.SQL.NotBetween
      description: a new instance of the NotBetween operator, based on the argument provided.
    content.vb: Public Function NotBetween(min As Argument, max As Argument) As NotBetween
  overload: SuperOffice.Data.SQL.Argument.NotBetween*
- uid: SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  id: Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: Between(Argument, Argument)
  nameWithType: Argument.Between(Argument, Argument)
  fullName: SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the Between operator, based on the arguments provided.
  example: []
  syntax:
    content: public Between Between(Argument min, Argument max)
    parameters:
    - id: min
      type: SuperOffice.Data.SQL.Argument
      description: Minimum value
    - id: max
      type: SuperOffice.Data.SQL.Argument
      description: Maximum value
    return:
      type: SuperOffice.Data.SQL.Between
      description: a new instance of the Between operator, based on the argument provided.
    content.vb: Public Function Between(min As Argument, max As Argument) As Between
  overload: SuperOffice.Data.SQL.Argument.Between*
- uid: SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
  id: In(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: In(params Argument[])
  nameWithType: Argument.In(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.In(params SuperOffice.Data.SQL.Argument[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the In operator, based on the argument array provided.
  example: []
  syntax:
    content: public In In(params Argument[] arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Argument[]
      description: The argument array
    return:
      type: SuperOffice.Data.SQL.In
      description: a new instance of the Between operator, based on the argument array provided.
    content.vb: Public Function [In](ParamArray arg As Argument()) As [In]
  overload: SuperOffice.Data.SQL.Argument.In*
  nameWithType.vb: Argument.In(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.In(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: In(ParamArray Argument())
- uid: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  id: HasAny(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: HasAny(params Argument[])
  nameWithType: Argument.HasAny(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.HasAny(params SuperOffice.Data.SQL.Argument[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the <xref href="SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument%5b%5d)" data-throw-if-not-resolved="false"></xref> operator, based on the argument array provided.
  example: []
  syntax:
    content: public HasAny HasAny(params Argument[] arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Argument[]
      description: The argument array
    return:
      type: SuperOffice.Data.SQL.HasAny
      description: a new instance of the Between operator, based on the argument array provided.
    content.vb: Public Function HasAny(ParamArray arg As Argument()) As HasAny
  overload: SuperOffice.Data.SQL.Argument.HasAny*
  nameWithType.vb: Argument.HasAny(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.HasAny(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: HasAny(ParamArray Argument())
- uid: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  id: HasAll(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: HasAll(params Argument[])
  nameWithType: Argument.HasAll(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.HasAll(params SuperOffice.Data.SQL.Argument[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the <xref href="SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument%5b%5d)" data-throw-if-not-resolved="false"></xref> operator, based on the argument array provided.
  example: []
  syntax:
    content: public HasAll HasAll(params Argument[] arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Argument[]
      description: The argument array
    return:
      type: SuperOffice.Data.SQL.HasAll
      description: a new instance of the Between operator, based on the argument array provided.
    content.vb: Public Function HasAll(ParamArray arg As Argument()) As HasAll
  overload: SuperOffice.Data.SQL.Argument.HasAll*
  nameWithType.vb: Argument.HasAll(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.HasAll(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: HasAll(ParamArray Argument())
- uid: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  id: MissingAny(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: MissingAny(params Argument[])
  nameWithType: Argument.MissingAny(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.MissingAny(params SuperOffice.Data.SQL.Argument[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the <xref href="SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument%5b%5d)" data-throw-if-not-resolved="false"></xref> operator, based on the argument array provided.
  example: []
  syntax:
    content: public MissingAny MissingAny(params Argument[] arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Argument[]
      description: The argument array
    return:
      type: SuperOffice.Data.SQL.MissingAny
      description: a new instance of the Between operator, based on the argument array provided.
    content.vb: Public Function MissingAny(ParamArray arg As Argument()) As MissingAny
  overload: SuperOffice.Data.SQL.Argument.MissingAny*
  nameWithType.vb: Argument.MissingAny(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.MissingAny(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: MissingAny(ParamArray Argument())
- uid: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  id: MissingAll(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: MissingAll(params Argument[])
  nameWithType: Argument.MissingAll(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.MissingAll(params SuperOffice.Data.SQL.Argument[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the <xref href="SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument%5b%5d)" data-throw-if-not-resolved="false"></xref> operator, based on the argument array provided.
  example: []
  syntax:
    content: public MissingAll MissingAll(params Argument[] arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Argument[]
      description: The argument array
    return:
      type: SuperOffice.Data.SQL.MissingAll
      description: a new instance of the Between operator, based on the argument array provided.
    content.vb: Public Function MissingAll(ParamArray arg As Argument()) As MissingAll
  overload: SuperOffice.Data.SQL.Argument.MissingAll*
  nameWithType.vb: Argument.MissingAll(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.MissingAll(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: MissingAll(ParamArray Argument())
- uid: SuperOffice.Data.SQL.Argument.IsNull
  commentId: M:SuperOffice.Data.SQL.Argument.IsNull
  id: IsNull
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: IsNull()
  nameWithType: Argument.IsNull()
  fullName: SuperOffice.Data.SQL.Argument.IsNull()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the IsNull operator, that determines whether this instance is null.
  example: []
  syntax:
    content: public IsNull IsNull()
    return:
      type: SuperOffice.Data.SQL.IsNull
      description: a new instance of the IsNull operator.
    content.vb: Public Function IsNull() As IsNull
  overload: SuperOffice.Data.SQL.Argument.IsNull*
- uid: SuperOffice.Data.SQL.Argument.IsNotNull
  commentId: M:SuperOffice.Data.SQL.Argument.IsNotNull
  id: IsNotNull
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: IsNotNull()
  nameWithType: Argument.IsNotNull()
  fullName: SuperOffice.Data.SQL.Argument.IsNotNull()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the IsNotNull operator, that determines whether this instance is not null.
  example: []
  syntax:
    content: public IsNotNull IsNotNull()
    return:
      type: SuperOffice.Data.SQL.IsNotNull
      description: a new instance of the IsNotNull operator.
    content.vb: Public Function IsNotNull() As IsNotNull
  overload: SuperOffice.Data.SQL.Argument.IsNotNull*
- uid: SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
  id: NotIn(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: NotIn(params Argument[])
  nameWithType: Argument.NotIn(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.NotIn(params SuperOffice.Data.SQL.Argument[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the NotIn operator, based on the argument array provided.
  example: []
  syntax:
    content: public NotIn NotIn(params Argument[] arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Argument[]
      description: The argument array
    return:
      type: SuperOffice.Data.SQL.NotIn
      description: a new instance of the NotIn operator, based on the argument array provided.
    content.vb: Public Function NotIn(ParamArray arg As Argument()) As NotIn
  overload: SuperOffice.Data.SQL.Argument.NotIn*
  nameWithType.vb: Argument.NotIn(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.NotIn(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: NotIn(ParamArray Argument())
- uid: SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
  id: HasFlag(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: HasFlag(Argument)
  nameWithType: Argument.HasFlag(Argument)
  fullName: SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the HasFlag operator, based on the argument provided.
  example: []
  syntax:
    content: public HasFlag HasFlag(Argument arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Argument
      description: The argument
    return:
      type: SuperOffice.Data.SQL.HasFlag
      description: a new instance of the HasFlag operator, based on the argument provided.
    content.vb: Public Function HasFlag(arg As Argument) As HasFlag
  overload: SuperOffice.Data.SQL.Argument.HasFlag*
- uid: SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
  id: HasNoFlag(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: HasNoFlag(Argument)
  nameWithType: Argument.HasNoFlag(Argument)
  fullName: SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: returns a new instance of the HasNoFlag operator, based on the argument provided.
  example: []
  syntax:
    content: public HasNoFlag HasNoFlag(Argument arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Argument
      description: The argument
    return:
      type: SuperOffice.Data.SQL.HasNoFlag
      description: a new instance of the HasNoFlag operator, based on the argument provided.
    content.vb: Public Function HasNoFlag(arg As Argument) As HasNoFlag
  overload: SuperOffice.Data.SQL.Argument.HasNoFlag*
- uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
  commentId: M:SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
  id: ToArgumentArray``1(``0[])
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: ToArgumentArray<T>(T[])
  nameWithType: Argument.ToArgumentArray<T>(T[])
  fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>(T[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: Helper function that returns an SuperOffice.Data.SQL.Argument array from an array of items
  example: []
  syntax:
    content: public static Argument[] ToArgumentArray<T>(T[] ids)
    parameters:
    - id: ids
      type: '{T}[]'
      description: Array of items
    typeParameters:
    - id: T
    return:
      type: SuperOffice.Data.SQL.Argument[]
      description: Argument array with items
    content.vb: Public Shared Function ToArgumentArray(Of T)(ids As T()) As Argument()
  overload: SuperOffice.Data.SQL.Argument.ToArgumentArray*
  nameWithType.vb: Argument.ToArgumentArray(Of T)(T())
  fullName.vb: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)(T())
  name.vb: ToArgumentArray(Of T)(T())
- uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
  commentId: M:SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
  id: ToArgumentArray``1(``0[],System.Boolean)
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: ToArgumentArray<T>(T[], bool)
  nameWithType: Argument.ToArgumentArray<T>(T[], bool)
  fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>(T[], bool)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: Helper function that returns an SuperOffice.Data.SQL.Argument array from an array of items
  example: []
  syntax:
    content: public static Argument[] ToArgumentArray<T>(T[] ids, bool useSqlParameters)
    parameters:
    - id: ids
      type: '{T}[]'
      description: Array of items
    - id: useSqlParameters
      type: System.Boolean
      description: If false, the query will not add sql parameters for these arguments
    typeParameters:
    - id: T
    return:
      type: SuperOffice.Data.SQL.Argument[]
      description: Argument array with items
    content.vb: Public Shared Function ToArgumentArray(Of T)(ids As T(), useSqlParameters As Boolean) As Argument()
  overload: SuperOffice.Data.SQL.Argument.ToArgumentArray*
  nameWithType.vb: Argument.ToArgumentArray(Of T)(T(), Boolean)
  fullName.vb: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)(T(), Boolean)
  name.vb: ToArgumentArray(Of T)(T(), Boolean)
- uid: SuperOffice.Data.SQL.Argument.GetSubElements
  commentId: M:SuperOffice.Data.SQL.Argument.GetSubElements
  id: GetSubElements
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: GetSubElements()
  nameWithType: Argument.GetSubElements()
  fullName: SuperOffice.Data.SQL.Argument.GetSubElements()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: Part of visitor pattern defined in abstract class QueryElement
  example: []
  syntax:
    content: protected override QueryElement[] GetSubElements()
    return:
      type: SuperOffice.Data.SQL.QueryElement[]
      description: ''
    content.vb: Protected Overrides Function GetSubElements() As QueryElement()
  overridden: SuperOffice.Data.SQL.QueryElement.GetSubElements
  overload: SuperOffice.Data.SQL.Argument.GetSubElements*
- uid: SuperOffice.Data.SQL.Argument.Alias
  commentId: P:SuperOffice.Data.SQL.Argument.Alias
  id: Alias
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: Alias
  nameWithType: Argument.Alias
  fullName: SuperOffice.Data.SQL.Argument.Alias
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: Get/Set values for Alias
  example: []
  syntax:
    content: public Alias Alias { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Alias
    content.vb: Public Property [Alias] As [Alias]
  overload: SuperOffice.Data.SQL.Argument.Alias*
- uid: SuperOffice.Data.SQL.Argument.DataType
  commentId: P:SuperOffice.Data.SQL.Argument.DataType
  id: DataType
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: DataType
  nameWithType: Argument.DataType
  fullName: SuperOffice.Data.SQL.Argument.DataType
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: Get/Set values for DataType
  example: []
  syntax:
    content: public FieldDataType DataType { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.FieldDataType
    content.vb: Public Property DataType As FieldDataType
  overload: SuperOffice.Data.SQL.Argument.DataType*
- uid: SuperOffice.Data.SQL.Argument.Size
  commentId: P:SuperOffice.Data.SQL.Argument.Size
  id: Size
  parent: SuperOffice.Data.SQL.Argument
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Argument.Size
  fullName: SuperOffice.Data.SQL.Argument.Size
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  syntax:
    content: public virtual int Size { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property Size As Integer
  overload: SuperOffice.Data.SQL.Argument.Size*
references:
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SuperOffice.Data.SQL.QueryElement
  commentId: T:SuperOffice.Data.SQL.QueryElement
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.QueryElement.html
  name: QueryElement
  nameWithType: QueryElement
  fullName: SuperOffice.Data.SQL.QueryElement
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: SuperOffice.Data.SQL.QueryElement.Clone
  commentId: M:SuperOffice.Data.SQL.QueryElement.Clone
  parent: SuperOffice.Data.SQL.QueryElement
  isExternal: true
  href: SuperOffice.Data.SQL.QueryElement.html#SuperOffice_Data_SQL_QueryElement_Clone
  name: Clone()
  nameWithType: QueryElement.Clone()
  fullName: SuperOffice.Data.SQL.QueryElement.Clone()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.QueryElement.Clone
    name: Clone
    isExternal: true
    href: SuperOffice.Data.SQL.QueryElement.html#SuperOffice_Data_SQL_QueryElement_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.QueryElement.Clone
    name: Clone
    isExternal: true
    href: SuperOffice.Data.SQL.QueryElement.html#SuperOffice_Data_SQL_QueryElement_Clone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.Data.SQL.Argument.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<Argument, To>(Argument)
  nameWithType: EnumUtil.MapEnums<Argument, To>(Argument)
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.Argument, To>(SuperOffice.Data.SQL.Argument)
  nameWithType.vb: EnumUtil.MapEnums(Of Argument, To)(Argument)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.Argument, To)(SuperOffice.Data.SQL.Argument)
  name.vb: MapEnums(Of Argument, To)(Argument)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Data.SQL.Argument)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Data.SQL.Argument)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: SuperOffice.Data.SQL.Argument.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<Argument, To>(Argument)
  nameWithType: Converters.MapEnums<Argument, To>(Argument)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.Argument, To>(SuperOffice.Data.SQL.Argument)
  nameWithType.vb: Converters.MapEnums(Of Argument, To)(Argument)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.Argument, To)(SuperOffice.Data.SQL.Argument)
  name.vb: MapEnums(Of Argument, To)(Argument)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Data.SQL.Argument)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Data.SQL.Argument)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Data.SQL.Argument
  commentId: T:SuperOffice.Data.SQL.Argument
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html
  name: Argument
  nameWithType: Argument
  fullName: SuperOffice.Data.SQL.Argument
- uid: SuperOffice.Data.SQL.Argument.#ctor*
  commentId: Overload:SuperOffice.Data.SQL.Argument.#ctor
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument__ctor_SuperOffice_Data_FieldDataType_System_Int32_
  name: Argument
  nameWithType: Argument.Argument
  fullName: SuperOffice.Data.SQL.Argument.Argument
  nameWithType.vb: Argument.New
  fullName.vb: SuperOffice.Data.SQL.Argument.New
  name.vb: New
- uid: SuperOffice.Data.FieldDataType
  commentId: T:SuperOffice.Data.FieldDataType
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.FieldDataType.html
  name: FieldDataType
  nameWithType: FieldDataType
  fullName: SuperOffice.Data.FieldDataType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: SuperOffice.Data.SQL.Argument.GetMainField*
  commentId: Overload:SuperOffice.Data.SQL.Argument.GetMainField
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GetMainField
  name: GetMainField
  nameWithType: Argument.GetMainField
  fullName: SuperOffice.Data.SQL.Argument.GetMainField
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.FieldInfo.html
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.Data.SQL.Argument.Equal*
  commentId: Overload:SuperOffice.Data.SQL.Argument.Equal
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Equal_SuperOffice_Data_SQL_Argument_
  name: Equal
  nameWithType: Argument.Equal
  fullName: SuperOffice.Data.SQL.Argument.Equal
- uid: SuperOffice.Data.SQL.Equal
  commentId: T:SuperOffice.Data.SQL.Equal
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Equal.html
  name: Equal
  nameWithType: Equal
  fullName: SuperOffice.Data.SQL.Equal
- uid: SuperOffice.Data.SQL.Argument.UnEqual*
  commentId: Overload:SuperOffice.Data.SQL.Argument.UnEqual
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_UnEqual_SuperOffice_Data_SQL_Argument_
  name: UnEqual
  nameWithType: Argument.UnEqual
  fullName: SuperOffice.Data.SQL.Argument.UnEqual
- uid: SuperOffice.Data.SQL.UnEqual
  commentId: T:SuperOffice.Data.SQL.UnEqual
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.UnEqual.html
  name: UnEqual
  nameWithType: UnEqual
  fullName: SuperOffice.Data.SQL.UnEqual
- uid: SuperOffice.Data.SQL.Argument.LessThan*
  commentId: Overload:SuperOffice.Data.SQL.Argument.LessThan
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_LessThan_SuperOffice_Data_SQL_Argument_
  name: LessThan
  nameWithType: Argument.LessThan
  fullName: SuperOffice.Data.SQL.Argument.LessThan
- uid: SuperOffice.Data.SQL.LessThan
  commentId: T:SuperOffice.Data.SQL.LessThan
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.LessThan.html
  name: LessThan
  nameWithType: LessThan
  fullName: SuperOffice.Data.SQL.LessThan
- uid: SuperOffice.Data.SQL.Argument.LessThanOrEqual*
  commentId: Overload:SuperOffice.Data.SQL.Argument.LessThanOrEqual
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_LessThanOrEqual_SuperOffice_Data_SQL_Argument_
  name: LessThanOrEqual
  nameWithType: Argument.LessThanOrEqual
  fullName: SuperOffice.Data.SQL.Argument.LessThanOrEqual
- uid: SuperOffice.Data.SQL.LessThanOrEqual
  commentId: T:SuperOffice.Data.SQL.LessThanOrEqual
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.LessThanOrEqual.html
  name: LessThanOrEqual
  nameWithType: LessThanOrEqual
  fullName: SuperOffice.Data.SQL.LessThanOrEqual
- uid: SuperOffice.Data.SQL.Argument.GreaterThan*
  commentId: Overload:SuperOffice.Data.SQL.Argument.GreaterThan
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GreaterThan_SuperOffice_Data_SQL_Argument_
  name: GreaterThan
  nameWithType: Argument.GreaterThan
  fullName: SuperOffice.Data.SQL.Argument.GreaterThan
- uid: SuperOffice.Data.SQL.GreaterThan
  commentId: T:SuperOffice.Data.SQL.GreaterThan
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.GreaterThan.html
  name: GreaterThan
  nameWithType: GreaterThan
  fullName: SuperOffice.Data.SQL.GreaterThan
- uid: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual*
  commentId: Overload:SuperOffice.Data.SQL.Argument.GreaterThanOrEqual
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GreaterThanOrEqual_SuperOffice_Data_SQL_Argument_
  name: GreaterThanOrEqual
  nameWithType: Argument.GreaterThanOrEqual
  fullName: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual
- uid: SuperOffice.Data.SQL.GreaterThanOrEqual
  commentId: T:SuperOffice.Data.SQL.GreaterThanOrEqual
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.GreaterThanOrEqual.html
  name: GreaterThanOrEqual
  nameWithType: GreaterThanOrEqual
  fullName: SuperOffice.Data.SQL.GreaterThanOrEqual
- uid: SuperOffice.Data.SQL.Argument.Like*
  commentId: Overload:SuperOffice.Data.SQL.Argument.Like
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Like_SuperOffice_Data_SQL_Argument_
  name: Like
  nameWithType: Argument.Like
  fullName: SuperOffice.Data.SQL.Argument.Like
- uid: SuperOffice.Data.SQL.Like
  commentId: T:SuperOffice.Data.SQL.Like
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Like.html
  name: Like
  nameWithType: Like
  fullName: SuperOffice.Data.SQL.Like
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Data.SQL.Argument.NotLike*
  commentId: Overload:SuperOffice.Data.SQL.Argument.NotLike
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_NotLike_SuperOffice_Data_SQL_Argument_
  name: NotLike
  nameWithType: Argument.NotLike
  fullName: SuperOffice.Data.SQL.Argument.NotLike
- uid: SuperOffice.Data.SQL.NotLike
  commentId: T:SuperOffice.Data.SQL.NotLike
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.NotLike.html
  name: NotLike
  nameWithType: NotLike
  fullName: SuperOffice.Data.SQL.NotLike
- uid: SuperOffice.Data.SQL.Argument.NotBetween*
  commentId: Overload:SuperOffice.Data.SQL.Argument.NotBetween
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_NotBetween_SuperOffice_Data_SQL_Argument_SuperOffice_Data_SQL_Argument_
  name: NotBetween
  nameWithType: Argument.NotBetween
  fullName: SuperOffice.Data.SQL.Argument.NotBetween
- uid: SuperOffice.Data.SQL.NotBetween
  commentId: T:SuperOffice.Data.SQL.NotBetween
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.NotBetween.html
  name: NotBetween
  nameWithType: NotBetween
  fullName: SuperOffice.Data.SQL.NotBetween
- uid: SuperOffice.Data.SQL.Argument.Between*
  commentId: Overload:SuperOffice.Data.SQL.Argument.Between
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Between_SuperOffice_Data_SQL_Argument_SuperOffice_Data_SQL_Argument_
  name: Between
  nameWithType: Argument.Between
  fullName: SuperOffice.Data.SQL.Argument.Between
- uid: SuperOffice.Data.SQL.Between
  commentId: T:SuperOffice.Data.SQL.Between
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Between.html
  name: Between
  nameWithType: Between
  fullName: SuperOffice.Data.SQL.Between
- uid: SuperOffice.Data.SQL.Argument.In*
  commentId: Overload:SuperOffice.Data.SQL.Argument.In
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_In_SuperOffice_Data_SQL_Argument___
  name: In
  nameWithType: Argument.In
  fullName: SuperOffice.Data.SQL.Argument.In
- uid: SuperOffice.Data.SQL.Argument[]
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html
  name: Argument[]
  nameWithType: Argument[]
  fullName: SuperOffice.Data.SQL.Argument[]
  nameWithType.vb: Argument()
  fullName.vb: SuperOffice.Data.SQL.Argument()
  name.vb: Argument()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: (
  - name: )
- uid: SuperOffice.Data.SQL.In
  commentId: T:SuperOffice.Data.SQL.In
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.In.html
  name: In
  nameWithType: In
  fullName: SuperOffice.Data.SQL.In
- uid: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasAny_SuperOffice_Data_SQL_Argument___
  name: HasAny(params Argument[])
  nameWithType: Argument.HasAny(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.HasAny(params SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.HasAny(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.HasAny(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: HasAny(ParamArray Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
    name: HasAny
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasAny_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: params
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
    name: HasAny
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasAny_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.Data.SQL.Argument.HasAny*
  commentId: Overload:SuperOffice.Data.SQL.Argument.HasAny
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasAny_SuperOffice_Data_SQL_Argument___
  name: HasAny
  nameWithType: Argument.HasAny
  fullName: SuperOffice.Data.SQL.Argument.HasAny
- uid: SuperOffice.Data.SQL.HasAny
  commentId: T:SuperOffice.Data.SQL.HasAny
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.HasAny.html
  name: HasAny
  nameWithType: HasAny
  fullName: SuperOffice.Data.SQL.HasAny
- uid: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasAll_SuperOffice_Data_SQL_Argument___
  name: HasAll(params Argument[])
  nameWithType: Argument.HasAll(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.HasAll(params SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.HasAll(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.HasAll(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: HasAll(ParamArray Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
    name: HasAll
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasAll_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: params
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
    name: HasAll
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasAll_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.Data.SQL.Argument.HasAll*
  commentId: Overload:SuperOffice.Data.SQL.Argument.HasAll
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasAll_SuperOffice_Data_SQL_Argument___
  name: HasAll
  nameWithType: Argument.HasAll
  fullName: SuperOffice.Data.SQL.Argument.HasAll
- uid: SuperOffice.Data.SQL.HasAll
  commentId: T:SuperOffice.Data.SQL.HasAll
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.HasAll.html
  name: HasAll
  nameWithType: HasAll
  fullName: SuperOffice.Data.SQL.HasAll
- uid: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_MissingAny_SuperOffice_Data_SQL_Argument___
  name: MissingAny(params Argument[])
  nameWithType: Argument.MissingAny(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.MissingAny(params SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.MissingAny(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.MissingAny(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: MissingAny(ParamArray Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
    name: MissingAny
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_MissingAny_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: params
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
    name: MissingAny
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_MissingAny_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.Data.SQL.Argument.MissingAny*
  commentId: Overload:SuperOffice.Data.SQL.Argument.MissingAny
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_MissingAny_SuperOffice_Data_SQL_Argument___
  name: MissingAny
  nameWithType: Argument.MissingAny
  fullName: SuperOffice.Data.SQL.Argument.MissingAny
- uid: SuperOffice.Data.SQL.MissingAny
  commentId: T:SuperOffice.Data.SQL.MissingAny
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.MissingAny.html
  name: MissingAny
  nameWithType: MissingAny
  fullName: SuperOffice.Data.SQL.MissingAny
- uid: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_MissingAll_SuperOffice_Data_SQL_Argument___
  name: MissingAll(params Argument[])
  nameWithType: Argument.MissingAll(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.MissingAll(params SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.MissingAll(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.MissingAll(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: MissingAll(ParamArray Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
    name: MissingAll
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_MissingAll_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: params
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
    name: MissingAll
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_MissingAll_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.Data.SQL.Argument.MissingAll*
  commentId: Overload:SuperOffice.Data.SQL.Argument.MissingAll
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_MissingAll_SuperOffice_Data_SQL_Argument___
  name: MissingAll
  nameWithType: Argument.MissingAll
  fullName: SuperOffice.Data.SQL.Argument.MissingAll
- uid: SuperOffice.Data.SQL.MissingAll
  commentId: T:SuperOffice.Data.SQL.MissingAll
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.MissingAll.html
  name: MissingAll
  nameWithType: MissingAll
  fullName: SuperOffice.Data.SQL.MissingAll
- uid: SuperOffice.Data.SQL.Argument.IsNull*
  commentId: Overload:SuperOffice.Data.SQL.Argument.IsNull
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_IsNull
  name: IsNull
  nameWithType: Argument.IsNull
  fullName: SuperOffice.Data.SQL.Argument.IsNull
- uid: SuperOffice.Data.SQL.IsNull
  commentId: T:SuperOffice.Data.SQL.IsNull
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.IsNull.html
  name: IsNull
  nameWithType: IsNull
  fullName: SuperOffice.Data.SQL.IsNull
- uid: SuperOffice.Data.SQL.Argument.IsNotNull*
  commentId: Overload:SuperOffice.Data.SQL.Argument.IsNotNull
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_IsNotNull
  name: IsNotNull
  nameWithType: Argument.IsNotNull
  fullName: SuperOffice.Data.SQL.Argument.IsNotNull
- uid: SuperOffice.Data.SQL.IsNotNull
  commentId: T:SuperOffice.Data.SQL.IsNotNull
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.IsNotNull.html
  name: IsNotNull
  nameWithType: IsNotNull
  fullName: SuperOffice.Data.SQL.IsNotNull
- uid: SuperOffice.Data.SQL.Argument.NotIn*
  commentId: Overload:SuperOffice.Data.SQL.Argument.NotIn
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_NotIn_SuperOffice_Data_SQL_Argument___
  name: NotIn
  nameWithType: Argument.NotIn
  fullName: SuperOffice.Data.SQL.Argument.NotIn
- uid: SuperOffice.Data.SQL.NotIn
  commentId: T:SuperOffice.Data.SQL.NotIn
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.NotIn.html
  name: NotIn
  nameWithType: NotIn
  fullName: SuperOffice.Data.SQL.NotIn
- uid: SuperOffice.Data.SQL.Argument.HasFlag*
  commentId: Overload:SuperOffice.Data.SQL.Argument.HasFlag
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasFlag_SuperOffice_Data_SQL_Argument_
  name: HasFlag
  nameWithType: Argument.HasFlag
  fullName: SuperOffice.Data.SQL.Argument.HasFlag
- uid: SuperOffice.Data.SQL.HasFlag
  commentId: T:SuperOffice.Data.SQL.HasFlag
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.HasFlag.html
  name: HasFlag
  nameWithType: HasFlag
  fullName: SuperOffice.Data.SQL.HasFlag
- uid: SuperOffice.Data.SQL.Argument.HasNoFlag*
  commentId: Overload:SuperOffice.Data.SQL.Argument.HasNoFlag
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasNoFlag_SuperOffice_Data_SQL_Argument_
  name: HasNoFlag
  nameWithType: Argument.HasNoFlag
  fullName: SuperOffice.Data.SQL.Argument.HasNoFlag
- uid: SuperOffice.Data.SQL.HasNoFlag
  commentId: T:SuperOffice.Data.SQL.HasNoFlag
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.HasNoFlag.html
  name: HasNoFlag
  nameWithType: HasNoFlag
  fullName: SuperOffice.Data.SQL.HasNoFlag
- uid: SuperOffice.Data.SQL.Argument.ToArgumentArray*
  commentId: Overload:SuperOffice.Data.SQL.Argument.ToArgumentArray
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_ToArgumentArray__1___0___
  name: ToArgumentArray
  nameWithType: Argument.ToArgumentArray
  fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.Data.SQL.QueryElement.GetSubElements
  commentId: M:SuperOffice.Data.SQL.QueryElement.GetSubElements
  parent: SuperOffice.Data.SQL.QueryElement
  isExternal: true
  href: SuperOffice.Data.SQL.QueryElement.html#SuperOffice_Data_SQL_QueryElement_GetSubElements
  name: GetSubElements()
  nameWithType: QueryElement.GetSubElements()
  fullName: SuperOffice.Data.SQL.QueryElement.GetSubElements()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.QueryElement.GetSubElements
    name: GetSubElements
    isExternal: true
    href: SuperOffice.Data.SQL.QueryElement.html#SuperOffice_Data_SQL_QueryElement_GetSubElements
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.QueryElement.GetSubElements
    name: GetSubElements
    isExternal: true
    href: SuperOffice.Data.SQL.QueryElement.html#SuperOffice_Data_SQL_QueryElement_GetSubElements
  - name: (
  - name: )
- uid: SuperOffice.Data.SQL.Argument.GetSubElements*
  commentId: Overload:SuperOffice.Data.SQL.Argument.GetSubElements
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GetSubElements
  name: GetSubElements
  nameWithType: Argument.GetSubElements
  fullName: SuperOffice.Data.SQL.Argument.GetSubElements
- uid: SuperOffice.Data.SQL.QueryElement[]
  isExternal: true
  href: SuperOffice.Data.SQL.QueryElement.html
  name: QueryElement[]
  nameWithType: QueryElement[]
  fullName: SuperOffice.Data.SQL.QueryElement[]
  nameWithType.vb: QueryElement()
  fullName.vb: SuperOffice.Data.SQL.QueryElement()
  name.vb: QueryElement()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.QueryElement
    name: QueryElement
    isExternal: true
    href: SuperOffice.Data.SQL.QueryElement.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.Data.SQL.QueryElement
    name: QueryElement
    isExternal: true
    href: SuperOffice.Data.SQL.QueryElement.html
  - name: (
  - name: )
- uid: SuperOffice.Data.SQL.Argument.Alias*
  commentId: Overload:SuperOffice.Data.SQL.Argument.Alias
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Alias
  name: Alias
  nameWithType: Argument.Alias
  fullName: SuperOffice.Data.SQL.Argument.Alias
- uid: SuperOffice.Data.SQL.Alias
  commentId: T:SuperOffice.Data.SQL.Alias
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Alias.html
  name: Alias
  nameWithType: Alias
  fullName: SuperOffice.Data.SQL.Alias
- uid: SuperOffice.Data.SQL.Argument.DataType*
  commentId: Overload:SuperOffice.Data.SQL.Argument.DataType
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_DataType
  name: DataType
  nameWithType: Argument.DataType
  fullName: SuperOffice.Data.SQL.Argument.DataType
- uid: SuperOffice.Data.SQL.Argument.Size*
  commentId: Overload:SuperOffice.Data.SQL.Argument.Size
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Size
  name: Size
  nameWithType: Argument.Size
  fullName: SuperOffice.Data.SQL.Argument.Size
