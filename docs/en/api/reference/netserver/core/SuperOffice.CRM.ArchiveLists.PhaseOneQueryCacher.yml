### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher
  commentId: T:SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher
  id: PhaseOneQueryCacher
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.#ctor
  - SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.GetCachedKeys(System.String)
  - SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.IdsCached
  - SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.QueriesCached
  - SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.SetCachedKeys(System.String,System.Int32,System.Collections.Generic.List{System.Int32})
  langs:
  - csharp
  - vb
  name: PhaseOneQueryCacher
  nameWithType: PhaseOneQueryCacher
  fullName: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nShort-term (one minute!) cache for archive provider primary keys; to improve performance for requests of later pages of the same archive\n"
  syntax:
    content: >-
      [SoInject("Database")]

      public class PhaseOneQueryCacher
    content.vb: >-
      <SoInject("Database")>

      Public Class PhaseOneQueryCacher
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher)
  - SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Factory.SoInjectAttribute
    ctor: SuperOffice.Factory.SoInjectAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Database
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.#ctor
  commentId: M:SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher
  langs:
  - csharp
  - vb
  name: PhaseOneQueryCacher()
  nameWithType: PhaseOneQueryCacher.PhaseOneQueryCacher()
  fullName: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.PhaseOneQueryCacher()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nConstruct and set up LRU cleaner timer\n"
  syntax:
    content: public PhaseOneQueryCacher()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.GetCachedKeys(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.GetCachedKeys(System.String)
  id: GetCachedKeys(System.String)
  parent: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher
  langs:
  - csharp
  - vb
  name: GetCachedKeys(String)
  nameWithType: PhaseOneQueryCacher.GetCachedKeys(String)
  fullName: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.GetCachedKeys(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nRetrieve a list of primary keys from the cache\n"
  syntax:
    content: public List<int> GetCachedKeys(string identifierHash)
    parameters:
    - id: identifierHash
      type: System.String
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public Function GetCachedKeys(identifierHash As String) As List(Of Integer)
  overload: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.GetCachedKeys*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.SetCachedKeys(System.String,System.Int32,System.Collections.Generic.List{System.Int32})
  commentId: M:SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.SetCachedKeys(System.String,System.Int32,System.Collections.Generic.List{System.Int32})
  id: SetCachedKeys(System.String,System.Int32,System.Collections.Generic.List{System.Int32})
  parent: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher
  langs:
  - csharp
  - vb
  name: SetCachedKeys(String, Int32, List<Int32>)
  nameWithType: PhaseOneQueryCacher.SetCachedKeys(String, Int32, List<Int32>)
  fullName: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.SetCachedKeys(System.String, System.Int32, System.Collections.Generic.List<System.Int32>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nStore a list of primary keys in the cache; <xref href=\"SuperOffice.Data.SoftTrigger\" data-throw-if-not-resolved=\"false\"></xref> subscriptions will be adjusted on timer (once per second) to\navoid fatal deadlocks between our locks and the SoftTrigger system\n"
  syntax:
    content: public void SetCachedKeys(string identifierHash, int tableNumber, List<int> keys)
    parameters:
    - id: identifierHash
      type: System.String
    - id: tableNumber
      type: System.Int32
    - id: keys
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public Sub SetCachedKeys(identifierHash As String, tableNumber As Integer, keys As List(Of Integer))
  overload: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.SetCachedKeys*
  nameWithType.vb: PhaseOneQueryCacher.SetCachedKeys(String, Int32, List(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.SetCachedKeys(System.String, System.Int32, System.Collections.Generic.List(Of System.Int32))
  name.vb: SetCachedKeys(String, Int32, List(Of Int32))
- uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.QueriesCached
  commentId: P:SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.QueriesCached
  id: QueriesCached
  parent: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher
  langs:
  - csharp
  - vb
  name: QueriesCached
  nameWithType: PhaseOneQueryCacher.QueriesCached
  fullName: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.QueriesCached
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public int QueriesCached { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property QueriesCached As Integer
  overload: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.QueriesCached*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.IdsCached
  commentId: P:SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.IdsCached
  id: IdsCached
  parent: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher
  langs:
  - csharp
  - vb
  name: IdsCached
  nameWithType: PhaseOneQueryCacher.IdsCached
  fullName: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.IdsCached
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public int IdsCached { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property IdsCached As Integer
  overload: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.IdsCached*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<PhaseOneQueryCacher, To>()
  nameWithType: EnumUtil.MapEnums<PhaseOneQueryCacher, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of PhaseOneQueryCacher, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher, To)()
  name.vb: MapEnums(Of PhaseOneQueryCacher, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<PhaseOneQueryCacher, To>
    nameWithType: EnumUtil.MapEnums<PhaseOneQueryCacher, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of PhaseOneQueryCacher, To)
    nameWithType: EnumUtil.MapEnums(Of PhaseOneQueryCacher, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<PhaseOneQueryCacher>(PhaseOneQueryCacher)
  nameWithType: ObjectExtensions.AssignByReflection<PhaseOneQueryCacher>(PhaseOneQueryCacher)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher>(SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of PhaseOneQueryCacher)(PhaseOneQueryCacher)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher)(SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher)
  name.vb: AssignByReflection(Of PhaseOneQueryCacher)(PhaseOneQueryCacher)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<PhaseOneQueryCacher>
    nameWithType: ObjectExtensions.AssignByReflection<PhaseOneQueryCacher>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher
    name: PhaseOneQueryCacher
    nameWithType: PhaseOneQueryCacher
    fullName: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of PhaseOneQueryCacher)
    nameWithType: ObjectExtensions.AssignByReflection(Of PhaseOneQueryCacher)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher
    name: PhaseOneQueryCacher
    nameWithType: PhaseOneQueryCacher
    fullName: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<PhaseOneQueryCacher>()
  nameWithType: ObjectExtensions.GraphCopy<PhaseOneQueryCacher>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of PhaseOneQueryCacher)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher)()
  name.vb: GraphCopy(Of PhaseOneQueryCacher)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<PhaseOneQueryCacher>
    nameWithType: ObjectExtensions.GraphCopy<PhaseOneQueryCacher>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of PhaseOneQueryCacher)
    nameWithType: ObjectExtensions.GraphCopy(Of PhaseOneQueryCacher)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<PhaseOneQueryCacher, To>()
  nameWithType: Converters.MapEnums<PhaseOneQueryCacher, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher, To>()
  nameWithType.vb: Converters.MapEnums(Of PhaseOneQueryCacher, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher, To)()
  name.vb: MapEnums(Of PhaseOneQueryCacher, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<PhaseOneQueryCacher, To>
    nameWithType: Converters.MapEnums<PhaseOneQueryCacher, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of PhaseOneQueryCacher, To)
    nameWithType: Converters.MapEnums(Of PhaseOneQueryCacher, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.#ctor*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.#ctor
  isExternal: true
  name: PhaseOneQueryCacher
  nameWithType: PhaseOneQueryCacher.PhaseOneQueryCacher
  fullName: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.PhaseOneQueryCacher
- uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.GetCachedKeys*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.GetCachedKeys
  isExternal: true
  name: GetCachedKeys
  nameWithType: PhaseOneQueryCacher.GetCachedKeys
  fullName: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.GetCachedKeys
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.SetCachedKeys*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.SetCachedKeys
  isExternal: true
  name: SetCachedKeys
  nameWithType: PhaseOneQueryCacher.SetCachedKeys
  fullName: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.SetCachedKeys
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.QueriesCached*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.QueriesCached
  isExternal: true
  name: QueriesCached
  nameWithType: PhaseOneQueryCacher.QueriesCached
  fullName: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.QueriesCached
- uid: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.IdsCached*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.IdsCached
  isExternal: true
  name: IdsCached
  nameWithType: PhaseOneQueryCacher.IdsCached
  fullName: SuperOffice.CRM.ArchiveLists.PhaseOneQueryCacher.IdsCached
