### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Data.DBC.ImportFieldFields
  commentId: T:SuperOffice.CRM.Data.DBC.ImportFieldFields
  id: DBC.ImportFieldFields
  parent: SuperOffice.CRM.Data
  children:
  - SuperOffice.CRM.Data.DBC.ImportFieldFields.DbFieldId
  - SuperOffice.CRM.Data.DBC.ImportFieldFields.GuiCategory
  - SuperOffice.CRM.Data.DBC.ImportFieldFields.ImportFieldId
  - SuperOffice.CRM.Data.DBC.ImportFieldFields.ImportObjectId
  - SuperOffice.CRM.Data.DBC.ImportFieldFields.IsBuiltin
  - SuperOffice.CRM.Data.DBC.ImportFieldFields.Registered
  - SuperOffice.CRM.Data.DBC.ImportFieldFields.RegisteredAssociateId
  - SuperOffice.CRM.Data.DBC.ImportFieldFields.Tag
  - SuperOffice.CRM.Data.DBC.ImportFieldFields.Updated
  - SuperOffice.CRM.Data.DBC.ImportFieldFields.UpdatedAssociateId
  - SuperOffice.CRM.Data.DBC.ImportFieldFields.UpdatedCount
  langs:
  - csharp
  - vb
  name: DBC.ImportFieldFields
  nameWithType: DBC.ImportFieldFields
  fullName: SuperOffice.CRM.Data.DBC.ImportFieldFields
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nFields for ImportField, Import object types - see localetext for names\n"
  syntax:
    content: public static class ImportFieldFields
    content.vb: Public Module ImportFieldFields
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.Data.DBC.ImportFieldFields.ImportFieldId
  commentId: F:SuperOffice.CRM.Data.DBC.ImportFieldFields.ImportFieldId
  id: ImportFieldId
  parent: SuperOffice.CRM.Data.DBC.ImportFieldFields
  langs:
  - csharp
  - vb
  name: ImportFieldId
  nameWithType: DBC.ImportFieldFields.ImportFieldId
  fullName: SuperOffice.CRM.Data.DBC.ImportFieldFields.ImportFieldId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nImportField.ImportFieldId: Primary key\n"
  syntax:
    content: public const string ImportFieldId = "ImportField_id"
    return:
      type: System.String
    content.vb: Public Const ImportFieldId As String = "ImportField_id"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.ImportFieldFields.ImportObjectId
  commentId: F:SuperOffice.CRM.Data.DBC.ImportFieldFields.ImportObjectId
  id: ImportObjectId
  parent: SuperOffice.CRM.Data.DBC.ImportFieldFields
  langs:
  - csharp
  - vb
  name: ImportObjectId
  nameWithType: DBC.ImportFieldFields.ImportObjectId
  fullName: SuperOffice.CRM.Data.DBC.ImportFieldFields.ImportObjectId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nImportField.ImportObjectId: The primary object type for this import field\n"
  syntax:
    content: public const string ImportObjectId = "ImportObject_id"
    return:
      type: System.String
    content.vb: Public Const ImportObjectId As String = "ImportObject_id"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.ImportFieldFields.DbFieldId
  commentId: F:SuperOffice.CRM.Data.DBC.ImportFieldFields.DbFieldId
  id: DbFieldId
  parent: SuperOffice.CRM.Data.DBC.ImportFieldFields
  langs:
  - csharp
  - vb
  name: DbFieldId
  nameWithType: DBC.ImportFieldFields.DbFieldId
  fullName: SuperOffice.CRM.Data.DBC.ImportFieldFields.DbFieldId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nImportField.DbFieldId: Database field id of target field (implies table)\n"
  syntax:
    content: public const string DbFieldId = "dbFieldId"
    return:
      type: System.String
    content.vb: Public Const DbFieldId As String = "dbFieldId"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.ImportFieldFields.GuiCategory
  commentId: F:SuperOffice.CRM.Data.DBC.ImportFieldFields.GuiCategory
  id: GuiCategory
  parent: SuperOffice.CRM.Data.DBC.ImportFieldFields
  langs:
  - csharp
  - vb
  name: GuiCategory
  nameWithType: DBC.ImportFieldFields.GuiCategory
  fullName: SuperOffice.CRM.Data.DBC.ImportFieldFields.GuiCategory
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nImportField.GuiCategory: Used for grouping objects in GUI; see LocaleText for name\n"
  syntax:
    content: public const string GuiCategory = "guiCategory"
    return:
      type: System.String
    content.vb: Public Const GuiCategory As String = "guiCategory"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.ImportFieldFields.Tag
  commentId: F:SuperOffice.CRM.Data.DBC.ImportFieldFields.Tag
  id: Tag
  parent: SuperOffice.CRM.Data.DBC.ImportFieldFields
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: DBC.ImportFieldFields.Tag
  fullName: SuperOffice.CRM.Data.DBC.ImportFieldFields.Tag
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nImportField.Tag: Name of field, not visible to the user\n"
  syntax:
    content: public const string Tag = "tag"
    return:
      type: System.String
    content.vb: Public Const Tag As String = "tag"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.ImportFieldFields.Registered
  commentId: F:SuperOffice.CRM.Data.DBC.ImportFieldFields.Registered
  id: Registered
  parent: SuperOffice.CRM.Data.DBC.ImportFieldFields
  langs:
  - csharp
  - vb
  name: Registered
  nameWithType: DBC.ImportFieldFields.Registered
  fullName: SuperOffice.CRM.Data.DBC.ImportFieldFields.Registered
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nImportField.Registered: Registered when\n"
  syntax:
    content: public const string Registered = "registered"
    return:
      type: System.String
    content.vb: Public Const Registered As String = "registered"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.ImportFieldFields.RegisteredAssociateId
  commentId: F:SuperOffice.CRM.Data.DBC.ImportFieldFields.RegisteredAssociateId
  id: RegisteredAssociateId
  parent: SuperOffice.CRM.Data.DBC.ImportFieldFields
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId
  nameWithType: DBC.ImportFieldFields.RegisteredAssociateId
  fullName: SuperOffice.CRM.Data.DBC.ImportFieldFields.RegisteredAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nImportField.RegisteredAssociateId: Registered by whom\n"
  syntax:
    content: public const string RegisteredAssociateId = "registered_associate_id"
    return:
      type: System.String
    content.vb: Public Const RegisteredAssociateId As String = "registered_associate_id"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.ImportFieldFields.Updated
  commentId: F:SuperOffice.CRM.Data.DBC.ImportFieldFields.Updated
  id: Updated
  parent: SuperOffice.CRM.Data.DBC.ImportFieldFields
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: DBC.ImportFieldFields.Updated
  fullName: SuperOffice.CRM.Data.DBC.ImportFieldFields.Updated
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nImportField.Updated: Last updated when\n"
  syntax:
    content: public const string Updated = "updated"
    return:
      type: System.String
    content.vb: Public Const Updated As String = "updated"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.ImportFieldFields.UpdatedAssociateId
  commentId: F:SuperOffice.CRM.Data.DBC.ImportFieldFields.UpdatedAssociateId
  id: UpdatedAssociateId
  parent: SuperOffice.CRM.Data.DBC.ImportFieldFields
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId
  nameWithType: DBC.ImportFieldFields.UpdatedAssociateId
  fullName: SuperOffice.CRM.Data.DBC.ImportFieldFields.UpdatedAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nImportField.UpdatedAssociateId: Last updated by whom\n"
  syntax:
    content: public const string UpdatedAssociateId = "updated_associate_id"
    return:
      type: System.String
    content.vb: Public Const UpdatedAssociateId As String = "updated_associate_id"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.ImportFieldFields.UpdatedCount
  commentId: F:SuperOffice.CRM.Data.DBC.ImportFieldFields.UpdatedCount
  id: UpdatedCount
  parent: SuperOffice.CRM.Data.DBC.ImportFieldFields
  langs:
  - csharp
  - vb
  name: UpdatedCount
  nameWithType: DBC.ImportFieldFields.UpdatedCount
  fullName: SuperOffice.CRM.Data.DBC.ImportFieldFields.UpdatedCount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nImportField.UpdatedCount: Number of updates made to this record\n"
  syntax:
    content: public const string UpdatedCount = "updatedCount"
    return:
      type: System.String
    content.vb: Public Const UpdatedCount As String = "updatedCount"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.ImportFieldFields.IsBuiltin
  commentId: F:SuperOffice.CRM.Data.DBC.ImportFieldFields.IsBuiltin
  id: IsBuiltin
  parent: SuperOffice.CRM.Data.DBC.ImportFieldFields
  langs:
  - csharp
  - vb
  name: IsBuiltin
  nameWithType: DBC.ImportFieldFields.IsBuiltin
  fullName: SuperOffice.CRM.Data.DBC.ImportFieldFields.IsBuiltin
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nImportField.IsBuiltin: 1 = This row populated and maintained by SuperOffice\n"
  syntax:
    content: public const string IsBuiltin = "isBuiltin"
    return:
      type: System.String
    content.vb: Public Const IsBuiltin As String = "isBuiltin"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
