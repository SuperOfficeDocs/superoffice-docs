### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
  commentId: T:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
  id: DefaultBatchTaskInitializer
  parent: SuperOffice.CRM.BatchProcessing
  children:
  - SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.#ctor(SuperOffice.CRM.BatchProcessing.IBatchTaskFactory,SuperOffice.CRM.BatchProcessing.IBatchData)
  - SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer._batchData
  - SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInitAsync(SuperOffice.CRM.Rows.BatchTaskRow)
  - SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNowAsync(System.Int32,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DefaultBatchTaskInitializer
  nameWithType: DefaultBatchTaskInitializer
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
  type: Class
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: 'public class DefaultBatchTaskInitializer : Object, IBatchTaskInitializer'
    content.vb: >-
      Public Class DefaultBatchTaskInitializer
          Inherits Object
          Implements IBatchTaskInitializer
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer
  extensionMethods:
  - SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.EnumUtil.MapEnums``2
  - SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer._batchData
  commentId: F:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer._batchData
  id: _batchData
  parent: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
  langs:
  - csharp
  - vb
  name: _batchData
  nameWithType: DefaultBatchTaskInitializer._batchData
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer._batchData
  type: Field
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: protected readonly IBatchData _batchData
    return:
      type: SuperOffice.CRM.BatchProcessing.IBatchData
    content.vb: Protected ReadOnly _batchData As IBatchData
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.#ctor(SuperOffice.CRM.BatchProcessing.IBatchTaskFactory,SuperOffice.CRM.BatchProcessing.IBatchData)
  commentId: M:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.#ctor(SuperOffice.CRM.BatchProcessing.IBatchTaskFactory,SuperOffice.CRM.BatchProcessing.IBatchData)
  id: '#ctor(SuperOffice.CRM.BatchProcessing.IBatchTaskFactory,SuperOffice.CRM.BatchProcessing.IBatchData)'
  parent: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
  langs:
  - csharp
  - vb
  name: DefaultBatchTaskInitializer(IBatchTaskFactory, IBatchData)
  nameWithType: DefaultBatchTaskInitializer.DefaultBatchTaskInitializer(IBatchTaskFactory, IBatchData)
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.DefaultBatchTaskInitializer(SuperOffice.CRM.BatchProcessing.IBatchTaskFactory, SuperOffice.CRM.BatchProcessing.IBatchData)
  type: Constructor
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: public DefaultBatchTaskInitializer(IBatchTaskFactory batchTaskFactory, IBatchData batchData)
    parameters:
    - id: batchTaskFactory
      type: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
    - id: batchData
      type: SuperOffice.CRM.BatchProcessing.IBatchData
    content.vb: Public Sub New(batchTaskFactory As IBatchTaskFactory, batchData As IBatchData)
  overload: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInitAsync(SuperOffice.CRM.Rows.BatchTaskRow)
  commentId: M:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInitAsync(SuperOffice.CRM.Rows.BatchTaskRow)
  id: SaveAndInitAsync(SuperOffice.CRM.Rows.BatchTaskRow)
  parent: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
  langs:
  - csharp
  - vb
  name: SaveAndInitAsync(BatchTaskRow)
  nameWithType: DefaultBatchTaskInitializer.SaveAndInitAsync(BatchTaskRow)
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInitAsync(SuperOffice.CRM.Rows.BatchTaskRow)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: public virtual Task SaveAndInitAsync(BatchTaskRow row)
    parameters:
    - id: row
      type: SuperOffice.CRM.Rows.BatchTaskRow
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function SaveAndInitAsync(row As BatchTaskRow) As Task
  overload: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInitAsync*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInitAsync(SuperOffice.CRM.Rows.BatchTaskRow)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNowAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNowAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: StartNowAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
  langs:
  - csharp
  - vb
  name: StartNowAsync(Int32, String, CancellationToken)
  nameWithType: DefaultBatchTaskInitializer.StartNowAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNowAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nStarts the batch task in a separate thread \n"
  syntax:
    content: protected virtual Task StartNowAsync(int id, string description, CancellationToken cancellationToken = null)
    parameters:
    - id: id
      type: System.Int32
    - id: description
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overridable Function StartNowAsync(id As Integer, description As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNowAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: SuperOffice.CRM.BatchProcessing
  commentId: N:SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: SuperOffice.CRM.BatchProcessing
  nameWithType: SuperOffice.CRM.BatchProcessing
  fullName: SuperOffice.CRM.BatchProcessing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer
  commentId: T:SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer
  parent: SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: IBatchTaskInitializer
  nameWithType: IBatchTaskInitializer
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<DefaultBatchTaskInitializer, To>()
  nameWithType: EnumUtil.MapEnums<DefaultBatchTaskInitializer, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of DefaultBatchTaskInitializer, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To)()
  name.vb: MapEnums(Of DefaultBatchTaskInitializer, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<DefaultBatchTaskInitializer, To>
    nameWithType: EnumUtil.MapEnums<DefaultBatchTaskInitializer, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of DefaultBatchTaskInitializer, To)
    nameWithType: EnumUtil.MapEnums(Of DefaultBatchTaskInitializer, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<DefaultBatchTaskInitializer, To>()
  nameWithType: Converters.MapEnums<DefaultBatchTaskInitializer, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To>()
  nameWithType.vb: Converters.MapEnums(Of DefaultBatchTaskInitializer, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To)()
  name.vb: MapEnums(Of DefaultBatchTaskInitializer, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<DefaultBatchTaskInitializer, To>
    nameWithType: Converters.MapEnums<DefaultBatchTaskInitializer, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of DefaultBatchTaskInitializer, To)
    nameWithType: Converters.MapEnums(Of DefaultBatchTaskInitializer, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.BatchProcessing.IBatchData
  commentId: T:SuperOffice.CRM.BatchProcessing.IBatchData
  parent: SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: IBatchData
  nameWithType: IBatchData
  fullName: SuperOffice.CRM.BatchProcessing.IBatchData
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.#ctor*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.#ctor
  isExternal: true
  name: DefaultBatchTaskInitializer
  nameWithType: DefaultBatchTaskInitializer.DefaultBatchTaskInitializer
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.DefaultBatchTaskInitializer
- uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
  commentId: T:SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
  parent: SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: IBatchTaskFactory
  nameWithType: IBatchTaskFactory
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInitAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInitAsync
  isExternal: true
  name: SaveAndInitAsync
  nameWithType: DefaultBatchTaskInitializer.SaveAndInitAsync
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInitAsync
- uid: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInitAsync(SuperOffice.CRM.Rows.BatchTaskRow)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInitAsync(SuperOffice.CRM.Rows.BatchTaskRow)
  parent: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer
  isExternal: true
  name: SaveAndInitAsync(BatchTaskRow)
  nameWithType: IBatchTaskInitializer.SaveAndInitAsync(BatchTaskRow)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInitAsync(SuperOffice.CRM.Rows.BatchTaskRow)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInitAsync(SuperOffice.CRM.Rows.BatchTaskRow)
    name: SaveAndInitAsync
    nameWithType: IBatchTaskInitializer.SaveAndInitAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInitAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.BatchTaskRow
    name: BatchTaskRow
    nameWithType: BatchTaskRow
    fullName: SuperOffice.CRM.Rows.BatchTaskRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInitAsync(SuperOffice.CRM.Rows.BatchTaskRow)
    name: SaveAndInitAsync
    nameWithType: IBatchTaskInitializer.SaveAndInitAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInitAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.BatchTaskRow
    name: BatchTaskRow
    nameWithType: BatchTaskRow
    fullName: SuperOffice.CRM.Rows.BatchTaskRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.BatchTaskRow
  commentId: T:SuperOffice.CRM.Rows.BatchTaskRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: BatchTaskRow
  nameWithType: BatchTaskRow
  fullName: SuperOffice.CRM.Rows.BatchTaskRow
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNowAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNowAsync
  isExternal: true
  name: StartNowAsync
  nameWithType: DefaultBatchTaskInitializer.StartNowAsync
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNowAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
