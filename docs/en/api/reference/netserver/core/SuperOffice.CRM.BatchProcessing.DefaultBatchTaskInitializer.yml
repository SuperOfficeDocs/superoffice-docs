### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
  commentId: T:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
  id: DefaultBatchTaskInitializer
  parent: SuperOffice.CRM.BatchProcessing
  children:
  - SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.#ctor
  - SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInit(SuperOffice.CRM.Rows.BatchTaskRow)
  - SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartAndForgetBatchTask(SuperOffice.Threading.AsyncContext,SuperOffice.CRM.Services.BatchTaskInfo)
  - SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNow(System.Int32,System.String)
  langs:
  - csharp
  - vb
  name: DefaultBatchTaskInitializer
  nameWithType: DefaultBatchTaskInitializer
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
  type: Class
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: 'public class DefaultBatchTaskInitializer : Object, IBatchTaskInitializer'
    content.vb: >-
      Public Class DefaultBatchTaskInitializer
          Inherits Object
          Implements IBatchTaskInitializer
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer
  extensionMethods:
  - SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.EnumUtil.MapEnums``2
  - SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer)
  - SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInit(SuperOffice.CRM.Rows.BatchTaskRow)
  commentId: M:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInit(SuperOffice.CRM.Rows.BatchTaskRow)
  id: SaveAndInit(SuperOffice.CRM.Rows.BatchTaskRow)
  parent: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
  langs:
  - csharp
  - vb
  name: SaveAndInit(BatchTaskRow)
  nameWithType: DefaultBatchTaskInitializer.SaveAndInit(BatchTaskRow)
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInit(SuperOffice.CRM.Rows.BatchTaskRow)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: public virtual void SaveAndInit(BatchTaskRow row)
    parameters:
    - id: row
      type: SuperOffice.CRM.Rows.BatchTaskRow
    content.vb: Public Overridable Sub SaveAndInit(row As BatchTaskRow)
  overload: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInit*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInit(SuperOffice.CRM.Rows.BatchTaskRow)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNow(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNow(System.Int32,System.String)
  id: StartNow(System.Int32,System.String)
  parent: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
  langs:
  - csharp
  - vb
  name: StartNow(Int32, String)
  nameWithType: DefaultBatchTaskInitializer.StartNow(Int32, String)
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNow(System.Int32, System.String)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nStarts the batch task in a separate thread \n"
  syntax:
    content: protected virtual void StartNow(int id, string description)
    parameters:
    - id: id
      type: System.Int32
    - id: description
      type: System.String
    content.vb: Protected Overridable Sub StartNow(id As Integer, description As String)
  overload: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNow*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartAndForgetBatchTask(SuperOffice.Threading.AsyncContext,SuperOffice.CRM.Services.BatchTaskInfo)
  commentId: M:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartAndForgetBatchTask(SuperOffice.Threading.AsyncContext,SuperOffice.CRM.Services.BatchTaskInfo)
  id: StartAndForgetBatchTask(SuperOffice.Threading.AsyncContext,SuperOffice.CRM.Services.BatchTaskInfo)
  parent: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
  langs:
  - csharp
  - vb
  name: StartAndForgetBatchTask(AsyncContext, BatchTaskInfo)
  nameWithType: DefaultBatchTaskInitializer.StartAndForgetBatchTask(AsyncContext, BatchTaskInfo)
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartAndForgetBatchTask(SuperOffice.Threading.AsyncContext, SuperOffice.CRM.Services.BatchTaskInfo)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nThreadproc for spawning batch tasks\n"
  syntax:
    content: protected virtual void StartAndForgetBatchTask(AsyncContext cn, BatchTaskInfo batchTaskInfo)
    parameters:
    - id: cn
      type: SuperOffice.Threading.AsyncContext
    - id: batchTaskInfo
      type: SuperOffice.CRM.Services.BatchTaskInfo
    content.vb: Protected Overridable Sub StartAndForgetBatchTask(cn As AsyncContext, batchTaskInfo As BatchTaskInfo)
  overload: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartAndForgetBatchTask*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.#ctor
  commentId: M:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
  langs:
  - csharp
  - vb
  name: DefaultBatchTaskInitializer()
  nameWithType: DefaultBatchTaskInitializer.DefaultBatchTaskInitializer()
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.DefaultBatchTaskInitializer()
  type: Constructor
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: public DefaultBatchTaskInitializer()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.BatchProcessing
  commentId: N:SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: SuperOffice.CRM.BatchProcessing
  nameWithType: SuperOffice.CRM.BatchProcessing
  fullName: SuperOffice.CRM.BatchProcessing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer
  commentId: T:SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer
  parent: SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: IBatchTaskInitializer
  nameWithType: IBatchTaskInitializer
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<DefaultBatchTaskInitializer, To>()
  nameWithType: EnumUtil.MapEnums<DefaultBatchTaskInitializer, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of DefaultBatchTaskInitializer, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To)()
  name.vb: MapEnums(Of DefaultBatchTaskInitializer, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<DefaultBatchTaskInitializer, To>
    nameWithType: EnumUtil.MapEnums<DefaultBatchTaskInitializer, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of DefaultBatchTaskInitializer, To)
    nameWithType: EnumUtil.MapEnums(Of DefaultBatchTaskInitializer, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<DefaultBatchTaskInitializer>(DefaultBatchTaskInitializer)
  nameWithType: ObjectExtensions.AssignByReflection<DefaultBatchTaskInitializer>(DefaultBatchTaskInitializer)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer>(SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of DefaultBatchTaskInitializer)(DefaultBatchTaskInitializer)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer)(SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer)
  name.vb: AssignByReflection(Of DefaultBatchTaskInitializer)(DefaultBatchTaskInitializer)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<DefaultBatchTaskInitializer>
    nameWithType: ObjectExtensions.AssignByReflection<DefaultBatchTaskInitializer>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
    name: DefaultBatchTaskInitializer
    nameWithType: DefaultBatchTaskInitializer
    fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of DefaultBatchTaskInitializer)
    nameWithType: ObjectExtensions.AssignByReflection(Of DefaultBatchTaskInitializer)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
    name: DefaultBatchTaskInitializer
    nameWithType: DefaultBatchTaskInitializer
    fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<DefaultBatchTaskInitializer>()
  nameWithType: ObjectExtensions.GraphCopy<DefaultBatchTaskInitializer>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of DefaultBatchTaskInitializer)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer)()
  name.vb: GraphCopy(Of DefaultBatchTaskInitializer)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<DefaultBatchTaskInitializer>
    nameWithType: ObjectExtensions.GraphCopy<DefaultBatchTaskInitializer>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of DefaultBatchTaskInitializer)
    nameWithType: ObjectExtensions.GraphCopy(Of DefaultBatchTaskInitializer)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<DefaultBatchTaskInitializer, To>()
  nameWithType: Converters.MapEnums<DefaultBatchTaskInitializer, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To>()
  nameWithType.vb: Converters.MapEnums(Of DefaultBatchTaskInitializer, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To)()
  name.vb: MapEnums(Of DefaultBatchTaskInitializer, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<DefaultBatchTaskInitializer, To>
    nameWithType: Converters.MapEnums<DefaultBatchTaskInitializer, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of DefaultBatchTaskInitializer, To)
    nameWithType: Converters.MapEnums(Of DefaultBatchTaskInitializer, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInit*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInit
  isExternal: true
  name: SaveAndInit
  nameWithType: DefaultBatchTaskInitializer.SaveAndInit
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.SaveAndInit
- uid: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInit(SuperOffice.CRM.Rows.BatchTaskRow)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInit(SuperOffice.CRM.Rows.BatchTaskRow)
  parent: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer
  isExternal: true
  name: SaveAndInit(BatchTaskRow)
  nameWithType: IBatchTaskInitializer.SaveAndInit(BatchTaskRow)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInit(SuperOffice.CRM.Rows.BatchTaskRow)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInit(SuperOffice.CRM.Rows.BatchTaskRow)
    name: SaveAndInit
    nameWithType: IBatchTaskInitializer.SaveAndInit
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.BatchTaskRow
    name: BatchTaskRow
    nameWithType: BatchTaskRow
    fullName: SuperOffice.CRM.Rows.BatchTaskRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInit(SuperOffice.CRM.Rows.BatchTaskRow)
    name: SaveAndInit
    nameWithType: IBatchTaskInitializer.SaveAndInit
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskInitializer.SaveAndInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.BatchTaskRow
    name: BatchTaskRow
    nameWithType: BatchTaskRow
    fullName: SuperOffice.CRM.Rows.BatchTaskRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.BatchTaskRow
  commentId: T:SuperOffice.CRM.Rows.BatchTaskRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: BatchTaskRow
  nameWithType: BatchTaskRow
  fullName: SuperOffice.CRM.Rows.BatchTaskRow
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNow*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNow
  isExternal: true
  name: StartNow
  nameWithType: DefaultBatchTaskInitializer.StartNow
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartNow
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartAndForgetBatchTask*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartAndForgetBatchTask
  isExternal: true
  name: StartAndForgetBatchTask
  nameWithType: DefaultBatchTaskInitializer.StartAndForgetBatchTask
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.StartAndForgetBatchTask
- uid: SuperOffice.Threading.AsyncContext
  commentId: T:SuperOffice.Threading.AsyncContext
  parent: SuperOffice.Threading
  isExternal: true
  name: AsyncContext
  nameWithType: AsyncContext
  fullName: SuperOffice.Threading.AsyncContext
- uid: SuperOffice.CRM.Services.BatchTaskInfo
  isExternal: true
  name: BatchTaskInfo
  nameWithType: BatchTaskInfo
  fullName: SuperOffice.CRM.Services.BatchTaskInfo
- uid: SuperOffice.Threading
  commentId: N:SuperOffice.Threading
  isExternal: true
  name: SuperOffice.Threading
  nameWithType: SuperOffice.Threading
  fullName: SuperOffice.Threading
- uid: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.#ctor*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.#ctor
  isExternal: true
  name: DefaultBatchTaskInitializer
  nameWithType: DefaultBatchTaskInitializer.DefaultBatchTaskInitializer
  fullName: SuperOffice.CRM.BatchProcessing.DefaultBatchTaskInitializer.DefaultBatchTaskInitializer
