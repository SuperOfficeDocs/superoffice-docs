### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  id: SoDataReader
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.SoDataReader.BeginIgnoreSentryCheck
  - SuperOffice.Data.SoDataReader.Close
  - SuperOffice.Data.SoDataReader.DbRowsRead
  - SuperOffice.Data.SoDataReader.Depth
  - SuperOffice.Data.SoDataReader.Dispose
  - SuperOffice.Data.SoDataReader.EndIgnoreSentryCheck
  - SuperOffice.Data.SoDataReader.FieldCount
  - SuperOffice.Data.SoDataReader.GetBoolean(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetBoolean(System.Int32)
  - SuperOffice.Data.SoDataReader.GetBoolean(System.String)
  - SuperOffice.Data.SoDataReader.GetByte(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetByte(System.Int32)
  - SuperOffice.Data.SoDataReader.GetByte(System.String)
  - SuperOffice.Data.SoDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - SuperOffice.Data.SoDataReader.GetChar(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetChar(System.Int32)
  - SuperOffice.Data.SoDataReader.GetChar(System.String)
  - SuperOffice.Data.SoDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - SuperOffice.Data.SoDataReader.GetData(System.Int32)
  - SuperOffice.Data.SoDataReader.GetDataTypeName(System.Int32)
  - SuperOffice.Data.SoDataReader.GetDateTime(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetDateTime(System.Int32)
  - SuperOffice.Data.SoDataReader.GetDateTime(System.String)
  - SuperOffice.Data.SoDataReader.GetDecimal(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetDecimal(System.Int32)
  - SuperOffice.Data.SoDataReader.GetDecimal(System.String)
  - SuperOffice.Data.SoDataReader.GetDouble(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetDouble(System.Int32)
  - SuperOffice.Data.SoDataReader.GetDouble(System.String)
  - SuperOffice.Data.SoDataReader.GetEnum``1(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetEnum``1(System.Int32)
  - SuperOffice.Data.SoDataReader.GetEnum``1(System.String)
  - SuperOffice.Data.SoDataReader.GetFieldInfo(System.Int32)
  - SuperOffice.Data.SoDataReader.GetFieldInfo(System.String)
  - SuperOffice.Data.SoDataReader.GetFieldProperty(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetFieldProperty(System.Int32)
  - SuperOffice.Data.SoDataReader.GetFieldProperty(System.String)
  - SuperOffice.Data.SoDataReader.GetFieldType(System.Int32)
  - SuperOffice.Data.SoDataReader.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetFloat(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetFloat(System.Int32)
  - SuperOffice.Data.SoDataReader.GetFloat(System.String)
  - SuperOffice.Data.SoDataReader.GetGuid(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetGuid(System.Int32)
  - SuperOffice.Data.SoDataReader.GetGuid(System.String)
  - SuperOffice.Data.SoDataReader.GetIndexOfField(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetInt16(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetInt16(System.Int32)
  - SuperOffice.Data.SoDataReader.GetInt16(System.String)
  - SuperOffice.Data.SoDataReader.GetInt32(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetInt32(System.Int32)
  - SuperOffice.Data.SoDataReader.GetInt32(System.String)
  - SuperOffice.Data.SoDataReader.GetInt32Array(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetInt32Array(System.Int32)
  - SuperOffice.Data.SoDataReader.GetInt32Array(System.String)
  - SuperOffice.Data.SoDataReader.GetInt64(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetInt64(System.Int32)
  - SuperOffice.Data.SoDataReader.GetInt64(System.String)
  - SuperOffice.Data.SoDataReader.GetKnownFields
  - SuperOffice.Data.SoDataReader.GetName(System.Int32)
  - SuperOffice.Data.SoDataReader.GetOrdinal(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetOrdinal(System.String)
  - SuperOffice.Data.SoDataReader.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetRelations(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.Dictionary.SoTable)
  - SuperOffice.Data.SoDataReader.GetSchemaTable
  - SuperOffice.Data.SoDataReader.GetString(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetString(System.Int32)
  - SuperOffice.Data.SoDataReader.GetString(System.String)
  - SuperOffice.Data.SoDataReader.GetValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.GetValue(SuperOffice.Data.SQL.FieldInfo,SuperOffice.CRM.Security.FieldProperty@)
  - SuperOffice.Data.SoDataReader.GetValue(System.Int32)
  - SuperOffice.Data.SoDataReader.GetValue(System.Int32,SuperOffice.CRM.Security.FieldProperty@)
  - SuperOffice.Data.SoDataReader.GetValue(System.String)
  - SuperOffice.Data.SoDataReader.GetValue(System.String,SuperOffice.CRM.Security.FieldProperty@)
  - SuperOffice.Data.SoDataReader.GetValues(System.Object[])
  - SuperOffice.Data.SoDataReader.IsAutoClose
  - SuperOffice.Data.SoDataReader.IsClosed
  - SuperOffice.Data.SoDataReader.IsDBNull(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.IsDBNull(System.Int32)
  - SuperOffice.Data.SoDataReader.IsDBNull(System.String)
  - SuperOffice.Data.SoDataReader.IsDBNullAsync(SuperOffice.Data.SQL.FieldInfo,System.Threading.CancellationToken)
  - SuperOffice.Data.SoDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Data.SoDataReader.IsDBNullAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.Data.SoDataReader.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.IsSentryIgnored
  - SuperOffice.Data.SoDataReader.Item(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.SoDataReader.Item(System.Int32)
  - SuperOffice.Data.SoDataReader.Item(System.String)
  - SuperOffice.Data.SoDataReader.NextResult
  - SuperOffice.Data.SoDataReader.NextResultAsync(System.Threading.CancellationToken)
  - SuperOffice.Data.SoDataReader.Read
  - SuperOffice.Data.SoDataReader.ReadAsync(System.Threading.CancellationToken)
  - SuperOffice.Data.SoDataReader.Reader
  - SuperOffice.Data.SoDataReader.RecordsAffected
  - SuperOffice.Data.SoDataReader.Sentries
  - SuperOffice.Data.SoDataReader.SetPreAcceptDelegate(System.Func{SuperOffice.Data.SoDataReader,System.Boolean})
  - SuperOffice.Data.SoDataReader.ToString
  - SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Boolean@)
  - SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.DateTime@)
  - SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Double@)
  - SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Int16@)
  - SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Int32@)
  - SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.String@)
  langs:
  - csharp
  - vb
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
  type: Class
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Implements the IDataReader interface.
  example: []
  syntax:
    content: 'public sealed class SoDataReader : MarshalByRefObject, IDataReader, IDataRecord, IDisposable, ISoDataLookup, ISentryIgnorable, IEnumerable, ISoDataRecord'
    content.vb: Public NotInheritable Class SoDataReader Inherits MarshalByRefObject Implements IDataReader, IDataRecord, IDisposable, ISoDataLookup, ISentryIgnorable, IEnumerable, ISoDataRecord
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Data.IDataReader
  - System.Data.IDataRecord
  - System.IDisposable
  - SuperOffice.CRM.Security.ISoDataLookup
  - SuperOffice.CRM.Security.ISentryIgnorable
  - System.Collections.IEnumerable
  - SuperOffice.Data.ISoDataRecord
  inheritedMembers:
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  extensionMethods:
  - SuperOffice.Data.SoDataReader.EnumUtil.MapEnums``2
  - SuperOffice.Data.SoDataReader.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.Data.SoDataReader.SetPreAcceptDelegate(System.Func{SuperOffice.Data.SoDataReader,System.Boolean})
  commentId: M:SuperOffice.Data.SoDataReader.SetPreAcceptDelegate(System.Func{SuperOffice.Data.SoDataReader,System.Boolean})
  id: SetPreAcceptDelegate(System.Func{SuperOffice.Data.SoDataReader,System.Boolean})
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: SetPreAcceptDelegate(Func<SoDataReader, bool>)
  nameWithType: SoDataReader.SetPreAcceptDelegate(Func<SoDataReader, bool>)
  fullName: SuperOffice.Data.SoDataReader.SetPreAcceptDelegate(System.Func<SuperOffice.Data.SoDataReader, bool>)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Set a callback method, that will be called BEFORE sentry calculations are performed for a row. If the callback

    returns false, the row is skipped and does not count towards the row total
  example: []
  syntax:
    content: public void SetPreAcceptDelegate(Func<SoDataReader, bool> preAcceptCallback)
    parameters:
    - id: preAcceptCallback
      type: System.Func{SuperOffice.Data.SoDataReader,System.Boolean}
      description: ''
    content.vb: Public Sub SetPreAcceptDelegate(preAcceptCallback As Func(Of SoDataReader, Boolean))
  overload: SuperOffice.Data.SoDataReader.SetPreAcceptDelegate*
  nameWithType.vb: SoDataReader.SetPreAcceptDelegate(Func(Of SoDataReader, Boolean))
  fullName.vb: SuperOffice.Data.SoDataReader.SetPreAcceptDelegate(System.Func(Of SuperOffice.Data.SoDataReader, Boolean))
  name.vb: SetPreAcceptDelegate(Func(Of SoDataReader, Boolean))
- uid: SuperOffice.Data.SoDataReader.GetRelations(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.Dictionary.SoTable)
  commentId: M:SuperOffice.Data.SoDataReader.GetRelations(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.Dictionary.SoTable)
  id: GetRelations(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.Dictionary.SoTable)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetRelations(TableInfo, SoTable)
  nameWithType: SoDataReader.GetRelations(TableInfo, SoTable)
  fullName: SuperOffice.Data.SoDataReader.GetRelations(SuperOffice.Data.SQL.TableInfo, SuperOffice.Data.Dictionary.SoTable)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public RelationInfo[] GetRelations(TableInfo mainTable, SoTable relatedTable)
    parameters:
    - id: mainTable
      type: SuperOffice.Data.SQL.TableInfo
    - id: relatedTable
      type: SuperOffice.Data.Dictionary.SoTable
    return:
      type: SuperOffice.Data.SQL.RelationInfo[]
    content.vb: Public Function GetRelations(mainTable As TableInfo, relatedTable As SoTable) As RelationInfo()
  overload: SuperOffice.Data.SoDataReader.GetRelations*
- uid: SuperOffice.Data.SoDataReader.Close
  commentId: M:SuperOffice.Data.SoDataReader.Close
  id: Close
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: SoDataReader.Close()
  fullName: SuperOffice.Data.SoDataReader.Close()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Closes the <xref href="System.Data.IDataReader" data-throw-if-not-resolved="false"></xref> 0bject.
  example: []
  syntax:
    content: public void Close()
    content.vb: Public Sub Close()
  overload: SuperOffice.Data.SoDataReader.Close*
  implements:
  - System.Data.IDataReader.Close
- uid: SuperOffice.Data.SoDataReader.NextResultAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.SoDataReader.NextResultAsync(System.Threading.CancellationToken)
  id: NextResultAsync(System.Threading.CancellationToken)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: NextResultAsync(CancellationToken)
  nameWithType: SoDataReader.NextResultAsync(CancellationToken)
  fullName: SuperOffice.Data.SoDataReader.NextResultAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Advances the data reader to the next result, when reading the results of batch SQL statements.
  example: []
  syntax:
    content: >-
      [CreateSyncVersion(OmitNullableDirective = true)]

      public Task<bool> NextResultAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: true if there are more rows; otherwise, false.
    content.vb: >-
      <CreateSyncVersion(OmitNullableDirective:=True)>

      Public Function NextResultAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.Data.SoDataReader.NextResultAsync*
  attributes:
  - type: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute
    ctor: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute.#ctor
    arguments: []
    namedArguments:
    - name: OmitNullableDirective
      type: System.Boolean
      value: true
- uid: SuperOffice.Data.SoDataReader.ReadAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.SoDataReader.ReadAsync(System.Threading.CancellationToken)
  id: ReadAsync(System.Threading.CancellationToken)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: ReadAsync(CancellationToken)
  nameWithType: SoDataReader.ReadAsync(CancellationToken)
  fullName: SuperOffice.Data.SoDataReader.ReadAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Reads the first/next row of data into the reader, discarding the previous row.

    The values are accessible through the GetXxx methods on the reader object.

    <p></p>

    If the Select query has specified a nonzero DbRowsToSkip, this skipping will either be

    done by database (but so far only Sybase 9 has support for that), or done in a tight loop

    here.
  example: []
  syntax:
    content: >-
      [CreateSyncVersion(OmitNullableDirective = true)]

      public Task<bool> ReadAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the read succeeded. If there is no more data, returns false
    content.vb: >-
      <CreateSyncVersion(OmitNullableDirective:=True)>

      Public Function ReadAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.Data.SoDataReader.ReadAsync*
  attributes:
  - type: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute
    ctor: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute.#ctor
    arguments: []
    namedArguments:
    - name: OmitNullableDirective
      type: System.Boolean
      value: true
- uid: SuperOffice.Data.SoDataReader.GetSchemaTable
  commentId: M:SuperOffice.Data.SoDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetSchemaTable()
  nameWithType: SoDataReader.GetSchemaTable()
  fullName: SuperOffice.Data.SoDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Returns a <xref href="System.Data.DataTable" data-throw-if-not-resolved="false"></xref> that describes the column metadata of the <xref href="System.Data.IDataReader" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public DataTable GetSchemaTable()
    return:
      type: System.Data.DataTable
      description: A <xref href="System.Data.DataTable" data-throw-if-not-resolved="false"></xref> that describes the column metadata.
    content.vb: Public Function GetSchemaTable() As DataTable
  overload: SuperOffice.Data.SoDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Data.IDataReader" data-throw-if-not-resolved="false"></xref> is closed.
  implements:
  - System.Data.IDataReader.GetSchemaTable
- uid: SuperOffice.Data.SoDataReader.GetName(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetName(int)
  nameWithType: SoDataReader.GetName(int)
  fullName: SuperOffice.Data.SoDataReader.GetName(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Return the name of the i'th column.
  example: []
  syntax:
    content: public string GetName(int i)
    parameters:
    - id: i
      type: System.Int32
      description: 0 based index.
    return:
      type: System.String
      description: >-
        The name of the column. Usually the same as the database column name, but it

        depends on what you aliased the column as in your select statement
    content.vb: Public Function GetName(i As Integer) As String
  overload: SuperOffice.Data.SoDataReader.GetName*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: The index passed was outside the range of 0 through <xref href="System.Data.IDataRecord.FieldCount" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.Data.IDataRecord.GetName(System.Int32)
  nameWithType.vb: SoDataReader.GetName(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetName(Integer)
  name.vb: GetName(Integer)
- uid: SuperOffice.Data.SoDataReader.GetDataTypeName(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetDataTypeName(int)
  nameWithType: SoDataReader.GetDataTypeName(int)
  fullName: SuperOffice.Data.SoDataReader.GetDataTypeName(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Return the name of the datatype of the i'th column
  example: []
  syntax:
    content: public string GetDataTypeName(int i)
    parameters:
    - id: i
      type: System.Int32
      description: 0-based index.
    return:
      type: System.String
      description: 'Name of the data type in the column. for example: "int" or "varchar"'
    content.vb: Public Function GetDataTypeName(i As Integer) As String
  overload: SuperOffice.Data.SoDataReader.GetDataTypeName*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: The index passed was outside the range of 0 through <xref href="System.Data.IDataRecord.FieldCount" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.Data.IDataRecord.GetDataTypeName(System.Int32)
  nameWithType.vb: SoDataReader.GetDataTypeName(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetDataTypeName(Integer)
  name.vb: GetDataTypeName(Integer)
- uid: SuperOffice.Data.SoDataReader.GetFieldType(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetFieldType(int)
  nameWithType: SoDataReader.GetFieldType(int)
  fullName: SuperOffice.Data.SoDataReader.GetFieldType(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Return the actual Type class for the data type
  example: []
  syntax:
    content: public Type GetFieldType(int i)
    parameters:
    - id: i
      type: System.Int32
      description: 0-based index.
    return:
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> information corresponding to the type of <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that would be returned from <xref href="System.Data.IDataRecord.GetValue(System.Int32)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetFieldType(i As Integer) As Type
  overload: SuperOffice.Data.SoDataReader.GetFieldType*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: The index passed was outside the range of 0 through <xref href="System.Data.IDataRecord.FieldCount" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.Data.IDataRecord.GetFieldType(System.Int32)
  nameWithType.vb: SoDataReader.GetFieldType(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetFieldType(Integer)
  name.vb: GetFieldType(Integer)
- uid: SuperOffice.Data.SoDataReader.ToString
  commentId: M:SuperOffice.Data.SoDataReader.ToString
  id: ToString
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SoDataReader.ToString()
  fullName: SuperOffice.Data.SoDataReader.ToString()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: 'Override: Return the current row of the inner reader for debugging purposes'
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SuperOffice.Data.SoDataReader.ToString*
- uid: SuperOffice.Data.SoDataReader.GetValue(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetValue(int)
  nameWithType: SoDataReader.GetValue(int)
  fullName: SuperOffice.Data.SoDataReader.GetValue(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Return the value of the datatype.
  example: []
  syntax:
    content: public object GetValue(int i)
    parameters:
    - id: i
      type: System.Int32
      description: 0-based index
    return:
      type: System.Object
      description: >-
        A generic object. What it is depends on the type of the column. 
                    Could be an int. Could be a string. You won't know until you check GetDataTypeName
    content.vb: Public Function GetValue(i As Integer) As Object
  overload: SuperOffice.Data.SoDataReader.GetValue*
  implements:
  - System.Data.IDataRecord.GetValue(System.Int32)
  nameWithType.vb: SoDataReader.GetValue(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetValue(Integer)
  name.vb: GetValue(Integer)
- uid: SuperOffice.Data.SoDataReader.GetValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetValue(SuperOffice.Data.SQL.FieldInfo)
  id: GetValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetValue(FieldInfo)
  nameWithType: SoDataReader.GetValue(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetValue(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Return the value of the datatype.
  example: []
  syntax:
    content: public object GetValue(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Field info object identifying the desired field
    return:
      type: System.Object
      description: >-
        A generic object. What it is depends on the type of the column. 
                    Could be an int. Could be a string. You won't know until you check GetDataTypeName
    content.vb: Public Function GetValue(fieldInfo As FieldInfo) As Object
  overload: SuperOffice.Data.SoDataReader.GetValue*
  implements:
  - SuperOffice.Data.ISoDataRecord.GetValue(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetValue(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetValue(System.String)
  id: GetValue(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetValue(string)
  nameWithType: SoDataReader.GetValue(string)
  fullName: SuperOffice.Data.SoDataReader.GetValue(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Return the value of the datatype.
  example: []
  syntax:
    content: public object GetValue(string name)
    parameters:
    - id: name
      type: System.String
      description: Column name; if more than one column has this name, the first matching one is used
    return:
      type: System.Object
      description: >-
        A generic object. What it is depends on the type of the column. 
                    Could be an int. Could be a string. You won't know until you check GetDataTypeName
    content.vb: Public Function GetValue(name As String) As Object
  overload: SuperOffice.Data.SoDataReader.GetValue*
  nameWithType.vb: SoDataReader.GetValue(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetValue(String)
  name.vb: GetValue(String)
- uid: SuperOffice.Data.SoDataReader.GetValue(System.Int32,SuperOffice.CRM.Security.FieldProperty@)
  commentId: M:SuperOffice.Data.SoDataReader.GetValue(System.Int32,SuperOffice.CRM.Security.FieldProperty@)
  id: GetValue(System.Int32,SuperOffice.CRM.Security.FieldProperty@)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetValue(int, out FieldProperty)
  nameWithType: SoDataReader.GetValue(int, out FieldProperty)
  fullName: SuperOffice.Data.SoDataReader.GetValue(int, out SuperOffice.CRM.Security.FieldProperty)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public object GetValue(int i, out FieldProperty fieldProperty)
    parameters:
    - id: i
      type: System.Int32
    - id: fieldProperty
      type: SuperOffice.CRM.Security.FieldProperty
    return:
      type: System.Object
    content.vb: Public Function GetValue(i As Integer, fieldProperty As FieldProperty) As Object
  overload: SuperOffice.Data.SoDataReader.GetValue*
  nameWithType.vb: SoDataReader.GetValue(Integer, FieldProperty)
  fullName.vb: SuperOffice.Data.SoDataReader.GetValue(Integer, SuperOffice.CRM.Security.FieldProperty)
  name.vb: GetValue(Integer, FieldProperty)
- uid: SuperOffice.Data.SoDataReader.GetValue(System.String,SuperOffice.CRM.Security.FieldProperty@)
  commentId: M:SuperOffice.Data.SoDataReader.GetValue(System.String,SuperOffice.CRM.Security.FieldProperty@)
  id: GetValue(System.String,SuperOffice.CRM.Security.FieldProperty@)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetValue(string, out FieldProperty)
  nameWithType: SoDataReader.GetValue(string, out FieldProperty)
  fullName: SuperOffice.Data.SoDataReader.GetValue(string, out SuperOffice.CRM.Security.FieldProperty)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public object GetValue(string name, out FieldProperty fieldProperty)
    parameters:
    - id: name
      type: System.String
    - id: fieldProperty
      type: SuperOffice.CRM.Security.FieldProperty
    return:
      type: System.Object
    content.vb: Public Function GetValue(name As String, fieldProperty As FieldProperty) As Object
  overload: SuperOffice.Data.SoDataReader.GetValue*
  nameWithType.vb: SoDataReader.GetValue(String, FieldProperty)
  fullName.vb: SuperOffice.Data.SoDataReader.GetValue(String, SuperOffice.CRM.Security.FieldProperty)
  name.vb: GetValue(String, FieldProperty)
- uid: SuperOffice.Data.SoDataReader.GetValue(SuperOffice.Data.SQL.FieldInfo,SuperOffice.CRM.Security.FieldProperty@)
  commentId: M:SuperOffice.Data.SoDataReader.GetValue(SuperOffice.Data.SQL.FieldInfo,SuperOffice.CRM.Security.FieldProperty@)
  id: GetValue(SuperOffice.Data.SQL.FieldInfo,SuperOffice.CRM.Security.FieldProperty@)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetValue(FieldInfo, out FieldProperty)
  nameWithType: SoDataReader.GetValue(FieldInfo, out FieldProperty)
  fullName: SuperOffice.Data.SoDataReader.GetValue(SuperOffice.Data.SQL.FieldInfo, out SuperOffice.CRM.Security.FieldProperty)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public object GetValue(FieldInfo field, out FieldProperty fieldProperty)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
    - id: fieldProperty
      type: SuperOffice.CRM.Security.FieldProperty
    return:
      type: System.Object
    content.vb: Public Function GetValue(field As FieldInfo, fieldProperty As FieldProperty) As Object
  overload: SuperOffice.Data.SoDataReader.GetValue*
  nameWithType.vb: SoDataReader.GetValue(FieldInfo, FieldProperty)
  fullName.vb: SuperOffice.Data.SoDataReader.GetValue(SuperOffice.Data.SQL.FieldInfo, SuperOffice.CRM.Security.FieldProperty)
  name.vb: GetValue(FieldInfo, FieldProperty)
- uid: SuperOffice.Data.SoDataReader.GetFieldProperty(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetFieldProperty(System.Int32)
  id: GetFieldProperty(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetFieldProperty(int)
  nameWithType: SoDataReader.GetFieldProperty(int)
  fullName: SuperOffice.Data.SoDataReader.GetFieldProperty(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public FieldProperty GetFieldProperty(int i)
    parameters:
    - id: i
      type: System.Int32
    return:
      type: SuperOffice.CRM.Security.FieldProperty
    content.vb: Public Function GetFieldProperty(i As Integer) As FieldProperty
  overload: SuperOffice.Data.SoDataReader.GetFieldProperty*
  nameWithType.vb: SoDataReader.GetFieldProperty(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetFieldProperty(Integer)
  name.vb: GetFieldProperty(Integer)
- uid: SuperOffice.Data.SoDataReader.GetFieldProperty(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetFieldProperty(System.String)
  id: GetFieldProperty(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetFieldProperty(string)
  nameWithType: SoDataReader.GetFieldProperty(string)
  fullName: SuperOffice.Data.SoDataReader.GetFieldProperty(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public FieldProperty GetFieldProperty(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: SuperOffice.CRM.Security.FieldProperty
    content.vb: Public Function GetFieldProperty(name As String) As FieldProperty
  overload: SuperOffice.Data.SoDataReader.GetFieldProperty*
  nameWithType.vb: SoDataReader.GetFieldProperty(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetFieldProperty(String)
  name.vb: GetFieldProperty(String)
- uid: SuperOffice.Data.SoDataReader.GetFieldProperty(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetFieldProperty(SuperOffice.Data.SQL.FieldInfo)
  id: GetFieldProperty(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetFieldProperty(FieldInfo)
  nameWithType: SoDataReader.GetFieldProperty(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetFieldProperty(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public FieldProperty GetFieldProperty(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
    return:
      type: SuperOffice.CRM.Security.FieldProperty
    content.vb: Public Function GetFieldProperty(field As FieldInfo) As FieldProperty
  overload: SuperOffice.Data.SoDataReader.GetFieldProperty*
- uid: SuperOffice.Data.SoDataReader.GetFieldInfo(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetFieldInfo(System.Int32)
  id: GetFieldInfo(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetFieldInfo(int)
  nameWithType: SoDataReader.GetFieldInfo(int)
  fullName: SuperOffice.Data.SoDataReader.GetFieldInfo(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Obtain the FieldInfo used from the given Index.
  example: []
  syntax:
    content: public FieldInfo GetFieldInfo(int i)
    parameters:
    - id: i
      type: System.Int32
      description: ''
    return:
      type: SuperOffice.Data.SQL.FieldInfo
      description: Field info from the given index.  Null is returned if there is no valid FieldInfo at the given index.
    content.vb: Public Function GetFieldInfo(i As Integer) As FieldInfo
  overload: SuperOffice.Data.SoDataReader.GetFieldInfo*
  nameWithType.vb: SoDataReader.GetFieldInfo(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetFieldInfo(Integer)
  name.vb: GetFieldInfo(Integer)
- uid: SuperOffice.Data.SoDataReader.GetFieldInfo(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetFieldInfo(System.String)
  id: GetFieldInfo(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetFieldInfo(string)
  nameWithType: SoDataReader.GetFieldInfo(string)
  fullName: SuperOffice.Data.SoDataReader.GetFieldInfo(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Obtain the FieldInfo used at the field with the given name.
  example: []
  syntax:
    content: public FieldInfo GetFieldInfo(string name)
    parameters:
    - id: name
      type: System.String
      description: Name, or alias, of the returned field.
    return:
      type: SuperOffice.Data.SQL.FieldInfo
      description: Field info for the given name.  Null is returned if there is no valid FieldInfo for the field name.
    content.vb: Public Function GetFieldInfo(name As String) As FieldInfo
  overload: SuperOffice.Data.SoDataReader.GetFieldInfo*
  nameWithType.vb: SoDataReader.GetFieldInfo(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetFieldInfo(String)
  name.vb: GetFieldInfo(String)
- uid: SuperOffice.Data.SoDataReader.GetValues(System.Object[])
  commentId: M:SuperOffice.Data.SoDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetValues(object[])
  nameWithType: SoDataReader.GetValues(object[])
  fullName: SuperOffice.Data.SoDataReader.GetValues(object[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Copy all the values of the current row into the values parameter.
  remarks: Fields hidden by sentry are nulled out in the values array.
  example: []
  syntax:
    content: public int GetValues(object[] values)
    parameters:
    - id: values
      type: System.Object[]
      description: Array of objects that is filled with the values in the current row.
    return:
      type: System.Int32
      description: The number of columns copied
    content.vb: Public Function GetValues(values As Object()) As Integer
  overload: SuperOffice.Data.SoDataReader.GetValues*
  implements:
  - System.Data.IDataRecord.GetValues(System.Object[])
  - SuperOffice.Data.ISoDataRecord.GetValues(System.Object[])
  nameWithType.vb: SoDataReader.GetValues(Object())
  fullName.vb: SuperOffice.Data.SoDataReader.GetValues(Object())
  name.vb: GetValues(Object())
- uid: SuperOffice.Data.SoDataReader.GetOrdinal(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetOrdinal(string)
  nameWithType: SoDataReader.GetOrdinal(string)
  fullName: SuperOffice.Data.SoDataReader.GetOrdinal(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Return the index of the named field, or -1; no exceptions thrown
  example: []
  syntax:
    content: public int GetOrdinal(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the field
    return:
      type: System.Int32
      description: A zero-based index suitable for use with GetValue(int) and the rest of the Get functions.
    content.vb: Public Function GetOrdinal(name As String) As Integer
  overload: SuperOffice.Data.SoDataReader.GetOrdinal*
  implements:
  - System.Data.IDataRecord.GetOrdinal(System.String)
  - SuperOffice.Data.ISoDataRecord.GetOrdinal(System.String)
  nameWithType.vb: SoDataReader.GetOrdinal(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetOrdinal(String)
  name.vb: GetOrdinal(String)
- uid: SuperOffice.Data.SoDataReader.GetOrdinal(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetOrdinal(SuperOffice.Data.SQL.FieldInfo)
  id: GetOrdinal(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetOrdinal(FieldInfo)
  nameWithType: SoDataReader.GetOrdinal(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetOrdinal(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Return the index of the field represented by the field info, or -1; no exceptions thrown
  example: []
  syntax:
    content: public int GetOrdinal(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Information about the field.
    return:
      type: System.Int32
      description: Ordinal of the field. First field is ordinal 0. Returns -1 if the field is not found.
    content.vb: Public Function GetOrdinal(fieldInfo As FieldInfo) As Integer
  overload: SuperOffice.Data.SoDataReader.GetOrdinal*
- uid: SuperOffice.Data.SoDataReader.GetEnum``1(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetEnum``1(SuperOffice.Data.SQL.FieldInfo)
  id: GetEnum``1(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetEnum<E>(FieldInfo)
  nameWithType: SoDataReader.GetEnum<E>(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetEnum<E>(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Get a field from an int16-compatible database value and parse it as the given enum
  example: []
  syntax:
    content: public E GetEnum<E>(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Field specification
    typeParameters:
    - id: E
      description: The enum type to return
    return:
      type: '{E}'
      description: Enum value, or default(E) if sentry blocks reading
    content.vb: Public Function GetEnum(Of E)(field As FieldInfo) As E
  overload: SuperOffice.Data.SoDataReader.GetEnum*
  implements:
  - SuperOffice.Data.ISoDataRecord.GetEnum``1(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: SoDataReader.GetEnum(Of E)(FieldInfo)
  fullName.vb: SuperOffice.Data.SoDataReader.GetEnum(Of E)(SuperOffice.Data.SQL.FieldInfo)
  name.vb: GetEnum(Of E)(FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetEnum``1(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetEnum``1(System.String)
  id: GetEnum``1(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetEnum<E>(string)
  nameWithType: SoDataReader.GetEnum<E>(string)
  fullName: SuperOffice.Data.SoDataReader.GetEnum<E>(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Get a field from an int16-compatible database value and parse it as the given enum
  example: []
  syntax:
    content: public E GetEnum<E>(string name)
    parameters:
    - id: name
      type: System.String
      description: Field specification
    typeParameters:
    - id: E
      description: The enum type to return
    return:
      type: '{E}'
      description: Enum value, or default(E) if sentry blocks reading
    content.vb: Public Function GetEnum(Of E)(name As String) As E
  overload: SuperOffice.Data.SoDataReader.GetEnum*
  nameWithType.vb: SoDataReader.GetEnum(Of E)(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetEnum(Of E)(String)
  name.vb: GetEnum(Of E)(String)
- uid: SuperOffice.Data.SoDataReader.GetEnum``1(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetEnum``1(System.Int32)
  id: GetEnum``1(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetEnum<E>(int)
  nameWithType: SoDataReader.GetEnum<E>(int)
  fullName: SuperOffice.Data.SoDataReader.GetEnum<E>(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Get a field from an int16-compatible database value and parse it as the given enum
  example: []
  syntax:
    content: public E GetEnum<E>(int index)
    parameters:
    - id: index
      type: System.Int32
      description: Field specification
    typeParameters:
    - id: E
      description: The enum type to return
    return:
      type: '{E}'
      description: Enum value, or default(E) if sentry blocks reading
    content.vb: Public Function GetEnum(Of E)(index As Integer) As E
  overload: SuperOffice.Data.SoDataReader.GetEnum*
  nameWithType.vb: SoDataReader.GetEnum(Of E)(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetEnum(Of E)(Integer)
  name.vb: GetEnum(Of E)(Integer)
- uid: SuperOffice.Data.SoDataReader.GetBoolean(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetBoolean(int)
  nameWithType: SoDataReader.GetBoolean(int)
  fullName: SuperOffice.Data.SoDataReader.GetBoolean(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a bool.
  remarks: Returns false if the column is hidden by a sentry
  example: []
  syntax:
    content: public bool GetBoolean(int i)
    parameters:
    - id: i
      type: System.Int32
      description: column index
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function GetBoolean(i As Integer) As Boolean
  overload: SuperOffice.Data.SoDataReader.GetBoolean*
  implements:
  - System.Data.IDataRecord.GetBoolean(System.Int32)
  nameWithType.vb: SoDataReader.GetBoolean(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetBoolean(Integer)
  name.vb: GetBoolean(Integer)
- uid: SuperOffice.Data.SoDataReader.GetBoolean(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetBoolean(SuperOffice.Data.SQL.FieldInfo)
  id: GetBoolean(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetBoolean(FieldInfo)
  nameWithType: SoDataReader.GetBoolean(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetBoolean(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a bool.
  remarks: Returns false if the column is hidden by a sentry
  example: []
  syntax:
    content: public bool GetBoolean(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Column identifier
    return:
      type: System.Boolean
      description: Boolean value
    content.vb: Public Function GetBoolean(fieldInfo As FieldInfo) As Boolean
  overload: SuperOffice.Data.SoDataReader.GetBoolean*
  implements:
  - SuperOffice.Data.ISoDataRecord.GetBoolean(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetBoolean(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetBoolean(System.String)
  id: GetBoolean(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetBoolean(string)
  nameWithType: SoDataReader.GetBoolean(string)
  fullName: SuperOffice.Data.SoDataReader.GetBoolean(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a bool.
  remarks: Returns false if the column is hidden by a sentry
  example: []
  syntax:
    content: public bool GetBoolean(string name)
    parameters:
    - id: name
      type: System.String
      description: Column name; if more than one column has this name, the first matching one is used
    return:
      type: System.Boolean
      description: Boolean value
    content.vb: Public Function GetBoolean(name As String) As Boolean
  overload: SuperOffice.Data.SoDataReader.GetBoolean*
  nameWithType.vb: SoDataReader.GetBoolean(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetBoolean(String)
  name.vb: GetBoolean(String)
- uid: SuperOffice.Data.SoDataReader.GetByte(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetByte(int)
  nameWithType: SoDataReader.GetByte(int)
  fullName: SuperOffice.Data.SoDataReader.GetByte(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a byte.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public byte GetByte(int i)
    parameters:
    - id: i
      type: System.Int32
      description: column index
    return:
      type: System.Byte
      description: ''
    content.vb: Public Function GetByte(i As Integer) As Byte
  overload: SuperOffice.Data.SoDataReader.GetByte*
  implements:
  - System.Data.IDataRecord.GetByte(System.Int32)
  nameWithType.vb: SoDataReader.GetByte(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetByte(Integer)
  name.vb: GetByte(Integer)
- uid: SuperOffice.Data.SoDataReader.GetByte(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetByte(SuperOffice.Data.SQL.FieldInfo)
  id: GetByte(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetByte(FieldInfo)
  nameWithType: SoDataReader.GetByte(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetByte(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a byte.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public byte GetByte(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Column identifier
    return:
      type: System.Byte
      description: ''
    content.vb: Public Function GetByte(fieldInfo As FieldInfo) As Byte
  overload: SuperOffice.Data.SoDataReader.GetByte*
  implements:
  - SuperOffice.Data.ISoDataRecord.GetByte(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetByte(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetByte(System.String)
  id: GetByte(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetByte(string)
  nameWithType: SoDataReader.GetByte(string)
  fullName: SuperOffice.Data.SoDataReader.GetByte(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a byte.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public byte GetByte(string name)
    parameters:
    - id: name
      type: System.String
      description: Column name; if more than one column has this name, the first matching one is used
    return:
      type: System.Byte
      description: ''
    content.vb: Public Function GetByte(name As String) As Byte
  overload: SuperOffice.Data.SoDataReader.GetByte*
  nameWithType.vb: SoDataReader.GetByte(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetByte(String)
  name.vb: GetByte(String)
- uid: SuperOffice.Data.SoDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetBytes(int, long, byte[], int, int)
  nameWithType: SoDataReader.GetBytes(int, long, byte[], int, int)
  fullName: SuperOffice.Data.SoDataReader.GetBytes(int, long, byte[], int, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Reads a stream of bytes from the specified column offset into 

    the buffer an array starting at the given buffer offset
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public long GetBytes(int i, long fieldOffset, byte[] buffer, int bufferoffset, int length)
    parameters:
    - id: i
      type: System.Int32
      description: Column index
    - id: fieldOffset
      type: System.Int64
      description: ''
    - id: buffer
      type: System.Byte[]
      description: ''
    - id: bufferoffset
      type: System.Int32
      description: ''
    - id: length
      type: System.Int32
      description: ''
    return:
      type: System.Int64
      description: ''
    content.vb: Public Function GetBytes(i As Integer, fieldOffset As Long, buffer As Byte(), bufferoffset As Integer, length As Integer) As Long
  overload: SuperOffice.Data.SoDataReader.GetBytes*
  implements:
  - System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: SoDataReader.GetBytes(Integer, Long, Byte(), Integer, Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetBytes(Integer, Long, Byte(), Integer, Integer)
  name.vb: GetBytes(Integer, Long, Byte(), Integer, Integer)
- uid: SuperOffice.Data.SoDataReader.GetChar(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetChar(int)
  nameWithType: SoDataReader.GetChar(int)
  fullName: SuperOffice.Data.SoDataReader.GetChar(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a single character.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public char GetChar(int i)
    parameters:
    - id: i
      type: System.Int32
      description: Column index
    return:
      type: System.Char
      description: ''
    content.vb: Public Function GetChar(i As Integer) As Char
  overload: SuperOffice.Data.SoDataReader.GetChar*
  implements:
  - System.Data.IDataRecord.GetChar(System.Int32)
  nameWithType.vb: SoDataReader.GetChar(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetChar(Integer)
  name.vb: GetChar(Integer)
- uid: SuperOffice.Data.SoDataReader.GetChar(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetChar(SuperOffice.Data.SQL.FieldInfo)
  id: GetChar(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetChar(FieldInfo)
  nameWithType: SoDataReader.GetChar(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetChar(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a single character.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public char GetChar(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Column identifier
    return:
      type: System.Char
      description: ''
    content.vb: Public Function GetChar(fieldInfo As FieldInfo) As Char
  overload: SuperOffice.Data.SoDataReader.GetChar*
  implements:
  - SuperOffice.Data.ISoDataRecord.GetChar(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetChar(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetChar(System.String)
  id: GetChar(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetChar(string)
  nameWithType: SoDataReader.GetChar(string)
  fullName: SuperOffice.Data.SoDataReader.GetChar(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a single character.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public char GetChar(string name)
    parameters:
    - id: name
      type: System.String
      description: Column name; if more than one column has this name, the first matching one is used
    return:
      type: System.Char
      description: ''
    content.vb: Public Function GetChar(name As String) As Char
  overload: SuperOffice.Data.SoDataReader.GetChar*
  nameWithType.vb: SoDataReader.GetChar(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetChar(String)
  name.vb: GetChar(String)
- uid: SuperOffice.Data.SoDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetChars(int, long, char[], int, int)
  nameWithType: SoDataReader.GetChars(int, long, char[], int, int)
  fullName: SuperOffice.Data.SoDataReader.GetChars(int, long, char[], int, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Reads a stream of characters from the specified column offset into 

    the buffer as an array starting at the given buffer offset.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public long GetChars(int i, long fieldoffset, char[] buffer, int bufferoffset, int length)
    parameters:
    - id: i
      type: System.Int32
      description: Column index
    - id: fieldoffset
      type: System.Int64
      description: ''
    - id: buffer
      type: System.Char[]
      description: ''
    - id: bufferoffset
      type: System.Int32
      description: ''
    - id: length
      type: System.Int32
      description: ''
    return:
      type: System.Int64
      description: ''
    content.vb: Public Function GetChars(i As Integer, fieldoffset As Long, buffer As Char(), bufferoffset As Integer, length As Integer) As Long
  overload: SuperOffice.Data.SoDataReader.GetChars*
  implements:
  - System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  nameWithType.vb: SoDataReader.GetChars(Integer, Long, Char(), Integer, Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetChars(Integer, Long, Char(), Integer, Integer)
  name.vb: GetChars(Integer, Long, Char(), Integer, Integer)
- uid: SuperOffice.Data.SoDataReader.GetGuid(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetGuid(int)
  nameWithType: SoDataReader.GetGuid(int)
  fullName: SuperOffice.Data.SoDataReader.GetGuid(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a globally-unique identifier (GUID).
  remarks: Returns Guid.Empty if the column is hidden by a sentry
  example: []
  syntax:
    content: public Guid GetGuid(int i)
    parameters:
    - id: i
      type: System.Int32
      description: Column index
    return:
      type: System.Guid
      description: ''
    content.vb: Public Function GetGuid(i As Integer) As Guid
  overload: SuperOffice.Data.SoDataReader.GetGuid*
  implements:
  - System.Data.IDataRecord.GetGuid(System.Int32)
  nameWithType.vb: SoDataReader.GetGuid(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetGuid(Integer)
  name.vb: GetGuid(Integer)
- uid: SuperOffice.Data.SoDataReader.GetGuid(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetGuid(SuperOffice.Data.SQL.FieldInfo)
  id: GetGuid(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetGuid(FieldInfo)
  nameWithType: SoDataReader.GetGuid(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetGuid(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a globally-unique identifier (GUID).
  remarks: Returns Guid.Empty if the column is hidden by a sentry
  example: []
  syntax:
    content: public Guid GetGuid(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Column identifier
    return:
      type: System.Guid
      description: ''
    content.vb: Public Function GetGuid(fieldInfo As FieldInfo) As Guid
  overload: SuperOffice.Data.SoDataReader.GetGuid*
  implements:
  - SuperOffice.Data.ISoDataRecord.GetGuid(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetGuid(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetGuid(System.String)
  id: GetGuid(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetGuid(string)
  nameWithType: SoDataReader.GetGuid(string)
  fullName: SuperOffice.Data.SoDataReader.GetGuid(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a globally-unique identifier (GUID).
  remarks: Returns Guid.Empty if the column is hidden by a sentry
  example: []
  syntax:
    content: public Guid GetGuid(string name)
    parameters:
    - id: name
      type: System.String
      description: Column name; if more than one column has this name, the first matching one is used
    return:
      type: System.Guid
      description: ''
    content.vb: Public Function GetGuid(name As String) As Guid
  overload: SuperOffice.Data.SoDataReader.GetGuid*
  nameWithType.vb: SoDataReader.GetGuid(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetGuid(String)
  name.vb: GetGuid(String)
- uid: SuperOffice.Data.SoDataReader.GetInt16(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetInt16(int)
  nameWithType: SoDataReader.GetInt16(int)
  fullName: SuperOffice.Data.SoDataReader.GetInt16(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a 16-bit signed integer.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public short GetInt16(int i)
    parameters:
    - id: i
      type: System.Int32
      description: Column index
    return:
      type: System.Int16
      description: ''
    content.vb: Public Function GetInt16(i As Integer) As Short
  overload: SuperOffice.Data.SoDataReader.GetInt16*
  implements:
  - System.Data.IDataRecord.GetInt16(System.Int32)
  nameWithType.vb: SoDataReader.GetInt16(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetInt16(Integer)
  name.vb: GetInt16(Integer)
- uid: SuperOffice.Data.SoDataReader.GetInt16(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetInt16(SuperOffice.Data.SQL.FieldInfo)
  id: GetInt16(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetInt16(FieldInfo)
  nameWithType: SoDataReader.GetInt16(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetInt16(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a 16-bit signed integer.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public short GetInt16(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Column identifier
    return:
      type: System.Int16
      description: ''
    content.vb: Public Function GetInt16(fieldInfo As FieldInfo) As Short
  overload: SuperOffice.Data.SoDataReader.GetInt16*
  implements:
  - SuperOffice.Data.ISoDataRecord.GetInt16(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetInt16(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetInt16(System.String)
  id: GetInt16(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetInt16(string)
  nameWithType: SoDataReader.GetInt16(string)
  fullName: SuperOffice.Data.SoDataReader.GetInt16(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a 16-bit signed integer.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public short GetInt16(string name)
    parameters:
    - id: name
      type: System.String
      description: Column name; if more than one column has this name, the first matching one is used
    return:
      type: System.Int16
      description: ''
    content.vb: Public Function GetInt16(name As String) As Short
  overload: SuperOffice.Data.SoDataReader.GetInt16*
  nameWithType.vb: SoDataReader.GetInt16(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetInt16(String)
  name.vb: GetInt16(String)
- uid: SuperOffice.Data.SoDataReader.GetInt32(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetInt32(int)
  nameWithType: SoDataReader.GetInt32(int)
  fullName: SuperOffice.Data.SoDataReader.GetInt32(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a 32-bit signed integer.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public int GetInt32(int i)
    parameters:
    - id: i
      type: System.Int32
      description: Column index
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function GetInt32(i As Integer) As Integer
  overload: SuperOffice.Data.SoDataReader.GetInt32*
  implements:
  - System.Data.IDataRecord.GetInt32(System.Int32)
  - SuperOffice.Data.ISoDataRecord.GetInt32(System.Int32)
  nameWithType.vb: SoDataReader.GetInt32(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetInt32(Integer)
  name.vb: GetInt32(Integer)
- uid: SuperOffice.Data.SoDataReader.GetInt32(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetInt32(SuperOffice.Data.SQL.FieldInfo)
  id: GetInt32(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetInt32(FieldInfo)
  nameWithType: SoDataReader.GetInt32(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetInt32(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a 32-bit signed integer.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public int GetInt32(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Column identifier
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function GetInt32(fieldInfo As FieldInfo) As Integer
  overload: SuperOffice.Data.SoDataReader.GetInt32*
  implements:
  - SuperOffice.Data.ISoDataRecord.GetInt32(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetInt32(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetInt32(System.String)
  id: GetInt32(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetInt32(string)
  nameWithType: SoDataReader.GetInt32(string)
  fullName: SuperOffice.Data.SoDataReader.GetInt32(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a 32-bit signed integer.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public int GetInt32(string name)
    parameters:
    - id: name
      type: System.String
      description: Column name; if more than one column has this name, the first matching one is used
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function GetInt32(name As String) As Integer
  overload: SuperOffice.Data.SoDataReader.GetInt32*
  nameWithType.vb: SoDataReader.GetInt32(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetInt32(String)
  name.vb: GetInt32(String)
- uid: SuperOffice.Data.SoDataReader.GetInt32Array(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetInt32Array(System.Int32)
  id: GetInt32Array(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetInt32Array(int)
  nameWithType: SoDataReader.GetInt32Array(int)
  fullName: SuperOffice.Data.SoDataReader.GetInt32Array(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a 32-bit signed integer.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public int[] GetInt32Array(int i)
    parameters:
    - id: i
      type: System.Int32
      description: Column index
    return:
      type: System.Int32[]
      description: ''
    content.vb: Public Function GetInt32Array(i As Integer) As Integer()
  overload: SuperOffice.Data.SoDataReader.GetInt32Array*
  nameWithType.vb: SoDataReader.GetInt32Array(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetInt32Array(Integer)
  name.vb: GetInt32Array(Integer)
- uid: SuperOffice.Data.SoDataReader.GetInt32Array(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetInt32Array(SuperOffice.Data.SQL.FieldInfo)
  id: GetInt32Array(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetInt32Array(FieldInfo)
  nameWithType: SoDataReader.GetInt32Array(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetInt32Array(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a 32-bit signed integer.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public int[] GetInt32Array(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Column identifier
    return:
      type: System.Int32[]
      description: ''
    content.vb: Public Function GetInt32Array(fieldInfo As FieldInfo) As Integer()
  overload: SuperOffice.Data.SoDataReader.GetInt32Array*
  implements:
  - SuperOffice.Data.ISoDataRecord.GetInt32Array(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetInt32Array(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetInt32Array(System.String)
  id: GetInt32Array(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetInt32Array(string)
  nameWithType: SoDataReader.GetInt32Array(string)
  fullName: SuperOffice.Data.SoDataReader.GetInt32Array(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a 32-bit signed integer.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public int[] GetInt32Array(string name)
    parameters:
    - id: name
      type: System.String
      description: Column name; if more than one column has this name, the first matching one is used
    return:
      type: System.Int32[]
      description: ''
    content.vb: Public Function GetInt32Array(name As String) As Integer()
  overload: SuperOffice.Data.SoDataReader.GetInt32Array*
  nameWithType.vb: SoDataReader.GetInt32Array(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetInt32Array(String)
  name.vb: GetInt32Array(String)
- uid: SuperOffice.Data.SoDataReader.GetInt64(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetInt64(int)
  nameWithType: SoDataReader.GetInt64(int)
  fullName: SuperOffice.Data.SoDataReader.GetInt64(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a 64-bit signed integer.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public long GetInt64(int i)
    parameters:
    - id: i
      type: System.Int32
      description: Column index
    return:
      type: System.Int64
      description: ''
    content.vb: Public Function GetInt64(i As Integer) As Long
  overload: SuperOffice.Data.SoDataReader.GetInt64*
  implements:
  - System.Data.IDataRecord.GetInt64(System.Int32)
  nameWithType.vb: SoDataReader.GetInt64(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetInt64(Integer)
  name.vb: GetInt64(Integer)
- uid: SuperOffice.Data.SoDataReader.GetInt64(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetInt64(SuperOffice.Data.SQL.FieldInfo)
  id: GetInt64(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetInt64(FieldInfo)
  nameWithType: SoDataReader.GetInt64(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetInt64(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a 64-bit signed integer.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public long GetInt64(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Column identifier
    return:
      type: System.Int64
      description: ''
    content.vb: Public Function GetInt64(fieldInfo As FieldInfo) As Long
  overload: SuperOffice.Data.SoDataReader.GetInt64*
  implements:
  - SuperOffice.Data.ISoDataRecord.GetInt64(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetInt64(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetInt64(System.String)
  id: GetInt64(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetInt64(string)
  nameWithType: SoDataReader.GetInt64(string)
  fullName: SuperOffice.Data.SoDataReader.GetInt64(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a 64-bit signed integer.
  remarks: Returns 0 if the column is hidden by a sentry
  example: []
  syntax:
    content: public long GetInt64(string name)
    parameters:
    - id: name
      type: System.String
      description: Column name; if more than one column has this name, the first matching one is used
    return:
      type: System.Int64
      description: ''
    content.vb: Public Function GetInt64(name As String) As Long
  overload: SuperOffice.Data.SoDataReader.GetInt64*
  nameWithType.vb: SoDataReader.GetInt64(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetInt64(String)
  name.vb: GetInt64(String)
- uid: SuperOffice.Data.SoDataReader.GetFloat(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetFloat(int)
  nameWithType: SoDataReader.GetFloat(int)
  fullName: SuperOffice.Data.SoDataReader.GetFloat(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a single-precision floating point number.
  remarks: Returns NaN if the column is hidden by a sentry
  example: []
  syntax:
    content: public float GetFloat(int i)
    parameters:
    - id: i
      type: System.Int32
      description: Column index
    return:
      type: System.Single
      description: ''
    content.vb: Public Function GetFloat(i As Integer) As Single
  overload: SuperOffice.Data.SoDataReader.GetFloat*
  implements:
  - System.Data.IDataRecord.GetFloat(System.Int32)
  nameWithType.vb: SoDataReader.GetFloat(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetFloat(Integer)
  name.vb: GetFloat(Integer)
- uid: SuperOffice.Data.SoDataReader.GetFloat(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetFloat(SuperOffice.Data.SQL.FieldInfo)
  id: GetFloat(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetFloat(FieldInfo)
  nameWithType: SoDataReader.GetFloat(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetFloat(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a single-precision floating point number.
  remarks: Returns NaN if the column is hidden by a sentry
  example: []
  syntax:
    content: public float GetFloat(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Column identifier
    return:
      type: System.Single
      description: ''
    content.vb: Public Function GetFloat(fieldInfo As FieldInfo) As Single
  overload: SuperOffice.Data.SoDataReader.GetFloat*
  implements:
  - SuperOffice.Data.ISoDataRecord.GetFloat(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetFloat(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetFloat(System.String)
  id: GetFloat(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetFloat(string)
  nameWithType: SoDataReader.GetFloat(string)
  fullName: SuperOffice.Data.SoDataReader.GetFloat(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a single-precision floating point number.
  remarks: Returns NaN if the column is hidden by a sentry
  example: []
  syntax:
    content: public float GetFloat(string name)
    parameters:
    - id: name
      type: System.String
      description: Column name; if more than one column has this name, the first matching one is used
    return:
      type: System.Single
      description: ''
    content.vb: Public Function GetFloat(name As String) As Single
  overload: SuperOffice.Data.SoDataReader.GetFloat*
  nameWithType.vb: SoDataReader.GetFloat(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetFloat(String)
  name.vb: GetFloat(String)
- uid: SuperOffice.Data.SoDataReader.GetDouble(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetDouble(int)
  nameWithType: SoDataReader.GetDouble(int)
  fullName: SuperOffice.Data.SoDataReader.GetDouble(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a double-precision floating point number.
  remarks: Returns NaN if the column is hidden by a sentry
  example: []
  syntax:
    content: public double GetDouble(int i)
    parameters:
    - id: i
      type: System.Int32
      description: Column index
    return:
      type: System.Double
      description: ''
    content.vb: Public Function GetDouble(i As Integer) As Double
  overload: SuperOffice.Data.SoDataReader.GetDouble*
  implements:
  - System.Data.IDataRecord.GetDouble(System.Int32)
  nameWithType.vb: SoDataReader.GetDouble(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetDouble(Integer)
  name.vb: GetDouble(Integer)
- uid: SuperOffice.Data.SoDataReader.GetDouble(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetDouble(SuperOffice.Data.SQL.FieldInfo)
  id: GetDouble(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetDouble(FieldInfo)
  nameWithType: SoDataReader.GetDouble(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetDouble(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a double-precision floating point number.
  remarks: Returns NaN if the column is hidden by a sentry
  example: []
  syntax:
    content: public double GetDouble(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Column identifier
    return:
      type: System.Double
      description: ''
    content.vb: Public Function GetDouble(fieldInfo As FieldInfo) As Double
  overload: SuperOffice.Data.SoDataReader.GetDouble*
  implements:
  - SuperOffice.Data.ISoDataRecord.GetDouble(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetDouble(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetDouble(System.String)
  id: GetDouble(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetDouble(string)
  nameWithType: SoDataReader.GetDouble(string)
  fullName: SuperOffice.Data.SoDataReader.GetDouble(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a double-precision floating point number.
  remarks: Returns NaN if the column is hidden by a sentry
  example: []
  syntax:
    content: public double GetDouble(string name)
    parameters:
    - id: name
      type: System.String
      description: Column name; if more than one column has this name, the first matching one is used
    return:
      type: System.Double
      description: ''
    content.vb: Public Function GetDouble(name As String) As Double
  overload: SuperOffice.Data.SoDataReader.GetDouble*
  nameWithType.vb: SoDataReader.GetDouble(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetDouble(String)
  name.vb: GetDouble(String)
- uid: SuperOffice.Data.SoDataReader.GetString(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetString(int)
  nameWithType: SoDataReader.GetString(int)
  fullName: SuperOffice.Data.SoDataReader.GetString(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a string.
  remarks: Returns "" if the column is hidden by a sentry
  example: []
  syntax:
    content: public string GetString(int i)
    parameters:
    - id: i
      type: System.Int32
      description: Column index
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetString(i As Integer) As String
  overload: SuperOffice.Data.SoDataReader.GetString*
  implements:
  - System.Data.IDataRecord.GetString(System.Int32)
  nameWithType.vb: SoDataReader.GetString(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetString(Integer)
  name.vb: GetString(Integer)
- uid: SuperOffice.Data.SoDataReader.GetString(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetString(SuperOffice.Data.SQL.FieldInfo)
  id: GetString(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetString(FieldInfo)
  nameWithType: SoDataReader.GetString(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetString(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a string.
  remarks: Returns "" if the column is hidden by a sentry
  example: []
  syntax:
    content: public string GetString(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Column identifier
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetString(fieldInfo As FieldInfo) As String
  overload: SuperOffice.Data.SoDataReader.GetString*
  implements:
  - SuperOffice.Data.ISoDataRecord.GetString(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetString(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetString(System.String)
  id: GetString(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetString(string)
  nameWithType: SoDataReader.GetString(string)
  fullName: SuperOffice.Data.SoDataReader.GetString(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a string.
  remarks: Returns "" if the column is hidden by a sentry
  example: []
  syntax:
    content: public string GetString(string name)
    parameters:
    - id: name
      type: System.String
      description: Column name; if more than one column has this name, the first matching one is used
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetString(name As String) As String
  overload: SuperOffice.Data.SoDataReader.GetString*
  nameWithType.vb: SoDataReader.GetString(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetString(String)
  name.vb: GetString(String)
- uid: SuperOffice.Data.SoDataReader.GetDecimal(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetDecimal(int)
  nameWithType: SoDataReader.GetDecimal(int)
  fullName: SuperOffice.Data.SoDataReader.GetDecimal(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a decimal.
  remarks: Returns Zero if the column is hidden by a sentry
  example: []
  syntax:
    content: public decimal GetDecimal(int i)
    parameters:
    - id: i
      type: System.Int32
      description: Column index
    return:
      type: System.Decimal
      description: ''
    content.vb: Public Function GetDecimal(i As Integer) As Decimal
  overload: SuperOffice.Data.SoDataReader.GetDecimal*
  implements:
  - System.Data.IDataRecord.GetDecimal(System.Int32)
  nameWithType.vb: SoDataReader.GetDecimal(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetDecimal(Integer)
  name.vb: GetDecimal(Integer)
- uid: SuperOffice.Data.SoDataReader.GetDecimal(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetDecimal(SuperOffice.Data.SQL.FieldInfo)
  id: GetDecimal(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetDecimal(FieldInfo)
  nameWithType: SoDataReader.GetDecimal(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetDecimal(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a decimal.
  remarks: Returns Zero if the column is hidden by a sentry
  example: []
  syntax:
    content: public decimal GetDecimal(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Column identifier
    return:
      type: System.Decimal
      description: ''
    content.vb: Public Function GetDecimal(fieldInfo As FieldInfo) As Decimal
  overload: SuperOffice.Data.SoDataReader.GetDecimal*
  implements:
  - SuperOffice.Data.ISoDataRecord.GetDecimal(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetDecimal(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetDecimal(System.String)
  id: GetDecimal(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetDecimal(string)
  nameWithType: SoDataReader.GetDecimal(string)
  fullName: SuperOffice.Data.SoDataReader.GetDecimal(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a decimal.
  remarks: Returns Zero if the column is hidden by a sentry
  example: []
  syntax:
    content: public decimal GetDecimal(string name)
    parameters:
    - id: name
      type: System.String
      description: Column name; if more than one column has this name, the first matching one is used
    return:
      type: System.Decimal
      description: ''
    content.vb: Public Function GetDecimal(name As String) As Decimal
  overload: SuperOffice.Data.SoDataReader.GetDecimal*
  nameWithType.vb: SoDataReader.GetDecimal(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetDecimal(String)
  name.vb: GetDecimal(String)
- uid: SuperOffice.Data.SoDataReader.GetDateTime(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetDateTime(int)
  nameWithType: SoDataReader.GetDateTime(int)
  fullName: SuperOffice.Data.SoDataReader.GetDateTime(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a DateTime.
  remarks: Returns DateTime.MinValue if the column is hidden by a sentry
  example: []
  syntax:
    content: public DateTime GetDateTime(int i)
    parameters:
    - id: i
      type: System.Int32
      description: Column index
    return:
      type: System.DateTime
      description: ''
    content.vb: Public Function GetDateTime(i As Integer) As Date
  overload: SuperOffice.Data.SoDataReader.GetDateTime*
  implements:
  - System.Data.IDataRecord.GetDateTime(System.Int32)
  nameWithType.vb: SoDataReader.GetDateTime(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetDateTime(Integer)
  name.vb: GetDateTime(Integer)
- uid: SuperOffice.Data.SoDataReader.GetDateTime(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetDateTime(SuperOffice.Data.SQL.FieldInfo)
  id: GetDateTime(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetDateTime(FieldInfo)
  nameWithType: SoDataReader.GetDateTime(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetDateTime(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a DateTime.
  remarks: Returns DateTime.MinValue if the column is hidden by a sentry
  example: []
  syntax:
    content: public DateTime GetDateTime(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Column identifier
    return:
      type: System.DateTime
      description: ''
    content.vb: Public Function GetDateTime(fieldInfo As FieldInfo) As Date
  overload: SuperOffice.Data.SoDataReader.GetDateTime*
  implements:
  - SuperOffice.Data.ISoDataRecord.GetDateTime(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetDateTime(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.GetDateTime(System.String)
  id: GetDateTime(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetDateTime(string)
  nameWithType: SoDataReader.GetDateTime(string)
  fullName: SuperOffice.Data.SoDataReader.GetDateTime(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the value of the specified column as a DateTime.
  remarks: Returns DateTime.MinValue if the column is hidden by a sentry
  example: []
  syntax:
    content: public DateTime GetDateTime(string name)
    parameters:
    - id: name
      type: System.String
      description: Column name; if more than one column has this name, the first matching one is used
    return:
      type: System.DateTime
      description: ''
    content.vb: Public Function GetDateTime(name As String) As Date
  overload: SuperOffice.Data.SoDataReader.GetDateTime*
  nameWithType.vb: SoDataReader.GetDateTime(String)
  fullName.vb: SuperOffice.Data.SoDataReader.GetDateTime(String)
  name.vb: GetDateTime(String)
- uid: SuperOffice.Data.SoDataReader.GetData(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.GetData(System.Int32)
  id: GetData(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetData(int)
  nameWithType: SoDataReader.GetData(int)
  fullName: SuperOffice.Data.SoDataReader.GetData(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Returns a reader to the given column - usually used to access nested tables.
  remarks: Returns null if the column is hidden by a sentry
  example: []
  syntax:
    content: public IDataReader GetData(int i)
    parameters:
    - id: i
      type: System.Int32
      description: Column index
    return:
      type: System.Data.IDataReader
      description: ''
    content.vb: Public Function GetData(i As Integer) As IDataReader
  overload: SuperOffice.Data.SoDataReader.GetData*
  implements:
  - System.Data.IDataRecord.GetData(System.Int32)
  nameWithType.vb: SoDataReader.GetData(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.GetData(Integer)
  name.vb: GetData(Integer)
- uid: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.String@)
  commentId: M:SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.String@)
  id: TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.String@)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: TryGetValue(FieldInfo, ref string)
  nameWithType: SoDataReader.TryGetValue(FieldInfo, ref string)
  fullName: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo, ref string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Assign the value if it is not null and sentry permits it.
  example: []
  syntax:
    content: public bool TryGetValue(FieldInfo field, ref string value)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Returned field from the database.
    - id: value
      type: System.String
      description: Value to be assigned.
    return:
      type: System.Boolean
      description: True if the value is assigned.
    content.vb: Public Function TryGetValue(field As FieldInfo, value As String) As Boolean
  overload: SuperOffice.Data.SoDataReader.TryGetValue*
  nameWithType.vb: SoDataReader.TryGetValue(FieldInfo, String)
  fullName.vb: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo, String)
  name.vb: TryGetValue(FieldInfo, String)
- uid: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Int32@)
  commentId: M:SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Int32@)
  id: TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Int32@)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: TryGetValue(FieldInfo, ref int)
  nameWithType: SoDataReader.TryGetValue(FieldInfo, ref int)
  fullName: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo, ref int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Assign the value if it is not null and sentry permits it.
  example: []
  syntax:
    content: public bool TryGetValue(FieldInfo field, ref int value)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Returned field from the database.
    - id: value
      type: System.Int32
      description: Value to be assigned.
    return:
      type: System.Boolean
      description: True if the value is assigned.
    content.vb: Public Function TryGetValue(field As FieldInfo, value As Integer) As Boolean
  overload: SuperOffice.Data.SoDataReader.TryGetValue*
  nameWithType.vb: SoDataReader.TryGetValue(FieldInfo, Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo, Integer)
  name.vb: TryGetValue(FieldInfo, Integer)
- uid: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Int16@)
  commentId: M:SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Int16@)
  id: TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Int16@)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: TryGetValue(FieldInfo, ref short)
  nameWithType: SoDataReader.TryGetValue(FieldInfo, ref short)
  fullName: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo, ref short)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Assign the value if it is not null and sentry permits it.
  example: []
  syntax:
    content: public bool TryGetValue(FieldInfo field, ref short value)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Returned field from the database.
    - id: value
      type: System.Int16
      description: Value to be assigned.
    return:
      type: System.Boolean
      description: True if the value is assigned.
    content.vb: Public Function TryGetValue(field As FieldInfo, value As Short) As Boolean
  overload: SuperOffice.Data.SoDataReader.TryGetValue*
  nameWithType.vb: SoDataReader.TryGetValue(FieldInfo, Short)
  fullName.vb: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo, Short)
  name.vb: TryGetValue(FieldInfo, Short)
- uid: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Double@)
  commentId: M:SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Double@)
  id: TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Double@)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: TryGetValue(FieldInfo, ref double)
  nameWithType: SoDataReader.TryGetValue(FieldInfo, ref double)
  fullName: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo, ref double)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Assign the value if it is not null and sentry permits it.
  example: []
  syntax:
    content: public bool TryGetValue(FieldInfo field, ref double value)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Returned field from the database.
    - id: value
      type: System.Double
      description: Value to be assigned.
    return:
      type: System.Boolean
      description: True if the value is assigned.
    content.vb: Public Function TryGetValue(field As FieldInfo, value As Double) As Boolean
  overload: SuperOffice.Data.SoDataReader.TryGetValue*
  nameWithType.vb: SoDataReader.TryGetValue(FieldInfo, Double)
  fullName.vb: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo, Double)
  name.vb: TryGetValue(FieldInfo, Double)
- uid: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.DateTime@)
  commentId: M:SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.DateTime@)
  id: TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.DateTime@)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: TryGetValue(FieldInfo, ref DateTime)
  nameWithType: SoDataReader.TryGetValue(FieldInfo, ref DateTime)
  fullName: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo, ref System.DateTime)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Assign the value if it is not null and sentry permits it.
  example: []
  syntax:
    content: public bool TryGetValue(FieldInfo field, ref DateTime value)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Returned field from the database.
    - id: value
      type: System.DateTime
      description: Value to be assigned.
    return:
      type: System.Boolean
      description: True if the value is assigned.
    content.vb: Public Function TryGetValue(field As FieldInfo, value As Date) As Boolean
  overload: SuperOffice.Data.SoDataReader.TryGetValue*
  nameWithType.vb: SoDataReader.TryGetValue(FieldInfo, Date)
  fullName.vb: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo, Date)
  name.vb: TryGetValue(FieldInfo, Date)
- uid: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Boolean@)
  commentId: M:SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Boolean@)
  id: TryGetValue(SuperOffice.Data.SQL.FieldInfo,System.Boolean@)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: TryGetValue(FieldInfo, ref bool)
  nameWithType: SoDataReader.TryGetValue(FieldInfo, ref bool)
  fullName: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo, ref bool)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Assign the value if it is not null and sentry permits it.
  remarks: >-
    As boolean fields are not supported in the database, it is assumed 

    that the value requested is a numerical value and true will be 

    assigned to value if the database value is greater than 0.
  example: []
  syntax:
    content: public bool TryGetValue(FieldInfo field, ref bool value)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Returned field from the database.
    - id: value
      type: System.Boolean
      description: Value to be assigned.
    return:
      type: System.Boolean
      description: True if the value is assigned.
    content.vb: Public Function TryGetValue(field As FieldInfo, value As Boolean) As Boolean
  overload: SuperOffice.Data.SoDataReader.TryGetValue*
  nameWithType.vb: SoDataReader.TryGetValue(FieldInfo, Boolean)
  fullName.vb: SuperOffice.Data.SoDataReader.TryGetValue(SuperOffice.Data.SQL.FieldInfo, Boolean)
  name.vb: TryGetValue(FieldInfo, Boolean)
- uid: SuperOffice.Data.SoDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.SoDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  id: IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: IsDBNullAsync(int, CancellationToken)
  nameWithType: SoDataReader.IsDBNullAsync(int, CancellationToken)
  fullName: SuperOffice.Data.SoDataReader.IsDBNullAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Returns TRUE if the database column contains a NULL value (i.e not 0 or empty string, but no value at all).

    NULL values are not convertible to any value. Attempting to read a NULL as an integer or string will trigger

    an exception.
  remarks: Returns TRUE if the column is hidden by a sentry.
  example: []
  syntax:
    content: >-
      [CreateSyncVersion(OmitNullableDirective = true)]

      public Task<bool> IsDBNullAsync(int i, CancellationToken cancellationToken = default)
    parameters:
    - id: i
      type: System.Int32
      description: 0-based column index.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: true if the specified field is set to null. Otherwise, false.
    content.vb: >-
      <CreateSyncVersion(OmitNullableDirective:=True)>

      Public Function IsDBNullAsync(i As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.Data.SoDataReader.IsDBNullAsync*
  attributes:
  - type: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute
    ctor: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute.#ctor
    arguments: []
    namedArguments:
    - name: OmitNullableDirective
      type: System.Boolean
      value: true
  nameWithType.vb: SoDataReader.IsDBNullAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.Data.SoDataReader.IsDBNullAsync(Integer, System.Threading.CancellationToken)
  name.vb: IsDBNullAsync(Integer, CancellationToken)
- uid: SuperOffice.Data.SoDataReader.IsDBNullAsync(SuperOffice.Data.SQL.FieldInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.SoDataReader.IsDBNullAsync(SuperOffice.Data.SQL.FieldInfo,System.Threading.CancellationToken)
  id: IsDBNullAsync(SuperOffice.Data.SQL.FieldInfo,System.Threading.CancellationToken)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: IsDBNullAsync(FieldInfo, CancellationToken)
  nameWithType: SoDataReader.IsDBNullAsync(FieldInfo, CancellationToken)
  fullName: SuperOffice.Data.SoDataReader.IsDBNullAsync(SuperOffice.Data.SQL.FieldInfo, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Returns TRUE if the database column contains a NULL value (i.e not 0 or empty string, but no value at all).

    NULL values are not convertible to any value. Attempting to read a NULL as an integer or string will trigger

    an exception.
  remarks: Returns TRUE if the column is hidden by a sentry.
  example: []
  syntax:
    content: >-
      [CreateSyncVersion(OmitNullableDirective = true)]

      public Task<bool> IsDBNullAsync(FieldInfo fieldInfo, CancellationToken cancellationToken = default)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Column definition
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the specified field info is DB null, otherwise, <code>false</code>.
    content.vb: >-
      <CreateSyncVersion(OmitNullableDirective:=True)>

      Public Function IsDBNullAsync(fieldInfo As FieldInfo, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.Data.SoDataReader.IsDBNullAsync*
  attributes:
  - type: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute
    ctor: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute.#ctor
    arguments: []
    namedArguments:
    - name: OmitNullableDirective
      type: System.Boolean
      value: true
- uid: SuperOffice.Data.SoDataReader.IsDBNullAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.SoDataReader.IsDBNullAsync(System.String,System.Threading.CancellationToken)
  id: IsDBNullAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: IsDBNullAsync(string, CancellationToken)
  nameWithType: SoDataReader.IsDBNullAsync(string, CancellationToken)
  fullName: SuperOffice.Data.SoDataReader.IsDBNullAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Returns TRUE if the database column contains a NULL value (i.e not 0 or empty string, but no value at all).

    NULL values are not convertible to any value. Attempting to read a NULL as an integer or string will trigger

    an exception.
  remarks: Returns TRUE if the column is hidden by a sentry.
  example: []
  syntax:
    content: >-
      [CreateSyncVersion(OmitNullableDirective = true)]

      public Task<bool> IsDBNullAsync(string name, CancellationToken cancellationToken = default)
    parameters:
    - id: name
      type: System.String
      description: Column name
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the specified name is DB null, otherwise, <code>false</code>.
    content.vb: >-
      <CreateSyncVersion(OmitNullableDirective:=True)>

      Public Function IsDBNullAsync(name As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.Data.SoDataReader.IsDBNullAsync*
  attributes:
  - type: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute
    ctor: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute.#ctor
    arguments: []
    namedArguments:
    - name: OmitNullableDirective
      type: System.Boolean
      value: true
  nameWithType.vb: SoDataReader.IsDBNullAsync(String, CancellationToken)
  fullName.vb: SuperOffice.Data.SoDataReader.IsDBNullAsync(String, System.Threading.CancellationToken)
  name.vb: IsDBNullAsync(String, CancellationToken)
- uid: SuperOffice.Data.SoDataReader.Dispose
  commentId: M:SuperOffice.Data.SoDataReader.Dispose
  id: Dispose
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SoDataReader.Dispose()
  fullName: SuperOffice.Data.SoDataReader.Dispose()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: SuperOffice.Data.SoDataReader.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: SuperOffice.Data.SoDataReader.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  id: GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetFieldValue(FieldInfo)
  nameWithType: SoDataReader.GetFieldValue(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Returns the current value of a field -- 

    used by the sentry mechanism to determine what you are allowed to see or change.

    Returns null if the reader is closed.
  example: []
  syntax:
    content: public object GetFieldValue(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: The field we want to know about
    return:
      type: System.Object
      description: Null if the reader is closed, or if the current row does not match the rowid parameter.
    content.vb: Public Function GetFieldValue(field As FieldInfo) As Object
  overload: SuperOffice.Data.SoDataReader.GetFieldValue*
  implements:
  - SuperOffice.CRM.Security.ISoDataLookup.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  id: GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: SoDataReader.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: You allways select the persisted value
  example: []
  syntax:
    content: public object GetPersistedFieldValue(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: The field we want to know about
    return:
      type: System.Object
      description: Null if the reader is closed, or if the current row does not match the rowid parameter.
    content.vb: Public Function GetPersistedFieldValue(field As FieldInfo) As Object
  overload: SuperOffice.Data.SoDataReader.GetPersistedFieldValue*
  implements:
  - SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  id: IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: SoDataReader.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: You allways select the persisted value.
  example: []
  syntax:
    content: public bool IsPersistedFieldValueKnown(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: The field we want to know about
    return:
      type: System.Boolean
      description: Returns true if the field is in the result set.
    content.vb: Public Function IsPersistedFieldValueKnown(field As FieldInfo) As Boolean
  overload: SuperOffice.Data.SoDataReader.IsPersistedFieldValueKnown*
  implements:
  - SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  id: IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: IsGhostField(FieldInfo)
  nameWithType: SoDataReader.IsGhostField(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Check if there is actually a valid value for the given field. If not, then this field is called

    a 'ghost'. This happens if a field is part of an outer join that missed, or null for some other reason.
  example: []
  syntax:
    content: public bool IsGhostField(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Boolean
      description: True if the field is a 'ghost', i.e., if it has NO valid known value. true is also returned for nonexistent fields.
    content.vb: Public Function IsGhostField(field As FieldInfo) As Boolean
  overload: SuperOffice.Data.SoDataReader.IsGhostField*
  implements:
  - SuperOffice.CRM.Security.ISoDataLookup.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.GetIndexOfField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.GetIndexOfField(SuperOffice.Data.SQL.FieldInfo)
  id: GetIndexOfField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetIndexOfField(FieldInfo)
  nameWithType: SoDataReader.GetIndexOfField(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.GetIndexOfField(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Return the 0-based position of a given position. Returns -1 if the field is not found in the list of columns in the result set. 

    If no field matches exactly (i.e. same object), then it returns the first matching field.
  remarks: >-
    The use of IsSameField is what distinguishes this from GetOrdinal. 

    This function is looser than GetOrdinal. It is used inside the sentry logic which may not have access to the original column definitions.
  example: []
  syntax:
    content: public int GetIndexOfField(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Field to find
    return:
      type: System.Int32
      description: 0-based index of field position
    content.vb: Public Function GetIndexOfField(field As FieldInfo) As Integer
  overload: SuperOffice.Data.SoDataReader.GetIndexOfField*
- uid: SuperOffice.Data.SoDataReader.GetKnownFields
  commentId: M:SuperOffice.Data.SoDataReader.GetKnownFields
  id: GetKnownFields
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: GetKnownFields()
  nameWithType: SoDataReader.GetKnownFields()
  fullName: SuperOffice.Data.SoDataReader.GetKnownFields()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Calculating rights for all tables and field <b>potentially</b> covered by a Sentry can be a huge

    waste. This method should return only-and-all FieldInfos actually present in the data object,

    so the Sentry can avoid calculating stuff that isn't needed
  example: []
  syntax:
    content: public List<FieldInfo> GetKnownFields()
    return:
      type: System.Collections.Generic.List{SuperOffice.Data.SQL.FieldInfo}
      description: ''
    content.vb: Public Function GetKnownFields() As List(Of FieldInfo)
  overload: SuperOffice.Data.SoDataReader.GetKnownFields*
  implements:
  - SuperOffice.CRM.Security.ISoDataLookup.GetKnownFields
- uid: SuperOffice.Data.SoDataReader.BeginIgnoreSentryCheck
  commentId: M:SuperOffice.Data.SoDataReader.BeginIgnoreSentryCheck
  id: BeginIgnoreSentryCheck
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: BeginIgnoreSentryCheck()
  nameWithType: SoDataReader.BeginIgnoreSentryCheck()
  fullName: SuperOffice.Data.SoDataReader.BeginIgnoreSentryCheck()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Starts the process of ignoring sentry on the object implementing the interface on the current thread.
  example: []
  syntax:
    content: public IgnoreSentryCheck BeginIgnoreSentryCheck()
    return:
      type: SuperOffice.CRM.Security.IgnoreSentryCheck
      description: Disposable object that calls <xref href="SuperOffice.Data.SoDataReader.EndIgnoreSentryCheck" data-throw-if-not-resolved="false"></xref> on Dispose.
    content.vb: Public Function BeginIgnoreSentryCheck() As IgnoreSentryCheck
  overload: SuperOffice.Data.SoDataReader.BeginIgnoreSentryCheck*
  implements:
  - SuperOffice.CRM.Security.ISentryIgnorable.BeginIgnoreSentryCheck
- uid: SuperOffice.Data.SoDataReader.EndIgnoreSentryCheck
  commentId: M:SuperOffice.Data.SoDataReader.EndIgnoreSentryCheck
  id: EndIgnoreSentryCheck
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: EndIgnoreSentryCheck()
  nameWithType: SoDataReader.EndIgnoreSentryCheck()
  fullName: SuperOffice.Data.SoDataReader.EndIgnoreSentryCheck()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Ends the process of ignoring sentry on the object implementing the interface on the current thread.
  example: []
  syntax:
    content: public void EndIgnoreSentryCheck()
    content.vb: Public Sub EndIgnoreSentryCheck()
  overload: SuperOffice.Data.SoDataReader.EndIgnoreSentryCheck*
  exceptions:
  - type: SuperOffice.Exceptions.SoException
    commentId: T:SuperOffice.Exceptions.SoException
    description: Thrown if Sentry is not ignored.
  implements:
  - SuperOffice.CRM.Security.ISentryIgnorable.EndIgnoreSentryCheck
- uid: SuperOffice.Data.SoDataReader.NextResult
  commentId: M:SuperOffice.Data.SoDataReader.NextResult
  id: NextResult
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: NextResult()
  nameWithType: SoDataReader.NextResult()
  fullName: SuperOffice.Data.SoDataReader.NextResult()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Advances the data reader to the next result, when reading the results of batch SQL statements.
  example: []
  syntax:
    content: public bool NextResult()
    return:
      type: System.Boolean
      description: true if there are more rows; otherwise, false.
    content.vb: Public Function NextResult() As Boolean
  overload: SuperOffice.Data.SoDataReader.NextResult*
  implements:
  - System.Data.IDataReader.NextResult
- uid: SuperOffice.Data.SoDataReader.Read
  commentId: M:SuperOffice.Data.SoDataReader.Read
  id: Read
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: Read()
  nameWithType: SoDataReader.Read()
  fullName: SuperOffice.Data.SoDataReader.Read()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Reads the first/next row of data into the reader, discarding the previous row.

    The values are accessible through the GetXxx methods on the reader object.

    <p></p>

    If the Select query has specified a nonzero DbRowsToSkip, this skipping will either be

    done by database (but so far only Sybase 9 has support for that), or done in a tight loop

    here.
  example: []
  syntax:
    content: public bool Read()
    return:
      type: System.Boolean
      description: True if the read succeeded. If there is no more data, returns false
    content.vb: Public Function Read() As Boolean
  overload: SuperOffice.Data.SoDataReader.Read*
  implements:
  - System.Data.IDataReader.Read
- uid: SuperOffice.Data.SoDataReader.IsDBNull(System.Int32)
  commentId: M:SuperOffice.Data.SoDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: IsDBNull(int)
  nameWithType: SoDataReader.IsDBNull(int)
  fullName: SuperOffice.Data.SoDataReader.IsDBNull(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Returns TRUE if the database column contains a NULL value (i.e not 0 or empty string, but no value at all).

    NULL values are not convertible to any value. Attempting to read a NULL as an integer or string will trigger

    an exception.
  remarks: Returns TRUE if the column is hidden by a sentry.
  example: []
  syntax:
    content: public bool IsDBNull(int i)
    parameters:
    - id: i
      type: System.Int32
      description: 0-based column index.
    return:
      type: System.Boolean
      description: true if the specified field is set to null. Otherwise, false.
    content.vb: Public Function IsDBNull(i As Integer) As Boolean
  overload: SuperOffice.Data.SoDataReader.IsDBNull*
  implements:
  - System.Data.IDataRecord.IsDBNull(System.Int32)
  nameWithType.vb: SoDataReader.IsDBNull(Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.IsDBNull(Integer)
  name.vb: IsDBNull(Integer)
- uid: SuperOffice.Data.SoDataReader.IsDBNull(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SoDataReader.IsDBNull(SuperOffice.Data.SQL.FieldInfo)
  id: IsDBNull(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: IsDBNull(FieldInfo)
  nameWithType: SoDataReader.IsDBNull(FieldInfo)
  fullName: SuperOffice.Data.SoDataReader.IsDBNull(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Returns TRUE if the database column contains a NULL value (i.e not 0 or empty string, but no value at all).

    NULL values are not convertible to any value. Attempting to read a NULL as an integer or string will trigger

    an exception.
  remarks: Returns TRUE if the column is hidden by a sentry.
  example: []
  syntax:
    content: public bool IsDBNull(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Column definition
    return:
      type: System.Boolean
      description: <code>true</code> if the specified field info is DB null, otherwise, <code>false</code>.
    content.vb: Public Function IsDBNull(fieldInfo As FieldInfo) As Boolean
  overload: SuperOffice.Data.SoDataReader.IsDBNull*
  implements:
  - SuperOffice.Data.ISoDataRecord.IsDBNull(SuperOffice.Data.SQL.FieldInfo)
- uid: SuperOffice.Data.SoDataReader.IsDBNull(System.String)
  commentId: M:SuperOffice.Data.SoDataReader.IsDBNull(System.String)
  id: IsDBNull(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: IsDBNull(string)
  nameWithType: SoDataReader.IsDBNull(string)
  fullName: SuperOffice.Data.SoDataReader.IsDBNull(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Returns TRUE if the database column contains a NULL value (i.e not 0 or empty string, but no value at all).

    NULL values are not convertible to any value. Attempting to read a NULL as an integer or string will trigger

    an exception.
  remarks: Returns TRUE if the column is hidden by a sentry.
  example: []
  syntax:
    content: public bool IsDBNull(string name)
    parameters:
    - id: name
      type: System.String
      description: Column name
    return:
      type: System.Boolean
      description: <code>true</code> if the specified name is DB null, otherwise, <code>false</code>.
    content.vb: Public Function IsDBNull(name As String) As Boolean
  overload: SuperOffice.Data.SoDataReader.IsDBNull*
  nameWithType.vb: SoDataReader.IsDBNull(String)
  fullName.vb: SuperOffice.Data.SoDataReader.IsDBNull(String)
  name.vb: IsDBNull(String)
- uid: SuperOffice.Data.SoDataReader.IsAutoClose
  commentId: P:SuperOffice.Data.SoDataReader.IsAutoClose
  id: IsAutoClose
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: IsAutoClose
  nameWithType: SoDataReader.IsAutoClose
  fullName: SuperOffice.Data.SoDataReader.IsAutoClose
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Shall the reader be automatically closed when the last row is read (e.g. <xref href="SuperOffice.Data.SoDataReader.Read" data-throw-if-not-resolved="false"></xref> returning false).
  example: []
  syntax:
    content: public bool IsAutoClose { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsAutoClose As Boolean
  overload: SuperOffice.Data.SoDataReader.IsAutoClose*
- uid: SuperOffice.Data.SoDataReader.Sentries
  commentId: P:SuperOffice.Data.SoDataReader.Sentries
  id: Sentries
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: Sentries
  nameWithType: SoDataReader.Sentries
  fullName: SuperOffice.Data.SoDataReader.Sentries
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: The datareaders sentry-collection.
  example: []
  syntax:
    content: public SentryCollection Sentries { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Security.SentryCollection
      description: The sentries.
    content.vb: Public ReadOnly Property Sentries As SentryCollection
  overload: SuperOffice.Data.SoDataReader.Sentries*
- uid: SuperOffice.Data.SoDataReader.Depth
  commentId: P:SuperOffice.Data.SoDataReader.Depth
  id: Depth
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: Depth
  nameWithType: SoDataReader.Depth
  fullName: SuperOffice.Data.SoDataReader.Depth
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets a value indicating the depth of nesting for the current row.
  example: []
  syntax:
    content: public int Depth { get; }
    parameters: []
    return:
      type: System.Int32
      description: ''
    content.vb: Public ReadOnly Property Depth As Integer
  overload: SuperOffice.Data.SoDataReader.Depth*
  implements:
  - System.Data.IDataReader.Depth
- uid: SuperOffice.Data.SoDataReader.IsClosed
  commentId: P:SuperOffice.Data.SoDataReader.IsClosed
  id: IsClosed
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: IsClosed
  nameWithType: SoDataReader.IsClosed
  fullName: SuperOffice.Data.SoDataReader.IsClosed
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    The reader state.

    Calling Close() on the reader will cause get methods to stop working, and set this to true.
  example: []
  syntax:
    content: public bool IsClosed { get; }
    parameters: []
    return:
      type: System.Boolean
      description: ''
    content.vb: Public ReadOnly Property IsClosed As Boolean
  overload: SuperOffice.Data.SoDataReader.IsClosed*
  implements:
  - System.Data.IDataReader.IsClosed
- uid: SuperOffice.Data.SoDataReader.RecordsAffected
  commentId: P:SuperOffice.Data.SoDataReader.RecordsAffected
  id: RecordsAffected
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: RecordsAffected
  nameWithType: SoDataReader.RecordsAffected
  fullName: SuperOffice.Data.SoDataReader.RecordsAffected
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    RecordsAffected is only applicable to batch statements

    that include inserts/updates/deletes.
  example: []
  syntax:
    content: public int RecordsAffected { get; }
    parameters: []
    return:
      type: System.Int32
      description: ''
    content.vb: Public ReadOnly Property RecordsAffected As Integer
  overload: SuperOffice.Data.SoDataReader.RecordsAffected*
  implements:
  - System.Data.IDataReader.RecordsAffected
- uid: SuperOffice.Data.SoDataReader.DbRowsRead
  commentId: P:SuperOffice.Data.SoDataReader.DbRowsRead
  id: DbRowsRead
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: DbRowsRead
  nameWithType: SoDataReader.DbRowsRead
  fullName: SuperOffice.Data.SoDataReader.DbRowsRead
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Return the number of rows actually read from the database.  Note that this

    value may be larger than the number of rows visible to the caller, since there may

    be a Sentry in there eating rows that should not be visible, and skipping may have been done in order to reach a certain page.
  example: []
  syntax:
    content: public int DbRowsRead { get; }
    parameters: []
    return:
      type: System.Int32
      description: rows read.
    content.vb: Public ReadOnly Property DbRowsRead As Integer
  overload: SuperOffice.Data.SoDataReader.DbRowsRead*
- uid: SuperOffice.Data.SoDataReader.FieldCount
  commentId: P:SuperOffice.Data.SoDataReader.FieldCount
  id: FieldCount
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: FieldCount
  nameWithType: SoDataReader.FieldCount
  fullName: SuperOffice.Data.SoDataReader.FieldCount
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Gets the number of columns in the current row.
  example: []
  syntax:
    content: public int FieldCount { get; }
    parameters: []
    return:
      type: System.Int32
      description: ''
    content.vb: Public ReadOnly Property FieldCount As Integer
  overload: SuperOffice.Data.SoDataReader.FieldCount*
  implements:
  - System.Data.IDataRecord.FieldCount
- uid: SuperOffice.Data.SoDataReader.Item(System.Int32)
  commentId: P:SuperOffice.Data.SoDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: SoDataReader.this[int]
  fullName: SuperOffice.Data.SoDataReader.this[int]
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Return value at column position. First column = 0.
  remarks: If the column is hidden by a sentry then null is returned instead of the value.
  example: []
  syntax:
    content: public object this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
    return:
      type: System.Object
    content.vb: Public ReadOnly Default Property this[](i As Integer) As Object
  overload: SuperOffice.Data.SoDataReader.Item*
  implements:
  - System.Data.IDataRecord.Item(System.Int32)
  nameWithType.vb: SoDataReader.this[](Integer)
  fullName.vb: SuperOffice.Data.SoDataReader.this[](Integer)
  name.vb: this[](Integer)
- uid: SuperOffice.Data.SoDataReader.Item(System.String)
  commentId: P:SuperOffice.Data.SoDataReader.Item(System.String)
  id: Item(System.String)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: this[string]
  nameWithType: SoDataReader.this[string]
  fullName: SuperOffice.Data.SoDataReader.this[string]
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Return value at named column.
  remarks: If the column is hidden by a sentry then null is returned instead of the value.
  example: []
  syntax:
    content: public object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Object
    content.vb: Public ReadOnly Default Property this[](name As String) As Object
  overload: SuperOffice.Data.SoDataReader.Item*
  implements:
  - System.Data.IDataRecord.Item(System.String)
  nameWithType.vb: SoDataReader.this[](String)
  fullName.vb: SuperOffice.Data.SoDataReader.this[](String)
  name.vb: this[](String)
- uid: SuperOffice.Data.SoDataReader.Item(SuperOffice.Data.SQL.FieldInfo)
  commentId: P:SuperOffice.Data.SoDataReader.Item(SuperOffice.Data.SQL.FieldInfo)
  id: Item(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: this[FieldInfo]
  nameWithType: SoDataReader.this[FieldInfo]
  fullName: SuperOffice.Data.SoDataReader.this[SuperOffice.Data.SQL.FieldInfo]
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: >-
    Returns the value of the first matching field.

    Returns NULL if no field is found.
  example: []
  syntax:
    content: public object this[FieldInfo fieldInfo] { get; }
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
    return:
      type: System.Object
    content.vb: Public ReadOnly Default Property this[](fieldInfo As FieldInfo) As Object
  overload: SuperOffice.Data.SoDataReader.Item*
  nameWithType.vb: SoDataReader.this[](FieldInfo)
  fullName.vb: SuperOffice.Data.SoDataReader.this[](SuperOffice.Data.SQL.FieldInfo)
  name.vb: this[](FieldInfo)
- uid: SuperOffice.Data.SoDataReader.IsSentryIgnored
  commentId: P:SuperOffice.Data.SoDataReader.IsSentryIgnored
  id: IsSentryIgnored
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: IsSentryIgnored
  nameWithType: SoDataReader.IsSentryIgnored
  fullName: SuperOffice.Data.SoDataReader.IsSentryIgnored
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: Get value indicating whether sentry is ignored on the current object for the current thread.
  example: []
  syntax:
    content: public bool IsSentryIgnored { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSentryIgnored As Boolean
  overload: SuperOffice.Data.SoDataReader.IsSentryIgnored*
  implements:
  - SuperOffice.CRM.Security.ISentryIgnorable.IsSentryIgnored
- uid: SuperOffice.Data.SoDataReader.Reader
  commentId: P:SuperOffice.Data.SoDataReader.Reader
  id: Reader
  parent: SuperOffice.Data.SoDataReader
  langs:
  - csharp
  - vb
  name: Reader
  nameWithType: SoDataReader.Reader
  fullName: SuperOffice.Data.SoDataReader.Reader
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  example: []
  syntax:
    content: public SoDataReader Reader { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SoDataReader
    content.vb: Public ReadOnly Property Reader As SoDataReader
  overload: SuperOffice.Data.SoDataReader.Reader*
  implements:
  - SuperOffice.Data.ISoDataRecord.Reader
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Data.IDataReader
  commentId: T:System.Data.IDataReader
  parent: System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatareader
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.IDataRecord
  commentId: T:System.Data.IDataRecord
  parent: System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord
  name: IDataRecord
  nameWithType: IDataRecord
  fullName: System.Data.IDataRecord
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.CRM.Security.ISoDataLookup
  commentId: T:SuperOffice.CRM.Security.ISoDataLookup
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.ISoDataLookup.html
  name: ISoDataLookup
  nameWithType: ISoDataLookup
  fullName: SuperOffice.CRM.Security.ISoDataLookup
- uid: SuperOffice.CRM.Security.ISentryIgnorable
  commentId: T:SuperOffice.CRM.Security.ISentryIgnorable
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.ISentryIgnorable.html
  name: ISentryIgnorable
  nameWithType: ISentryIgnorable
  fullName: SuperOffice.CRM.Security.ISentryIgnorable
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: SuperOffice.Data.ISoDataRecord
  commentId: T:SuperOffice.Data.ISoDataRecord
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html
  name: ISoDataRecord
  nameWithType: ISoDataRecord
  fullName: SuperOffice.Data.ISoDataRecord
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  - name: (
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  - name: (
  - name: )
- uid: System.MarshalByRefObject.InitializeLifetimeService
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  - name: (
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: SuperOffice.Data.SoDataReader.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<SoDataReader, To>(SoDataReader)
  nameWithType: EnumUtil.MapEnums<SoDataReader, To>(SoDataReader)
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SoDataReader, To>(SuperOffice.Data.SoDataReader)
  nameWithType.vb: EnumUtil.MapEnums(Of SoDataReader, To)(SoDataReader)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SoDataReader, To)(SuperOffice.Data.SoDataReader)
  name.vb: MapEnums(Of SoDataReader, To)(SoDataReader)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Data.SoDataReader)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    isExternal: true
    href: SuperOffice.Data.SoDataReader.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    isExternal: true
    href: SuperOffice.Data.SoDataReader.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Data.SoDataReader)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    isExternal: true
    href: SuperOffice.Data.SoDataReader.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    isExternal: true
    href: SuperOffice.Data.SoDataReader.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<SoDataReader, To>(SoDataReader)
  nameWithType: Converters.MapEnums<SoDataReader, To>(SoDataReader)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SoDataReader, To>(SuperOffice.Data.SoDataReader)
  nameWithType.vb: Converters.MapEnums(Of SoDataReader, To)(SoDataReader)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SoDataReader, To)(SuperOffice.Data.SoDataReader)
  name.vb: MapEnums(Of SoDataReader, To)(SoDataReader)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Data.SoDataReader)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    isExternal: true
    href: SuperOffice.Data.SoDataReader.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    isExternal: true
    href: SuperOffice.Data.SoDataReader.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Data.SoDataReader)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    isExternal: true
    href: SuperOffice.Data.SoDataReader.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    isExternal: true
    href: SuperOffice.Data.SoDataReader.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Data
  commentId: N:System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Security
    name: Security
    isExternal: true
    href: SuperOffice.CRM.Security.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Security
    name: Security
    isExternal: true
    href: SuperOffice.CRM.Security.html
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Data.SoDataReader.SetPreAcceptDelegate*
  commentId: Overload:SuperOffice.Data.SoDataReader.SetPreAcceptDelegate
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_SetPreAcceptDelegate_System_Func_SuperOffice_Data_SoDataReader_System_Boolean__
  name: SetPreAcceptDelegate
  nameWithType: SoDataReader.SetPreAcceptDelegate
  fullName: SuperOffice.Data.SoDataReader.SetPreAcceptDelegate
- uid: System.Func{SuperOffice.Data.SoDataReader,System.Boolean}
  commentId: T:System.Func{SuperOffice.Data.SoDataReader,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<SoDataReader, bool>
  nameWithType: Func<SoDataReader, bool>
  fullName: System.Func<SuperOffice.Data.SoDataReader, bool>
  nameWithType.vb: Func(Of SoDataReader, Boolean)
  fullName.vb: System.Func(Of SuperOffice.Data.SoDataReader, Boolean)
  name.vb: Func(Of SoDataReader, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    isExternal: true
    href: SuperOffice.Data.SoDataReader.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    isExternal: true
    href: SuperOffice.Data.SoDataReader.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetRelations*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetRelations
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetRelations_SuperOffice_Data_SQL_TableInfo_SuperOffice_Data_Dictionary_SoTable_
  name: GetRelations
  nameWithType: SoDataReader.GetRelations
  fullName: SuperOffice.Data.SoDataReader.GetRelations
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.TableInfo.html
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: SuperOffice.Data.Dictionary.SoTable
  commentId: T:SuperOffice.Data.Dictionary.SoTable
  parent: SuperOffice.Data.Dictionary
  isExternal: true
  href: SuperOffice.Data.Dictionary.SoTable.html
  name: SoTable
  nameWithType: SoTable
  fullName: SuperOffice.Data.Dictionary.SoTable
- uid: SuperOffice.Data.SQL.RelationInfo[]
  isExternal: true
  href: SuperOffice.Data.SQL.RelationInfo.html
  name: RelationInfo[]
  nameWithType: RelationInfo[]
  fullName: SuperOffice.Data.SQL.RelationInfo[]
  nameWithType.vb: RelationInfo()
  fullName.vb: SuperOffice.Data.SQL.RelationInfo()
  name.vb: RelationInfo()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.RelationInfo
    name: RelationInfo
    isExternal: true
    href: SuperOffice.Data.SQL.RelationInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.Data.SQL.RelationInfo
    name: RelationInfo
    isExternal: true
    href: SuperOffice.Data.SQL.RelationInfo.html
  - name: (
  - name: )
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
- uid: SuperOffice.Data.Dictionary
  commentId: N:SuperOffice.Data.Dictionary
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data.Dictionary
  nameWithType: SuperOffice.Data.Dictionary
  fullName: SuperOffice.Data.Dictionary
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.Dictionary
    name: Dictionary
    isExternal: true
    href: SuperOffice.Data.Dictionary.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.Dictionary
    name: Dictionary
    isExternal: true
    href: SuperOffice.Data.Dictionary.html
- uid: SuperOffice.Data.SoDataReader.Close*
  commentId: Overload:SuperOffice.Data.SoDataReader.Close
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_Close
  name: Close
  nameWithType: SoDataReader.Close
  fullName: SuperOffice.Data.SoDataReader.Close
- uid: System.Data.IDataReader.Close
  commentId: M:System.Data.IDataReader.Close
  parent: System.Data.IDataReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatareader.close
  name: Close()
  nameWithType: IDataReader.Close()
  fullName: System.Data.IDataReader.Close()
  spec.csharp:
  - uid: System.Data.IDataReader.Close
    name: Close
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatareader.close
  - name: (
  - name: )
  spec.vb:
  - uid: System.Data.IDataReader.Close
    name: Close
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatareader.close
  - name: (
  - name: )
- uid: SuperOffice.Data.SoDataReader.NextResultAsync*
  commentId: Overload:SuperOffice.Data.SoDataReader.NextResultAsync
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_NextResultAsync_System_Threading_CancellationToken_
  name: NextResultAsync
  nameWithType: SoDataReader.NextResultAsync
  fullName: SuperOffice.Data.SoDataReader.NextResultAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.Data.SoDataReader.ReadAsync*
  commentId: Overload:SuperOffice.Data.SoDataReader.ReadAsync
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_ReadAsync_System_Threading_CancellationToken_
  name: ReadAsync
  nameWithType: SoDataReader.ReadAsync
  fullName: SuperOffice.Data.SoDataReader.ReadAsync
- uid: System.Data.DataTable
  commentId: T:System.Data.DataTable
  parent: System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.datatable
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: SuperOffice.Data.SoDataReader.GetSchemaTable*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetSchemaTable
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetSchemaTable
  name: GetSchemaTable
  nameWithType: SoDataReader.GetSchemaTable
  fullName: SuperOffice.Data.SoDataReader.GetSchemaTable
- uid: System.Data.IDataReader.GetSchemaTable
  commentId: M:System.Data.IDataReader.GetSchemaTable
  parent: System.Data.IDataReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatareader.getschematable
  name: GetSchemaTable()
  nameWithType: IDataReader.GetSchemaTable()
  fullName: System.Data.IDataReader.GetSchemaTable()
  spec.csharp:
  - uid: System.Data.IDataReader.GetSchemaTable
    name: GetSchemaTable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatareader.getschematable
  - name: (
  - name: )
  spec.vb:
  - uid: System.Data.IDataReader.GetSchemaTable
    name: GetSchemaTable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatareader.getschematable
  - name: (
  - name: )
- uid: System.Data.IDataRecord.FieldCount
  commentId: P:System.Data.IDataRecord.FieldCount
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.fieldcount
  name: FieldCount
  nameWithType: IDataRecord.FieldCount
  fullName: System.Data.IDataRecord.FieldCount
- uid: System.IndexOutOfRangeException
  commentId: T:System.IndexOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.indexoutofrangeexception
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: SuperOffice.Data.SoDataReader.GetName*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetName
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetName_System_Int32_
  name: GetName
  nameWithType: SoDataReader.GetName
  fullName: SuperOffice.Data.SoDataReader.GetName
- uid: System.Data.IDataRecord.GetName(System.Int32)
  commentId: M:System.Data.IDataRecord.GetName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getname
  name: GetName(int)
  nameWithType: IDataRecord.GetName(int)
  fullName: System.Data.IDataRecord.GetName(int)
  nameWithType.vb: IDataRecord.GetName(Integer)
  fullName.vb: System.Data.IDataRecord.GetName(Integer)
  name.vb: GetName(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetName(System.Int32)
    name: GetName
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getname
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetName(System.Int32)
    name: GetName
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getname
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Data.SoDataReader.GetDataTypeName*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetDataTypeName
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetDataTypeName_System_Int32_
  name: GetDataTypeName
  nameWithType: SoDataReader.GetDataTypeName
  fullName: SuperOffice.Data.SoDataReader.GetDataTypeName
- uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  commentId: M:System.Data.IDataRecord.GetDataTypeName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getdatatypename
  name: GetDataTypeName(int)
  nameWithType: IDataRecord.GetDataTypeName(int)
  fullName: System.Data.IDataRecord.GetDataTypeName(int)
  nameWithType.vb: IDataRecord.GetDataTypeName(Integer)
  fullName.vb: System.Data.IDataRecord.GetDataTypeName(Integer)
  name.vb: GetDataTypeName(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
    name: GetDataTypeName
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getdatatypename
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
    name: GetDataTypeName
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getdatatypename
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.IDataRecord.GetValue(System.Int32)
  commentId: M:System.Data.IDataRecord.GetValue(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getvalue
  name: GetValue(int)
  nameWithType: IDataRecord.GetValue(int)
  fullName: System.Data.IDataRecord.GetValue(int)
  nameWithType.vb: IDataRecord.GetValue(Integer)
  fullName.vb: System.Data.IDataRecord.GetValue(Integer)
  name.vb: GetValue(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetValue(System.Int32)
    name: GetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getvalue
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetValue(System.Int32)
    name: GetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getvalue
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetFieldType*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetFieldType
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetFieldType_System_Int32_
  name: GetFieldType
  nameWithType: SoDataReader.GetFieldType
  fullName: SuperOffice.Data.SoDataReader.GetFieldType
- uid: System.Data.IDataRecord.GetFieldType(System.Int32)
  commentId: M:System.Data.IDataRecord.GetFieldType(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getfieldtype
  name: GetFieldType(int)
  nameWithType: IDataRecord.GetFieldType(int)
  fullName: System.Data.IDataRecord.GetFieldType(int)
  nameWithType.vb: IDataRecord.GetFieldType(Integer)
  fullName.vb: System.Data.IDataRecord.GetFieldType(Integer)
  name.vb: GetFieldType(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetFieldType(System.Int32)
    name: GetFieldType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getfieldtype
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetFieldType(System.Int32)
    name: GetFieldType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getfieldtype
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SuperOffice.Data.SoDataReader.ToString*
  commentId: Overload:SuperOffice.Data.SoDataReader.ToString
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_ToString
  name: ToString
  nameWithType: SoDataReader.ToString
  fullName: SuperOffice.Data.SoDataReader.ToString
- uid: SuperOffice.Data.SoDataReader.GetValue*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetValue
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetValue_System_Int32_
  name: GetValue
  nameWithType: SoDataReader.GetValue
  fullName: SuperOffice.Data.SoDataReader.GetValue
- uid: SuperOffice.Data.ISoDataRecord.GetValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetValue_SuperOffice_Data_SQL_FieldInfo_
  name: GetValue(FieldInfo)
  nameWithType: ISoDataRecord.GetValue(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.GetValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetValue
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetValue_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetValue
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetValue_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.FieldInfo.html
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.CRM.Security.FieldProperty
  commentId: T:SuperOffice.CRM.Security.FieldProperty
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.FieldProperty.html
  name: FieldProperty
  nameWithType: FieldProperty
  fullName: SuperOffice.CRM.Security.FieldProperty
- uid: SuperOffice.Data.SoDataReader.GetFieldProperty*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetFieldProperty
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetFieldProperty_System_Int32_
  name: GetFieldProperty
  nameWithType: SoDataReader.GetFieldProperty
  fullName: SuperOffice.Data.SoDataReader.GetFieldProperty
- uid: SuperOffice.Data.SoDataReader.GetFieldInfo*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetFieldInfo
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetFieldInfo_System_Int32_
  name: GetFieldInfo
  nameWithType: SoDataReader.GetFieldInfo
  fullName: SuperOffice.Data.SoDataReader.GetFieldInfo
- uid: SuperOffice.Data.SoDataReader.GetValues*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetValues
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetValues_System_Object___
  name: GetValues
  nameWithType: SoDataReader.GetValues
  fullName: SuperOffice.Data.SoDataReader.GetValues
- uid: System.Data.IDataRecord.GetValues(System.Object[])
  commentId: M:System.Data.IDataRecord.GetValues(System.Object[])
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getvalues
  name: GetValues(object[])
  nameWithType: IDataRecord.GetValues(object[])
  fullName: System.Data.IDataRecord.GetValues(object[])
  nameWithType.vb: IDataRecord.GetValues(Object())
  fullName.vb: System.Data.IDataRecord.GetValues(Object())
  name.vb: GetValues(Object())
  spec.csharp:
  - uid: System.Data.IDataRecord.GetValues(System.Object[])
    name: GetValues
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getvalues
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetValues(System.Object[])
    name: GetValues
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getvalues
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.Data.ISoDataRecord.GetValues(System.Object[])
  commentId: M:SuperOffice.Data.ISoDataRecord.GetValues(System.Object[])
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetValues_System_Object___
  name: GetValues(object[])
  nameWithType: ISoDataRecord.GetValues(object[])
  fullName: SuperOffice.Data.ISoDataRecord.GetValues(object[])
  nameWithType.vb: ISoDataRecord.GetValues(Object())
  fullName.vb: SuperOffice.Data.ISoDataRecord.GetValues(Object())
  name.vb: GetValues(Object())
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetValues(System.Object[])
    name: GetValues
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetValues_System_Object___
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetValues(System.Object[])
    name: GetValues
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetValues_System_Object___
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetOrdinal*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetOrdinal
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetOrdinal_System_String_
  name: GetOrdinal
  nameWithType: SoDataReader.GetOrdinal
  fullName: SuperOffice.Data.SoDataReader.GetOrdinal
- uid: System.Data.IDataRecord.GetOrdinal(System.String)
  commentId: M:System.Data.IDataRecord.GetOrdinal(System.String)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getordinal
  name: GetOrdinal(string)
  nameWithType: IDataRecord.GetOrdinal(string)
  fullName: System.Data.IDataRecord.GetOrdinal(string)
  nameWithType.vb: IDataRecord.GetOrdinal(String)
  fullName.vb: System.Data.IDataRecord.GetOrdinal(String)
  name.vb: GetOrdinal(String)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetOrdinal(System.String)
    name: GetOrdinal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getordinal
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetOrdinal(System.String)
    name: GetOrdinal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getordinal
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.Data.ISoDataRecord.GetOrdinal(System.String)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetOrdinal(System.String)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetOrdinal_System_String_
  name: GetOrdinal(string)
  nameWithType: ISoDataRecord.GetOrdinal(string)
  fullName: SuperOffice.Data.ISoDataRecord.GetOrdinal(string)
  nameWithType.vb: ISoDataRecord.GetOrdinal(String)
  fullName.vb: SuperOffice.Data.ISoDataRecord.GetOrdinal(String)
  name.vb: GetOrdinal(String)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetOrdinal(System.String)
    name: GetOrdinal
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetOrdinal_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetOrdinal(System.String)
    name: GetOrdinal
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetOrdinal_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetEnum*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetEnum
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetEnum__1_SuperOffice_Data_SQL_FieldInfo_
  name: GetEnum
  nameWithType: SoDataReader.GetEnum
  fullName: SuperOffice.Data.SoDataReader.GetEnum
- uid: SuperOffice.Data.ISoDataRecord.GetEnum``1(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetEnum``1(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetEnum__1_SuperOffice_Data_SQL_FieldInfo_
  name: GetEnum<E>(FieldInfo)
  nameWithType: ISoDataRecord.GetEnum<E>(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.GetEnum<E>(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: ISoDataRecord.GetEnum(Of E)(FieldInfo)
  fullName.vb: SuperOffice.Data.ISoDataRecord.GetEnum(Of E)(SuperOffice.Data.SQL.FieldInfo)
  name.vb: GetEnum(Of E)(FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetEnum``1(SuperOffice.Data.SQL.FieldInfo)
    name: GetEnum
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetEnum__1_SuperOffice_Data_SQL_FieldInfo_
  - name: <
  - name: E
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetEnum``1(SuperOffice.Data.SQL.FieldInfo)
    name: GetEnum
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetEnum__1_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - name: Of
  - name: " "
  - name: E
  - name: )
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: '{E}'
  commentId: '!:E'
  definition: E
  name: E
  nameWithType: E
  fullName: E
- uid: E
  name: E
  nameWithType: E
  fullName: E
- uid: SuperOffice.Data.SoDataReader.GetBoolean*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetBoolean
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetBoolean_System_Int32_
  name: GetBoolean
  nameWithType: SoDataReader.GetBoolean
  fullName: SuperOffice.Data.SoDataReader.GetBoolean
- uid: System.Data.IDataRecord.GetBoolean(System.Int32)
  commentId: M:System.Data.IDataRecord.GetBoolean(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getboolean
  name: GetBoolean(int)
  nameWithType: IDataRecord.GetBoolean(int)
  fullName: System.Data.IDataRecord.GetBoolean(int)
  nameWithType.vb: IDataRecord.GetBoolean(Integer)
  fullName.vb: System.Data.IDataRecord.GetBoolean(Integer)
  name.vb: GetBoolean(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetBoolean(System.Int32)
    name: GetBoolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getboolean
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetBoolean(System.Int32)
    name: GetBoolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getboolean
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.Data.ISoDataRecord.GetBoolean(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetBoolean(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetBoolean_SuperOffice_Data_SQL_FieldInfo_
  name: GetBoolean(FieldInfo)
  nameWithType: ISoDataRecord.GetBoolean(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.GetBoolean(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetBoolean(SuperOffice.Data.SQL.FieldInfo)
    name: GetBoolean
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetBoolean_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetBoolean(SuperOffice.Data.SQL.FieldInfo)
    name: GetBoolean
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetBoolean_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetByte*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetByte
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetByte_System_Int32_
  name: GetByte
  nameWithType: SoDataReader.GetByte
  fullName: SuperOffice.Data.SoDataReader.GetByte
- uid: System.Data.IDataRecord.GetByte(System.Int32)
  commentId: M:System.Data.IDataRecord.GetByte(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getbyte
  name: GetByte(int)
  nameWithType: IDataRecord.GetByte(int)
  fullName: System.Data.IDataRecord.GetByte(int)
  nameWithType.vb: IDataRecord.GetByte(Integer)
  fullName.vb: System.Data.IDataRecord.GetByte(Integer)
  name.vb: GetByte(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetByte(System.Int32)
    name: GetByte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getbyte
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetByte(System.Int32)
    name: GetByte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getbyte
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: SuperOffice.Data.ISoDataRecord.GetByte(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetByte(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetByte_SuperOffice_Data_SQL_FieldInfo_
  name: GetByte(FieldInfo)
  nameWithType: ISoDataRecord.GetByte(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.GetByte(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetByte(SuperOffice.Data.SQL.FieldInfo)
    name: GetByte
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetByte_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetByte(SuperOffice.Data.SQL.FieldInfo)
    name: GetByte
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetByte_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetBytes*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetBytes
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetBytes_System_Int32_System_Int64_System_Byte___System_Int32_System_Int32_
  name: GetBytes
  nameWithType: SoDataReader.GetBytes
  fullName: SuperOffice.Data.SoDataReader.GetBytes
- uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getbytes
  name: GetBytes(int, long, byte[], int, int)
  nameWithType: IDataRecord.GetBytes(int, long, byte[], int, int)
  fullName: System.Data.IDataRecord.GetBytes(int, long, byte[], int, int)
  nameWithType.vb: IDataRecord.GetBytes(Integer, Long, Byte(), Integer, Integer)
  fullName.vb: System.Data.IDataRecord.GetBytes(Integer, Long, Byte(), Integer, Integer)
  name.vb: GetBytes(Integer, Long, Byte(), Integer, Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
    name: GetBytes
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getbytes
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
    name: GetBytes
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getbytes
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetChar*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetChar
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetChar_System_Int32_
  name: GetChar
  nameWithType: SoDataReader.GetChar
  fullName: SuperOffice.Data.SoDataReader.GetChar
- uid: System.Data.IDataRecord.GetChar(System.Int32)
  commentId: M:System.Data.IDataRecord.GetChar(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getchar
  name: GetChar(int)
  nameWithType: IDataRecord.GetChar(int)
  fullName: System.Data.IDataRecord.GetChar(int)
  nameWithType.vb: IDataRecord.GetChar(Integer)
  fullName.vb: System.Data.IDataRecord.GetChar(Integer)
  name.vb: GetChar(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetChar(System.Int32)
    name: GetChar
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getchar
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetChar(System.Int32)
    name: GetChar
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getchar
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: SuperOffice.Data.ISoDataRecord.GetChar(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetChar(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetChar_SuperOffice_Data_SQL_FieldInfo_
  name: GetChar(FieldInfo)
  nameWithType: ISoDataRecord.GetChar(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.GetChar(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetChar(SuperOffice.Data.SQL.FieldInfo)
    name: GetChar
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetChar_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetChar(SuperOffice.Data.SQL.FieldInfo)
    name: GetChar
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetChar_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetChars*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetChars
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetChars_System_Int32_System_Int64_System_Char___System_Int32_System_Int32_
  name: GetChars
  nameWithType: SoDataReader.GetChars
  fullName: SuperOffice.Data.SoDataReader.GetChars
- uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  commentId: M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getchars
  name: GetChars(int, long, char[], int, int)
  nameWithType: IDataRecord.GetChars(int, long, char[], int, int)
  fullName: System.Data.IDataRecord.GetChars(int, long, char[], int, int)
  nameWithType.vb: IDataRecord.GetChars(Integer, Long, Char(), Integer, Integer)
  fullName.vb: System.Data.IDataRecord.GetChars(Integer, Long, Char(), Integer, Integer)
  name.vb: GetChars(Integer, Long, Char(), Integer, Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
    name: GetChars
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getchars
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
    name: GetChars
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getchars
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Char[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char[]
  nameWithType: char[]
  fullName: char[]
  nameWithType.vb: Char()
  fullName.vb: Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetGuid*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetGuid
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetGuid_System_Int32_
  name: GetGuid
  nameWithType: SoDataReader.GetGuid
  fullName: SuperOffice.Data.SoDataReader.GetGuid
- uid: System.Data.IDataRecord.GetGuid(System.Int32)
  commentId: M:System.Data.IDataRecord.GetGuid(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getguid
  name: GetGuid(int)
  nameWithType: IDataRecord.GetGuid(int)
  fullName: System.Data.IDataRecord.GetGuid(int)
  nameWithType.vb: IDataRecord.GetGuid(Integer)
  fullName.vb: System.Data.IDataRecord.GetGuid(Integer)
  name.vb: GetGuid(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetGuid(System.Int32)
    name: GetGuid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getguid
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetGuid(System.Int32)
    name: GetGuid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getguid
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: SuperOffice.Data.ISoDataRecord.GetGuid(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetGuid(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetGuid_SuperOffice_Data_SQL_FieldInfo_
  name: GetGuid(FieldInfo)
  nameWithType: ISoDataRecord.GetGuid(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.GetGuid(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetGuid(SuperOffice.Data.SQL.FieldInfo)
    name: GetGuid
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetGuid_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetGuid(SuperOffice.Data.SQL.FieldInfo)
    name: GetGuid
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetGuid_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetInt16*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetInt16
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetInt16_System_Int32_
  name: GetInt16
  nameWithType: SoDataReader.GetInt16
  fullName: SuperOffice.Data.SoDataReader.GetInt16
- uid: System.Data.IDataRecord.GetInt16(System.Int32)
  commentId: M:System.Data.IDataRecord.GetInt16(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getint16
  name: GetInt16(int)
  nameWithType: IDataRecord.GetInt16(int)
  fullName: System.Data.IDataRecord.GetInt16(int)
  nameWithType.vb: IDataRecord.GetInt16(Integer)
  fullName.vb: System.Data.IDataRecord.GetInt16(Integer)
  name.vb: GetInt16(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetInt16(System.Int32)
    name: GetInt16
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getint16
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetInt16(System.Int32)
    name: GetInt16
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getint16
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: SuperOffice.Data.ISoDataRecord.GetInt16(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetInt16(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetInt16_SuperOffice_Data_SQL_FieldInfo_
  name: GetInt16(FieldInfo)
  nameWithType: ISoDataRecord.GetInt16(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.GetInt16(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetInt16(SuperOffice.Data.SQL.FieldInfo)
    name: GetInt16
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetInt16_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetInt16(SuperOffice.Data.SQL.FieldInfo)
    name: GetInt16
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetInt16_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetInt32*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetInt32
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetInt32_System_Int32_
  name: GetInt32
  nameWithType: SoDataReader.GetInt32
  fullName: SuperOffice.Data.SoDataReader.GetInt32
- uid: System.Data.IDataRecord.GetInt32(System.Int32)
  commentId: M:System.Data.IDataRecord.GetInt32(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getint32
  name: GetInt32(int)
  nameWithType: IDataRecord.GetInt32(int)
  fullName: System.Data.IDataRecord.GetInt32(int)
  nameWithType.vb: IDataRecord.GetInt32(Integer)
  fullName.vb: System.Data.IDataRecord.GetInt32(Integer)
  name.vb: GetInt32(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetInt32(System.Int32)
    name: GetInt32
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getint32
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetInt32(System.Int32)
    name: GetInt32
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getint32
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Data.ISoDataRecord.GetInt32(System.Int32)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetInt32(System.Int32)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetInt32_System_Int32_
  name: GetInt32(int)
  nameWithType: ISoDataRecord.GetInt32(int)
  fullName: SuperOffice.Data.ISoDataRecord.GetInt32(int)
  nameWithType.vb: ISoDataRecord.GetInt32(Integer)
  fullName.vb: SuperOffice.Data.ISoDataRecord.GetInt32(Integer)
  name.vb: GetInt32(Integer)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetInt32(System.Int32)
    name: GetInt32
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetInt32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetInt32(System.Int32)
    name: GetInt32
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetInt32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Data.ISoDataRecord.GetInt32(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetInt32(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetInt32_SuperOffice_Data_SQL_FieldInfo_
  name: GetInt32(FieldInfo)
  nameWithType: ISoDataRecord.GetInt32(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.GetInt32(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetInt32(SuperOffice.Data.SQL.FieldInfo)
    name: GetInt32
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetInt32_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetInt32(SuperOffice.Data.SQL.FieldInfo)
    name: GetInt32
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetInt32_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetInt32Array*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetInt32Array
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetInt32Array_System_Int32_
  name: GetInt32Array
  nameWithType: SoDataReader.GetInt32Array
  fullName: SuperOffice.Data.SoDataReader.GetInt32Array
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SuperOffice.Data.ISoDataRecord.GetInt32Array(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetInt32Array(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetInt32Array_SuperOffice_Data_SQL_FieldInfo_
  name: GetInt32Array(FieldInfo)
  nameWithType: ISoDataRecord.GetInt32Array(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.GetInt32Array(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetInt32Array(SuperOffice.Data.SQL.FieldInfo)
    name: GetInt32Array
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetInt32Array_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetInt32Array(SuperOffice.Data.SQL.FieldInfo)
    name: GetInt32Array
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetInt32Array_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetInt64*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetInt64
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetInt64_System_Int32_
  name: GetInt64
  nameWithType: SoDataReader.GetInt64
  fullName: SuperOffice.Data.SoDataReader.GetInt64
- uid: System.Data.IDataRecord.GetInt64(System.Int32)
  commentId: M:System.Data.IDataRecord.GetInt64(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getint64
  name: GetInt64(int)
  nameWithType: IDataRecord.GetInt64(int)
  fullName: System.Data.IDataRecord.GetInt64(int)
  nameWithType.vb: IDataRecord.GetInt64(Integer)
  fullName.vb: System.Data.IDataRecord.GetInt64(Integer)
  name.vb: GetInt64(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetInt64(System.Int32)
    name: GetInt64
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getint64
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetInt64(System.Int32)
    name: GetInt64
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getint64
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Data.ISoDataRecord.GetInt64(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetInt64(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetInt64_SuperOffice_Data_SQL_FieldInfo_
  name: GetInt64(FieldInfo)
  nameWithType: ISoDataRecord.GetInt64(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.GetInt64(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetInt64(SuperOffice.Data.SQL.FieldInfo)
    name: GetInt64
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetInt64_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetInt64(SuperOffice.Data.SQL.FieldInfo)
    name: GetInt64
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetInt64_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetFloat*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetFloat
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetFloat_System_Int32_
  name: GetFloat
  nameWithType: SoDataReader.GetFloat
  fullName: SuperOffice.Data.SoDataReader.GetFloat
- uid: System.Data.IDataRecord.GetFloat(System.Int32)
  commentId: M:System.Data.IDataRecord.GetFloat(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getfloat
  name: GetFloat(int)
  nameWithType: IDataRecord.GetFloat(int)
  fullName: System.Data.IDataRecord.GetFloat(int)
  nameWithType.vb: IDataRecord.GetFloat(Integer)
  fullName.vb: System.Data.IDataRecord.GetFloat(Integer)
  name.vb: GetFloat(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetFloat(System.Int32)
    name: GetFloat
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getfloat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetFloat(System.Int32)
    name: GetFloat
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getfloat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: SuperOffice.Data.ISoDataRecord.GetFloat(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetFloat(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetFloat_SuperOffice_Data_SQL_FieldInfo_
  name: GetFloat(FieldInfo)
  nameWithType: ISoDataRecord.GetFloat(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.GetFloat(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetFloat(SuperOffice.Data.SQL.FieldInfo)
    name: GetFloat
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetFloat_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetFloat(SuperOffice.Data.SQL.FieldInfo)
    name: GetFloat
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetFloat_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetDouble*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetDouble
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetDouble_System_Int32_
  name: GetDouble
  nameWithType: SoDataReader.GetDouble
  fullName: SuperOffice.Data.SoDataReader.GetDouble
- uid: System.Data.IDataRecord.GetDouble(System.Int32)
  commentId: M:System.Data.IDataRecord.GetDouble(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getdouble
  name: GetDouble(int)
  nameWithType: IDataRecord.GetDouble(int)
  fullName: System.Data.IDataRecord.GetDouble(int)
  nameWithType.vb: IDataRecord.GetDouble(Integer)
  fullName.vb: System.Data.IDataRecord.GetDouble(Integer)
  name.vb: GetDouble(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDouble(System.Int32)
    name: GetDouble
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getdouble
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDouble(System.Int32)
    name: GetDouble
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getdouble
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SuperOffice.Data.ISoDataRecord.GetDouble(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetDouble(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetDouble_SuperOffice_Data_SQL_FieldInfo_
  name: GetDouble(FieldInfo)
  nameWithType: ISoDataRecord.GetDouble(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.GetDouble(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetDouble(SuperOffice.Data.SQL.FieldInfo)
    name: GetDouble
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetDouble_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetDouble(SuperOffice.Data.SQL.FieldInfo)
    name: GetDouble
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetDouble_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetString*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetString
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetString_System_Int32_
  name: GetString
  nameWithType: SoDataReader.GetString
  fullName: SuperOffice.Data.SoDataReader.GetString
- uid: System.Data.IDataRecord.GetString(System.Int32)
  commentId: M:System.Data.IDataRecord.GetString(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getstring
  name: GetString(int)
  nameWithType: IDataRecord.GetString(int)
  fullName: System.Data.IDataRecord.GetString(int)
  nameWithType.vb: IDataRecord.GetString(Integer)
  fullName.vb: System.Data.IDataRecord.GetString(Integer)
  name.vb: GetString(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetString(System.Int32)
    name: GetString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getstring
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetString(System.Int32)
    name: GetString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getstring
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Data.ISoDataRecord.GetString(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetString(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetString_SuperOffice_Data_SQL_FieldInfo_
  name: GetString(FieldInfo)
  nameWithType: ISoDataRecord.GetString(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.GetString(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetString(SuperOffice.Data.SQL.FieldInfo)
    name: GetString
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetString_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetString(SuperOffice.Data.SQL.FieldInfo)
    name: GetString
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetString_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetDecimal*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetDecimal
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetDecimal_System_Int32_
  name: GetDecimal
  nameWithType: SoDataReader.GetDecimal
  fullName: SuperOffice.Data.SoDataReader.GetDecimal
- uid: System.Data.IDataRecord.GetDecimal(System.Int32)
  commentId: M:System.Data.IDataRecord.GetDecimal(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getdecimal
  name: GetDecimal(int)
  nameWithType: IDataRecord.GetDecimal(int)
  fullName: System.Data.IDataRecord.GetDecimal(int)
  nameWithType.vb: IDataRecord.GetDecimal(Integer)
  fullName.vb: System.Data.IDataRecord.GetDecimal(Integer)
  name.vb: GetDecimal(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDecimal(System.Int32)
    name: GetDecimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getdecimal
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDecimal(System.Int32)
    name: GetDecimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getdecimal
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: SuperOffice.Data.ISoDataRecord.GetDecimal(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetDecimal(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetDecimal_SuperOffice_Data_SQL_FieldInfo_
  name: GetDecimal(FieldInfo)
  nameWithType: ISoDataRecord.GetDecimal(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.GetDecimal(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetDecimal(SuperOffice.Data.SQL.FieldInfo)
    name: GetDecimal
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetDecimal_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetDecimal(SuperOffice.Data.SQL.FieldInfo)
    name: GetDecimal
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetDecimal_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetDateTime*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetDateTime
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetDateTime_System_Int32_
  name: GetDateTime
  nameWithType: SoDataReader.GetDateTime
  fullName: SuperOffice.Data.SoDataReader.GetDateTime
- uid: System.Data.IDataRecord.GetDateTime(System.Int32)
  commentId: M:System.Data.IDataRecord.GetDateTime(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getdatetime
  name: GetDateTime(int)
  nameWithType: IDataRecord.GetDateTime(int)
  fullName: System.Data.IDataRecord.GetDateTime(int)
  nameWithType.vb: IDataRecord.GetDateTime(Integer)
  fullName.vb: System.Data.IDataRecord.GetDateTime(Integer)
  name.vb: GetDateTime(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDateTime(System.Int32)
    name: GetDateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getdatetime
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDateTime(System.Int32)
    name: GetDateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getdatetime
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SuperOffice.Data.ISoDataRecord.GetDateTime(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.GetDateTime(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetDateTime_SuperOffice_Data_SQL_FieldInfo_
  name: GetDateTime(FieldInfo)
  nameWithType: ISoDataRecord.GetDateTime(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.GetDateTime(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.GetDateTime(SuperOffice.Data.SQL.FieldInfo)
    name: GetDateTime
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetDateTime_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.GetDateTime(SuperOffice.Data.SQL.FieldInfo)
    name: GetDateTime
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_GetDateTime_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetData*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetData
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetData_System_Int32_
  name: GetData
  nameWithType: SoDataReader.GetData
  fullName: SuperOffice.Data.SoDataReader.GetData
- uid: System.Data.IDataRecord.GetData(System.Int32)
  commentId: M:System.Data.IDataRecord.GetData(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getdata
  name: GetData(int)
  nameWithType: IDataRecord.GetData(int)
  fullName: System.Data.IDataRecord.GetData(int)
  nameWithType.vb: IDataRecord.GetData(Integer)
  fullName.vb: System.Data.IDataRecord.GetData(Integer)
  name.vb: GetData(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetData(System.Int32)
    name: GetData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getdata
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetData(System.Int32)
    name: GetData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.getdata
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Data.SoDataReader.TryGetValue*
  commentId: Overload:SuperOffice.Data.SoDataReader.TryGetValue
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_TryGetValue_SuperOffice_Data_SQL_FieldInfo_System_String__
  name: TryGetValue
  nameWithType: SoDataReader.TryGetValue
  fullName: SuperOffice.Data.SoDataReader.TryGetValue
- uid: SuperOffice.Data.SoDataReader.IsDBNullAsync*
  commentId: Overload:SuperOffice.Data.SoDataReader.IsDBNullAsync
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_IsDBNullAsync_System_Int32_System_Threading_CancellationToken_
  name: IsDBNullAsync
  nameWithType: SoDataReader.IsDBNullAsync
  fullName: SuperOffice.Data.SoDataReader.IsDBNullAsync
- uid: SuperOffice.Data.SoDataReader.Dispose*
  commentId: Overload:SuperOffice.Data.SoDataReader.Dispose
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_Dispose
  name: Dispose
  nameWithType: SoDataReader.Dispose
  fullName: SuperOffice.Data.SoDataReader.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetFieldValue*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetFieldValue
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetFieldValue_SuperOffice_Data_SQL_FieldInfo_
  name: GetFieldValue
  nameWithType: SoDataReader.GetFieldValue
  fullName: SuperOffice.Data.SoDataReader.GetFieldValue
- uid: SuperOffice.CRM.Security.ISoDataLookup.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.ISoDataLookup.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.ISoDataLookup
  isExternal: true
  href: SuperOffice.CRM.Security.ISoDataLookup.html#SuperOffice_CRM_Security_ISoDataLookup_GetFieldValue_SuperOffice_Data_SQL_FieldInfo_
  name: GetFieldValue(FieldInfo)
  nameWithType: ISoDataLookup.GetFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Security.ISoDataLookup.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    isExternal: true
    href: SuperOffice.CRM.Security.ISoDataLookup.html#SuperOffice_CRM_Security_ISoDataLookup_GetFieldValue_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    isExternal: true
    href: SuperOffice.CRM.Security.ISoDataLookup.html#SuperOffice_CRM_Security_ISoDataLookup_GetFieldValue_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetPersistedFieldValue*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetPersistedFieldValue
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetPersistedFieldValue_SuperOffice_Data_SQL_FieldInfo_
  name: GetPersistedFieldValue
  nameWithType: SoDataReader.GetPersistedFieldValue
  fullName: SuperOffice.Data.SoDataReader.GetPersistedFieldValue
- uid: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.ISoDataLookup
  isExternal: true
  href: SuperOffice.CRM.Security.ISoDataLookup.html#SuperOffice_CRM_Security_ISoDataLookup_GetPersistedFieldValue_SuperOffice_Data_SQL_FieldInfo_
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    isExternal: true
    href: SuperOffice.CRM.Security.ISoDataLookup.html#SuperOffice_CRM_Security_ISoDataLookup_GetPersistedFieldValue_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    isExternal: true
    href: SuperOffice.CRM.Security.ISoDataLookup.html#SuperOffice_CRM_Security_ISoDataLookup_GetPersistedFieldValue_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.IsPersistedFieldValueKnown*
  commentId: Overload:SuperOffice.Data.SoDataReader.IsPersistedFieldValueKnown
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_IsPersistedFieldValueKnown_SuperOffice_Data_SQL_FieldInfo_
  name: IsPersistedFieldValueKnown
  nameWithType: SoDataReader.IsPersistedFieldValueKnown
  fullName: SuperOffice.Data.SoDataReader.IsPersistedFieldValueKnown
- uid: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.ISoDataLookup
  isExternal: true
  href: SuperOffice.CRM.Security.ISoDataLookup.html#SuperOffice_CRM_Security_ISoDataLookup_IsPersistedFieldValueKnown_SuperOffice_Data_SQL_FieldInfo_
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    isExternal: true
    href: SuperOffice.CRM.Security.ISoDataLookup.html#SuperOffice_CRM_Security_ISoDataLookup_IsPersistedFieldValueKnown_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    isExternal: true
    href: SuperOffice.CRM.Security.ISoDataLookup.html#SuperOffice_CRM_Security_ISoDataLookup_IsPersistedFieldValueKnown_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.IsGhostField*
  commentId: Overload:SuperOffice.Data.SoDataReader.IsGhostField
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_IsGhostField_SuperOffice_Data_SQL_FieldInfo_
  name: IsGhostField
  nameWithType: SoDataReader.IsGhostField
  fullName: SuperOffice.Data.SoDataReader.IsGhostField
- uid: SuperOffice.CRM.Security.ISoDataLookup.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.ISoDataLookup.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.ISoDataLookup
  isExternal: true
  href: SuperOffice.CRM.Security.ISoDataLookup.html#SuperOffice_CRM_Security_ISoDataLookup_IsGhostField_SuperOffice_Data_SQL_FieldInfo_
  name: IsGhostField(FieldInfo)
  nameWithType: ISoDataLookup.IsGhostField(FieldInfo)
  fullName: SuperOffice.CRM.Security.ISoDataLookup.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    isExternal: true
    href: SuperOffice.CRM.Security.ISoDataLookup.html#SuperOffice_CRM_Security_ISoDataLookup_IsGhostField_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    isExternal: true
    href: SuperOffice.CRM.Security.ISoDataLookup.html#SuperOffice_CRM_Security_ISoDataLookup_IsGhostField_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.GetIndexOfField*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetIndexOfField
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetIndexOfField_SuperOffice_Data_SQL_FieldInfo_
  name: GetIndexOfField
  nameWithType: SoDataReader.GetIndexOfField
  fullName: SuperOffice.Data.SoDataReader.GetIndexOfField
- uid: SuperOffice.Data.SoDataReader.GetKnownFields*
  commentId: Overload:SuperOffice.Data.SoDataReader.GetKnownFields
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_GetKnownFields
  name: GetKnownFields
  nameWithType: SoDataReader.GetKnownFields
  fullName: SuperOffice.Data.SoDataReader.GetKnownFields
- uid: SuperOffice.CRM.Security.ISoDataLookup.GetKnownFields
  commentId: M:SuperOffice.CRM.Security.ISoDataLookup.GetKnownFields
  parent: SuperOffice.CRM.Security.ISoDataLookup
  isExternal: true
  href: SuperOffice.CRM.Security.ISoDataLookup.html#SuperOffice_CRM_Security_ISoDataLookup_GetKnownFields
  name: GetKnownFields()
  nameWithType: ISoDataLookup.GetKnownFields()
  fullName: SuperOffice.CRM.Security.ISoDataLookup.GetKnownFields()
  spec.csharp:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.GetKnownFields
    name: GetKnownFields
    isExternal: true
    href: SuperOffice.CRM.Security.ISoDataLookup.html#SuperOffice_CRM_Security_ISoDataLookup_GetKnownFields
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.GetKnownFields
    name: GetKnownFields
    isExternal: true
    href: SuperOffice.CRM.Security.ISoDataLookup.html#SuperOffice_CRM_Security_ISoDataLookup_GetKnownFields
  - name: (
  - name: )
- uid: System.Collections.Generic.List{SuperOffice.Data.SQL.FieldInfo}
  commentId: T:System.Collections.Generic.List{SuperOffice.Data.SQL.FieldInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<FieldInfo>
  nameWithType: List<FieldInfo>
  fullName: System.Collections.Generic.List<SuperOffice.Data.SQL.FieldInfo>
  nameWithType.vb: List(Of FieldInfo)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.Data.SQL.FieldInfo)
  name.vb: List(Of FieldInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SuperOffice.Data.SoDataReader.EndIgnoreSentryCheck
  commentId: M:SuperOffice.Data.SoDataReader.EndIgnoreSentryCheck
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_EndIgnoreSentryCheck
  name: EndIgnoreSentryCheck()
  nameWithType: SoDataReader.EndIgnoreSentryCheck()
  fullName: SuperOffice.Data.SoDataReader.EndIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.Data.SoDataReader.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    isExternal: true
    href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_EndIgnoreSentryCheck
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SoDataReader.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    isExternal: true
    href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_EndIgnoreSentryCheck
  - name: (
  - name: )
- uid: SuperOffice.Data.SoDataReader.BeginIgnoreSentryCheck*
  commentId: Overload:SuperOffice.Data.SoDataReader.BeginIgnoreSentryCheck
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_BeginIgnoreSentryCheck
  name: BeginIgnoreSentryCheck
  nameWithType: SoDataReader.BeginIgnoreSentryCheck
  fullName: SuperOffice.Data.SoDataReader.BeginIgnoreSentryCheck
- uid: SuperOffice.CRM.Security.ISentryIgnorable.BeginIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Security.ISentryIgnorable.BeginIgnoreSentryCheck
  parent: SuperOffice.CRM.Security.ISentryIgnorable
  isExternal: true
  href: SuperOffice.CRM.Security.ISentryIgnorable.html#SuperOffice_CRM_Security_ISentryIgnorable_BeginIgnoreSentryCheck
  name: BeginIgnoreSentryCheck()
  nameWithType: ISentryIgnorable.BeginIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Security.ISentryIgnorable.BeginIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Security.ISentryIgnorable.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    isExternal: true
    href: SuperOffice.CRM.Security.ISentryIgnorable.html#SuperOffice_CRM_Security_ISentryIgnorable_BeginIgnoreSentryCheck
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.ISentryIgnorable.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    isExternal: true
    href: SuperOffice.CRM.Security.ISentryIgnorable.html#SuperOffice_CRM_Security_ISentryIgnorable_BeginIgnoreSentryCheck
  - name: (
  - name: )
- uid: SuperOffice.CRM.Security.IgnoreSentryCheck
  commentId: T:SuperOffice.CRM.Security.IgnoreSentryCheck
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.IgnoreSentryCheck.html
  name: IgnoreSentryCheck
  nameWithType: IgnoreSentryCheck
  fullName: SuperOffice.CRM.Security.IgnoreSentryCheck
- uid: SuperOffice.Exceptions.SoException
  commentId: T:SuperOffice.Exceptions.SoException
  parent: SuperOffice.Exceptions
  isExternal: true
  href: SuperOffice.Exceptions.SoException.html
  name: SoException
  nameWithType: SoException
  fullName: SuperOffice.Exceptions.SoException
- uid: SuperOffice.Data.SoDataReader.EndIgnoreSentryCheck*
  commentId: Overload:SuperOffice.Data.SoDataReader.EndIgnoreSentryCheck
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_EndIgnoreSentryCheck
  name: EndIgnoreSentryCheck
  nameWithType: SoDataReader.EndIgnoreSentryCheck
  fullName: SuperOffice.Data.SoDataReader.EndIgnoreSentryCheck
- uid: SuperOffice.CRM.Security.ISentryIgnorable.EndIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Security.ISentryIgnorable.EndIgnoreSentryCheck
  parent: SuperOffice.CRM.Security.ISentryIgnorable
  isExternal: true
  href: SuperOffice.CRM.Security.ISentryIgnorable.html#SuperOffice_CRM_Security_ISentryIgnorable_EndIgnoreSentryCheck
  name: EndIgnoreSentryCheck()
  nameWithType: ISentryIgnorable.EndIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Security.ISentryIgnorable.EndIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Security.ISentryIgnorable.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    isExternal: true
    href: SuperOffice.CRM.Security.ISentryIgnorable.html#SuperOffice_CRM_Security_ISentryIgnorable_EndIgnoreSentryCheck
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.ISentryIgnorable.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    isExternal: true
    href: SuperOffice.CRM.Security.ISentryIgnorable.html#SuperOffice_CRM_Security_ISentryIgnorable_EndIgnoreSentryCheck
  - name: (
  - name: )
- uid: SuperOffice.Exceptions
  commentId: N:SuperOffice.Exceptions
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Exceptions
  nameWithType: SuperOffice.Exceptions
  fullName: SuperOffice.Exceptions
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Exceptions
    name: Exceptions
    isExternal: true
    href: SuperOffice.Exceptions.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Exceptions
    name: Exceptions
    isExternal: true
    href: SuperOffice.Exceptions.html
- uid: SuperOffice.Data.SoDataReader.NextResult*
  commentId: Overload:SuperOffice.Data.SoDataReader.NextResult
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_NextResult
  name: NextResult
  nameWithType: SoDataReader.NextResult
  fullName: SuperOffice.Data.SoDataReader.NextResult
- uid: System.Data.IDataReader.NextResult
  commentId: M:System.Data.IDataReader.NextResult
  parent: System.Data.IDataReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatareader.nextresult
  name: NextResult()
  nameWithType: IDataReader.NextResult()
  fullName: System.Data.IDataReader.NextResult()
  spec.csharp:
  - uid: System.Data.IDataReader.NextResult
    name: NextResult
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatareader.nextresult
  - name: (
  - name: )
  spec.vb:
  - uid: System.Data.IDataReader.NextResult
    name: NextResult
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatareader.nextresult
  - name: (
  - name: )
- uid: SuperOffice.Data.SoDataReader.Read*
  commentId: Overload:SuperOffice.Data.SoDataReader.Read
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_Read
  name: Read
  nameWithType: SoDataReader.Read
  fullName: SuperOffice.Data.SoDataReader.Read
- uid: System.Data.IDataReader.Read
  commentId: M:System.Data.IDataReader.Read
  parent: System.Data.IDataReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatareader.read
  name: Read()
  nameWithType: IDataReader.Read()
  fullName: System.Data.IDataReader.Read()
  spec.csharp:
  - uid: System.Data.IDataReader.Read
    name: Read
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatareader.read
  - name: (
  - name: )
  spec.vb:
  - uid: System.Data.IDataReader.Read
    name: Read
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatareader.read
  - name: (
  - name: )
- uid: SuperOffice.Data.SoDataReader.IsDBNull*
  commentId: Overload:SuperOffice.Data.SoDataReader.IsDBNull
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_IsDBNull_System_Int32_
  name: IsDBNull
  nameWithType: SoDataReader.IsDBNull
  fullName: SuperOffice.Data.SoDataReader.IsDBNull
- uid: System.Data.IDataRecord.IsDBNull(System.Int32)
  commentId: M:System.Data.IDataRecord.IsDBNull(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.isdbnull
  name: IsDBNull(int)
  nameWithType: IDataRecord.IsDBNull(int)
  fullName: System.Data.IDataRecord.IsDBNull(int)
  nameWithType.vb: IDataRecord.IsDBNull(Integer)
  fullName.vb: System.Data.IDataRecord.IsDBNull(Integer)
  name.vb: IsDBNull(Integer)
  spec.csharp:
  - uid: System.Data.IDataRecord.IsDBNull(System.Int32)
    name: IsDBNull
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.isdbnull
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Data.IDataRecord.IsDBNull(System.Int32)
    name: IsDBNull
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.isdbnull
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Data.ISoDataRecord.IsDBNull(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.ISoDataRecord.IsDBNull(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_IsDBNull_SuperOffice_Data_SQL_FieldInfo_
  name: IsDBNull(FieldInfo)
  nameWithType: ISoDataRecord.IsDBNull(FieldInfo)
  fullName: SuperOffice.Data.ISoDataRecord.IsDBNull(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.ISoDataRecord.IsDBNull(SuperOffice.Data.SQL.FieldInfo)
    name: IsDBNull
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_IsDBNull_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.ISoDataRecord.IsDBNull(SuperOffice.Data.SQL.FieldInfo)
    name: IsDBNull
    isExternal: true
    href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_IsDBNull_SuperOffice_Data_SQL_FieldInfo_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: SuperOffice.Data.SoDataReader.Read
  commentId: M:SuperOffice.Data.SoDataReader.Read
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_Read
  name: Read()
  nameWithType: SoDataReader.Read()
  fullName: SuperOffice.Data.SoDataReader.Read()
  spec.csharp:
  - uid: SuperOffice.Data.SoDataReader.Read
    name: Read
    isExternal: true
    href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_Read
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SoDataReader.Read
    name: Read
    isExternal: true
    href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_Read
  - name: (
  - name: )
- uid: SuperOffice.Data.SoDataReader.IsAutoClose*
  commentId: Overload:SuperOffice.Data.SoDataReader.IsAutoClose
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_IsAutoClose
  name: IsAutoClose
  nameWithType: SoDataReader.IsAutoClose
  fullName: SuperOffice.Data.SoDataReader.IsAutoClose
- uid: SuperOffice.Data.SoDataReader.Sentries*
  commentId: Overload:SuperOffice.Data.SoDataReader.Sentries
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_Sentries
  name: Sentries
  nameWithType: SoDataReader.Sentries
  fullName: SuperOffice.Data.SoDataReader.Sentries
- uid: SuperOffice.CRM.Security.SentryCollection
  commentId: T:SuperOffice.CRM.Security.SentryCollection
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.SentryCollection.html
  name: SentryCollection
  nameWithType: SentryCollection
  fullName: SuperOffice.CRM.Security.SentryCollection
- uid: SuperOffice.Data.SoDataReader.Depth*
  commentId: Overload:SuperOffice.Data.SoDataReader.Depth
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_Depth
  name: Depth
  nameWithType: SoDataReader.Depth
  fullName: SuperOffice.Data.SoDataReader.Depth
- uid: System.Data.IDataReader.Depth
  commentId: P:System.Data.IDataReader.Depth
  parent: System.Data.IDataReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatareader.depth
  name: Depth
  nameWithType: IDataReader.Depth
  fullName: System.Data.IDataReader.Depth
- uid: SuperOffice.Data.SoDataReader.IsClosed*
  commentId: Overload:SuperOffice.Data.SoDataReader.IsClosed
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_IsClosed
  name: IsClosed
  nameWithType: SoDataReader.IsClosed
  fullName: SuperOffice.Data.SoDataReader.IsClosed
- uid: System.Data.IDataReader.IsClosed
  commentId: P:System.Data.IDataReader.IsClosed
  parent: System.Data.IDataReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatareader.isclosed
  name: IsClosed
  nameWithType: IDataReader.IsClosed
  fullName: System.Data.IDataReader.IsClosed
- uid: SuperOffice.Data.SoDataReader.RecordsAffected*
  commentId: Overload:SuperOffice.Data.SoDataReader.RecordsAffected
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_RecordsAffected
  name: RecordsAffected
  nameWithType: SoDataReader.RecordsAffected
  fullName: SuperOffice.Data.SoDataReader.RecordsAffected
- uid: System.Data.IDataReader.RecordsAffected
  commentId: P:System.Data.IDataReader.RecordsAffected
  parent: System.Data.IDataReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatareader.recordsaffected
  name: RecordsAffected
  nameWithType: IDataReader.RecordsAffected
  fullName: System.Data.IDataReader.RecordsAffected
- uid: SuperOffice.Data.SoDataReader.DbRowsRead*
  commentId: Overload:SuperOffice.Data.SoDataReader.DbRowsRead
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_DbRowsRead
  name: DbRowsRead
  nameWithType: SoDataReader.DbRowsRead
  fullName: SuperOffice.Data.SoDataReader.DbRowsRead
- uid: SuperOffice.Data.SoDataReader.FieldCount*
  commentId: Overload:SuperOffice.Data.SoDataReader.FieldCount
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_FieldCount
  name: FieldCount
  nameWithType: SoDataReader.FieldCount
  fullName: SuperOffice.Data.SoDataReader.FieldCount
- uid: SuperOffice.Data.SoDataReader.Item*
  commentId: Overload:SuperOffice.Data.SoDataReader.Item
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_Item_System_Int32_
  name: this
  nameWithType: SoDataReader.this
  fullName: SuperOffice.Data.SoDataReader.this
  nameWithType.vb: SoDataReader.this[]
  fullName.vb: SuperOffice.Data.SoDataReader.this[]
  name.vb: this[]
- uid: System.Data.IDataRecord.Item(System.Int32)
  commentId: P:System.Data.IDataRecord.Item(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IDataRecord.this[int]
  fullName: System.Data.IDataRecord.this[int]
  nameWithType.vb: IDataRecord.this[](Integer)
  fullName.vb: System.Data.IDataRecord.this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Data.IDataRecord.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Data.IDataRecord.Item(System.String)
  commentId: P:System.Data.IDataRecord.Item(System.String)
  parent: System.Data.IDataRecord
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: this[string]
  nameWithType: IDataRecord.this[string]
  fullName: System.Data.IDataRecord.this[string]
  nameWithType.vb: IDataRecord.this[](String)
  fullName.vb: System.Data.IDataRecord.this[](String)
  name.vb: this[](String)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ']'
  spec.vb:
  - uid: System.Data.IDataRecord.Item(System.String)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatarecord.item
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.Data.SoDataReader.IsSentryIgnored*
  commentId: Overload:SuperOffice.Data.SoDataReader.IsSentryIgnored
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_IsSentryIgnored
  name: IsSentryIgnored
  nameWithType: SoDataReader.IsSentryIgnored
  fullName: SuperOffice.Data.SoDataReader.IsSentryIgnored
- uid: SuperOffice.CRM.Security.ISentryIgnorable.IsSentryIgnored
  commentId: P:SuperOffice.CRM.Security.ISentryIgnorable.IsSentryIgnored
  parent: SuperOffice.CRM.Security.ISentryIgnorable
  isExternal: true
  href: SuperOffice.CRM.Security.ISentryIgnorable.html#SuperOffice_CRM_Security_ISentryIgnorable_IsSentryIgnored
  name: IsSentryIgnored
  nameWithType: ISentryIgnorable.IsSentryIgnored
  fullName: SuperOffice.CRM.Security.ISentryIgnorable.IsSentryIgnored
- uid: SuperOffice.Data.SoDataReader.Reader*
  commentId: Overload:SuperOffice.Data.SoDataReader.Reader
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html#SuperOffice_Data_SoDataReader_Reader
  name: Reader
  nameWithType: SoDataReader.Reader
  fullName: SuperOffice.Data.SoDataReader.Reader
- uid: SuperOffice.Data.ISoDataRecord.Reader
  commentId: P:SuperOffice.Data.ISoDataRecord.Reader
  parent: SuperOffice.Data.ISoDataRecord
  isExternal: true
  href: SuperOffice.Data.ISoDataRecord.html#SuperOffice_Data_ISoDataRecord_Reader
  name: Reader
  nameWithType: ISoDataRecord.Reader
  fullName: SuperOffice.Data.ISoDataRecord.Reader
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
