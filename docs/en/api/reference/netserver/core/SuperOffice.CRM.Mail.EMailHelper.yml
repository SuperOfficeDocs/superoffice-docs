### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Mail.EMailHelper
  commentId: T:SuperOffice.CRM.Mail.EMailHelper
  id: EMailHelper
  parent: SuperOffice.CRM.Mail
  children:
  - SuperOffice.CRM.Mail.EMailHelper.GetEnvelopeSet(System.Collections.Generic.SortedDictionary{System.String,SuperOffice.CRM.Mail.MailEnvelope},System.Int32,System.Int32,System.Boolean)
  - SuperOffice.CRM.Mail.EMailHelper.GetFileExtensionValidatorAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.EMailHelper.GetMissingIds(System.Collections.Generic.List{SuperOffice.CRM.Mail.MailEnvelope},SuperOffice.CRM.Mail.MailEnvelope[])
  - SuperOffice.CRM.Mail.EMailHelper.GetPlainHTMLBody(System.String)
  - SuperOffice.CRM.Mail.EMailHelper.GetSortString(SuperOffice.CRM.Mail.MailSortCriterion,SuperOffice.CRM.Mail.MailEnvelope)
  - SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesArchivedInfoAsync(SuperOffice.CRM.Mail.MailEnvelope[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesCompanyPersonInfoAsync(SuperOffice.CRM.Mail.MailEnvelope[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.EMailHelper.ResolveAddressAsync(System.Int32[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.EMailHelper.ResolveAddressAsync(System.String,System.Threading.CancellationToken,System.Boolean)
  - SuperOffice.CRM.Mail.EMailHelper.ResolveAddressesAsync(SuperOffice.CRM.Mail.MailItem,System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.EMailHelper.ResolveAddressesAsync(System.Collections.Generic.List{SuperOffice.CRM.Mail.MailAddress},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: EMailHelper
  nameWithType: EMailHelper
  fullName: SuperOffice.CRM.Mail.EMailHelper
  type: Class
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Helper class for mail tasks
  example: []
  syntax:
    content: public static class EMailHelper
    content.vb: Public Module EMailHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: SuperOffice.CRM.Mail.EMailHelper.GetEnvelopeSet(System.Collections.Generic.SortedDictionary{System.String,SuperOffice.CRM.Mail.MailEnvelope},System.Int32,System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Mail.EMailHelper.GetEnvelopeSet(System.Collections.Generic.SortedDictionary{System.String,SuperOffice.CRM.Mail.MailEnvelope},System.Int32,System.Int32,System.Boolean)
  id: GetEnvelopeSet(System.Collections.Generic.SortedDictionary{System.String,SuperOffice.CRM.Mail.MailEnvelope},System.Int32,System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Mail.EMailHelper
  langs:
  - csharp
  - vb
  name: GetEnvelopeSet(SortedDictionary<string, MailEnvelope>, int, int, bool)
  nameWithType: EMailHelper.GetEnvelopeSet(SortedDictionary<string, MailEnvelope>, int, int, bool)
  fullName: SuperOffice.CRM.Mail.EMailHelper.GetEnvelopeSet(System.Collections.Generic.SortedDictionary<string, SuperOffice.CRM.Mail.MailEnvelope>, int, int, bool)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Given a sorted list of MailEnvelopes, retrieve a specific set
  example: []
  syntax:
    content: public static List<MailEnvelope> GetEnvelopeSet(SortedDictionary<string, MailEnvelope> sortedEnvelopes, int from, int to, bool reverse)
    parameters:
    - id: sortedEnvelopes
      type: System.Collections.Generic.SortedDictionary{System.String,SuperOffice.CRM.Mail.MailEnvelope}
      description: Source list to retrieve items from
    - id: from
      type: System.Int32
      description: Retrieve items from this index
    - id: to
      type: System.Int32
      description: Retrieve items to this index
    - id: reverse
      type: System.Boolean
      description: If true, retrieve items starting from the end of the list
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.Mail.MailEnvelope}
      description: List of MailEnvelopes as specified by input parameters
    content.vb: Public Shared Function GetEnvelopeSet(sortedEnvelopes As SortedDictionary(Of String, MailEnvelope), from As Integer, [to] As Integer, reverse As Boolean) As List(Of MailEnvelope)
  overload: SuperOffice.CRM.Mail.EMailHelper.GetEnvelopeSet*
  nameWithType.vb: EMailHelper.GetEnvelopeSet(SortedDictionary(Of String, MailEnvelope), Integer, Integer, Boolean)
  fullName.vb: SuperOffice.CRM.Mail.EMailHelper.GetEnvelopeSet(System.Collections.Generic.SortedDictionary(Of String, SuperOffice.CRM.Mail.MailEnvelope), Integer, Integer, Boolean)
  name.vb: GetEnvelopeSet(SortedDictionary(Of String, MailEnvelope), Integer, Integer, Boolean)
- uid: SuperOffice.CRM.Mail.EMailHelper.GetMissingIds(System.Collections.Generic.List{SuperOffice.CRM.Mail.MailEnvelope},SuperOffice.CRM.Mail.MailEnvelope[])
  commentId: M:SuperOffice.CRM.Mail.EMailHelper.GetMissingIds(System.Collections.Generic.List{SuperOffice.CRM.Mail.MailEnvelope},SuperOffice.CRM.Mail.MailEnvelope[])
  id: GetMissingIds(System.Collections.Generic.List{SuperOffice.CRM.Mail.MailEnvelope},SuperOffice.CRM.Mail.MailEnvelope[])
  parent: SuperOffice.CRM.Mail.EMailHelper
  langs:
  - csharp
  - vb
  name: GetMissingIds(List<MailEnvelope>, MailEnvelope[])
  nameWithType: EMailHelper.GetMissingIds(List<MailEnvelope>, MailEnvelope[])
  fullName: SuperOffice.CRM.Mail.EMailHelper.GetMissingIds(System.Collections.Generic.List<SuperOffice.CRM.Mail.MailEnvelope>, SuperOffice.CRM.Mail.MailEnvelope[])
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Find all items that exist in first set, and not in second set
  example: []
  syntax:
    content: public static List<int> GetMissingIds(List<MailEnvelope> first, MailEnvelope[] second)
    parameters:
    - id: first
      type: System.Collections.Generic.List{SuperOffice.CRM.Mail.MailEnvelope}
      description: First set of MailEnvelope items
    - id: second
      type: SuperOffice.CRM.Mail.MailEnvelope[]
      description: Second set of MailEnvelope items
    return:
      type: System.Collections.Generic.List{System.Int32}
      description: List of MailEnvelope.ServerId
    content.vb: Public Shared Function GetMissingIds(first As List(Of MailEnvelope), second As MailEnvelope()) As List(Of Integer)
  overload: SuperOffice.CRM.Mail.EMailHelper.GetMissingIds*
  nameWithType.vb: EMailHelper.GetMissingIds(List(Of MailEnvelope), MailEnvelope())
  fullName.vb: SuperOffice.CRM.Mail.EMailHelper.GetMissingIds(System.Collections.Generic.List(Of SuperOffice.CRM.Mail.MailEnvelope), SuperOffice.CRM.Mail.MailEnvelope())
  name.vb: GetMissingIds(List(Of MailEnvelope), MailEnvelope())
- uid: SuperOffice.CRM.Mail.EMailHelper.GetSortString(SuperOffice.CRM.Mail.MailSortCriterion,SuperOffice.CRM.Mail.MailEnvelope)
  commentId: M:SuperOffice.CRM.Mail.EMailHelper.GetSortString(SuperOffice.CRM.Mail.MailSortCriterion,SuperOffice.CRM.Mail.MailEnvelope)
  id: GetSortString(SuperOffice.CRM.Mail.MailSortCriterion,SuperOffice.CRM.Mail.MailEnvelope)
  parent: SuperOffice.CRM.Mail.EMailHelper
  langs:
  - csharp
  - vb
  name: GetSortString(MailSortCriterion, MailEnvelope)
  nameWithType: EMailHelper.GetSortString(MailSortCriterion, MailEnvelope)
  fullName: SuperOffice.CRM.Mail.EMailHelper.GetSortString(SuperOffice.CRM.Mail.MailSortCriterion, SuperOffice.CRM.Mail.MailEnvelope)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Based on a sort order, find and format the proper value of MailEnvelope
  example: []
  syntax:
    content: public static string GetSortString(MailSortCriterion sortOrder, MailEnvelope env)
    parameters:
    - id: sortOrder
      type: SuperOffice.CRM.Mail.MailSortCriterion
      description: What field to use for sorting
    - id: env
      type: SuperOffice.CRM.Mail.MailEnvelope
      description: The envelope instance to get data from
    return:
      type: System.String
      description: Formatted string that may be used for sorting a set of MailEnvelopes
    content.vb: Public Shared Function GetSortString(sortOrder As MailSortCriterion, env As MailEnvelope) As String
  overload: SuperOffice.CRM.Mail.EMailHelper.GetSortString*
- uid: SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesCompanyPersonInfoAsync(SuperOffice.CRM.Mail.MailEnvelope[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesCompanyPersonInfoAsync(SuperOffice.CRM.Mail.MailEnvelope[],System.Threading.CancellationToken)
  id: PopulateEnvelopesCompanyPersonInfoAsync(SuperOffice.CRM.Mail.MailEnvelope[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.EMailHelper
  langs:
  - csharp
  - vb
  name: PopulateEnvelopesCompanyPersonInfoAsync(MailEnvelope[], CancellationToken)
  nameWithType: EMailHelper.PopulateEnvelopesCompanyPersonInfoAsync(MailEnvelope[], CancellationToken)
  fullName: SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesCompanyPersonInfoAsync(SuperOffice.CRM.Mail.MailEnvelope[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: >-
    Loop through envelopes and find companies and persons from SuperOffice that match 

    the e-mails in sender properties (From address) of the envelope
  example: []
  syntax:
    content: public static Task PopulateEnvelopesCompanyPersonInfoAsync(MailEnvelope[] envelopes, CancellationToken cancellationToken)
    parameters:
    - id: envelopes
      type: SuperOffice.CRM.Mail.MailEnvelope[]
      description: Envelopes to populate
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function PopulateEnvelopesCompanyPersonInfoAsync(envelopes As MailEnvelope(), cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesCompanyPersonInfoAsync*
  nameWithType.vb: EMailHelper.PopulateEnvelopesCompanyPersonInfoAsync(MailEnvelope(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesCompanyPersonInfoAsync(SuperOffice.CRM.Mail.MailEnvelope(), System.Threading.CancellationToken)
  name.vb: PopulateEnvelopesCompanyPersonInfoAsync(MailEnvelope(), CancellationToken)
- uid: SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesArchivedInfoAsync(SuperOffice.CRM.Mail.MailEnvelope[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesArchivedInfoAsync(SuperOffice.CRM.Mail.MailEnvelope[],System.Threading.CancellationToken)
  id: PopulateEnvelopesArchivedInfoAsync(SuperOffice.CRM.Mail.MailEnvelope[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.EMailHelper
  langs:
  - csharp
  - vb
  name: PopulateEnvelopesArchivedInfoAsync(MailEnvelope[], CancellationToken)
  nameWithType: EMailHelper.PopulateEnvelopesArchivedInfoAsync(MailEnvelope[], CancellationToken)
  fullName: SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesArchivedInfoAsync(SuperOffice.CRM.Mail.MailEnvelope[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Loop through envelopes and find connections to archived activities/documents
  example: []
  syntax:
    content: public static Task PopulateEnvelopesArchivedInfoAsync(MailEnvelope[] envelopes, CancellationToken cancellationToken)
    parameters:
    - id: envelopes
      type: SuperOffice.CRM.Mail.MailEnvelope[]
      description: Envelopes to populate
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function PopulateEnvelopesArchivedInfoAsync(envelopes As MailEnvelope(), cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesArchivedInfoAsync*
  nameWithType.vb: EMailHelper.PopulateEnvelopesArchivedInfoAsync(MailEnvelope(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesArchivedInfoAsync(SuperOffice.CRM.Mail.MailEnvelope(), System.Threading.CancellationToken)
  name.vb: PopulateEnvelopesArchivedInfoAsync(MailEnvelope(), CancellationToken)
- uid: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressAsync(System.String,System.Threading.CancellationToken,System.Boolean)
  commentId: M:SuperOffice.CRM.Mail.EMailHelper.ResolveAddressAsync(System.String,System.Threading.CancellationToken,System.Boolean)
  id: ResolveAddressAsync(System.String,System.Threading.CancellationToken,System.Boolean)
  parent: SuperOffice.CRM.Mail.EMailHelper
  langs:
  - csharp
  - vb
  name: ResolveAddressAsync(string, CancellationToken, bool)
  nameWithType: EMailHelper.ResolveAddressAsync(string, CancellationToken, bool)
  fullName: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressAsync(string, System.Threading.CancellationToken, bool)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Search database for a single e-mail address, and return list with matched data
  example: []
  syntax:
    content: public static Task<MailAddress[]> ResolveAddressAsync(string address, CancellationToken cancellationToken, bool onlyEmail = false)
    parameters:
    - id: address
      type: System.String
      description: Address to look for
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    - id: onlyEmail
      type: System.Boolean
      description: Bool we only want to search for EmailType.Email
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.MailAddress[]}
      description: List of MailAddress instances with matched data
    content.vb: Public Shared Function ResolveAddressAsync(address As String, cancellationToken As CancellationToken, onlyEmail As Boolean = False) As Task(Of MailAddress())
  overload: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressAsync*
  nameWithType.vb: EMailHelper.ResolveAddressAsync(String, CancellationToken, Boolean)
  fullName.vb: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressAsync(String, System.Threading.CancellationToken, Boolean)
  name.vb: ResolveAddressAsync(String, CancellationToken, Boolean)
- uid: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressAsync(System.Int32[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.EMailHelper.ResolveAddressAsync(System.Int32[],System.Threading.CancellationToken)
  id: ResolveAddressAsync(System.Int32[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.EMailHelper
  langs:
  - csharp
  - vb
  name: ResolveAddressAsync(int[], CancellationToken)
  nameWithType: EMailHelper.ResolveAddressAsync(int[], CancellationToken)
  fullName: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressAsync(int[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Search database for one or more e-mail addresses by id, and return list with matched data
  example: []
  syntax:
    content: public static Task<MailAddress[]> ResolveAddressAsync(int[] emailIds, CancellationToken cancellationToken)
    parameters:
    - id: emailIds
      type: System.Int32[]
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.MailAddress[]}
      description: List of MailAddress instances with matched data
    content.vb: Public Shared Function ResolveAddressAsync(emailIds As Integer(), cancellationToken As CancellationToken) As Task(Of MailAddress())
  overload: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressAsync*
  nameWithType.vb: EMailHelper.ResolveAddressAsync(Integer(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressAsync(Integer(), System.Threading.CancellationToken)
  name.vb: ResolveAddressAsync(Integer(), CancellationToken)
- uid: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressesAsync(SuperOffice.CRM.Mail.MailItem,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.EMailHelper.ResolveAddressesAsync(SuperOffice.CRM.Mail.MailItem,System.Threading.CancellationToken)
  id: ResolveAddressesAsync(SuperOffice.CRM.Mail.MailItem,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.EMailHelper
  langs:
  - csharp
  - vb
  name: ResolveAddressesAsync(MailItem, CancellationToken)
  nameWithType: EMailHelper.ResolveAddressesAsync(MailItem, CancellationToken)
  fullName: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressesAsync(SuperOffice.CRM.Mail.MailItem, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: >-
    Search database for all addresses in the provided set of MailAddress instances

    Limit each query to kMaxQueryInCount in parameters
  example: []
  syntax:
    content: public static Task ResolveAddressesAsync(MailItem mailItem, CancellationToken cancellationToken)
    parameters:
    - id: mailItem
      type: SuperOffice.CRM.Mail.MailItem
      description: MailItem whose addresses we want to resolve.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function ResolveAddressesAsync(mailItem As MailItem, cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressesAsync*
- uid: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressesAsync(System.Collections.Generic.List{SuperOffice.CRM.Mail.MailAddress},System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.EMailHelper.ResolveAddressesAsync(System.Collections.Generic.List{SuperOffice.CRM.Mail.MailAddress},System.Threading.CancellationToken)
  id: ResolveAddressesAsync(System.Collections.Generic.List{SuperOffice.CRM.Mail.MailAddress},System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.EMailHelper
  langs:
  - csharp
  - vb
  name: ResolveAddressesAsync(List<MailAddress>, CancellationToken)
  nameWithType: EMailHelper.ResolveAddressesAsync(List<MailAddress>, CancellationToken)
  fullName: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressesAsync(System.Collections.Generic.List<SuperOffice.CRM.Mail.MailAddress>, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: >-
    Search database for all addresses in the provided set of MailAddress instances

    Limit each query to kMaxQueryInCount in parameters
  example: []
  syntax:
    content: public static Task ResolveAddressesAsync(List<MailAddress> addressObjects, CancellationToken cancellationToken)
    parameters:
    - id: addressObjects
      type: System.Collections.Generic.List{SuperOffice.CRM.Mail.MailAddress}
      description: List of MailAddress instances. MailAddress.Address property need to be populated in advance.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function ResolveAddressesAsync(addressObjects As List(Of MailAddress), cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressesAsync*
  nameWithType.vb: EMailHelper.ResolveAddressesAsync(List(Of MailAddress), CancellationToken)
  fullName.vb: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressesAsync(System.Collections.Generic.List(Of SuperOffice.CRM.Mail.MailAddress), System.Threading.CancellationToken)
  name.vb: ResolveAddressesAsync(List(Of MailAddress), CancellationToken)
- uid: SuperOffice.CRM.Mail.EMailHelper.GetPlainHTMLBody(System.String)
  commentId: M:SuperOffice.CRM.Mail.EMailHelper.GetPlainHTMLBody(System.String)
  id: GetPlainHTMLBody(System.String)
  parent: SuperOffice.CRM.Mail.EMailHelper
  langs:
  - csharp
  - vb
  name: GetPlainHTMLBody(string)
  nameWithType: EMailHelper.GetPlainHTMLBody(string)
  fullName: SuperOffice.CRM.Mail.EMailHelper.GetPlainHTMLBody(string)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Retrieve plain text version of a html source
  example: []
  syntax:
    content: public static string GetPlainHTMLBody(string source)
    parameters:
    - id: source
      type: System.String
      description: HTML to convert to plain text
    return:
      type: System.String
      description: Plain text version of the provided html
    content.vb: Public Shared Function GetPlainHTMLBody(source As String) As String
  overload: SuperOffice.CRM.Mail.EMailHelper.GetPlainHTMLBody*
  nameWithType.vb: EMailHelper.GetPlainHTMLBody(String)
  fullName.vb: SuperOffice.CRM.Mail.EMailHelper.GetPlainHTMLBody(String)
  name.vb: GetPlainHTMLBody(String)
- uid: SuperOffice.CRM.Mail.EMailHelper.GetFileExtensionValidatorAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.EMailHelper.GetFileExtensionValidatorAsync(System.Threading.CancellationToken)
  id: GetFileExtensionValidatorAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.EMailHelper
  langs:
  - csharp
  - vb
  name: GetFileExtensionValidatorAsync(CancellationToken)
  nameWithType: EMailHelper.GetFileExtensionValidatorAsync(CancellationToken)
  fullName: SuperOffice.CRM.Mail.EMailHelper.GetFileExtensionValidatorAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Get a validator for file extensions
  example: []
  syntax:
    content: public static Task<FileExtensionValidator> GetFileExtensionValidatorAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Util.FileExtensionValidator}
    content.vb: Public Shared Function GetFileExtensionValidatorAsync(cancellationToken As CancellationToken = Nothing) As Task(Of FileExtensionValidator)
  overload: SuperOffice.CRM.Mail.EMailHelper.GetFileExtensionValidatorAsync*
references:
- uid: SuperOffice.CRM.Mail
  commentId: N:SuperOffice.CRM.Mail
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Mail
  nameWithType: SuperOffice.CRM.Mail
  fullName: SuperOffice.CRM.Mail
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Mail
    name: Mail
    isExternal: true
    href: SuperOffice.CRM.Mail.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Mail
    name: Mail
    isExternal: true
    href: SuperOffice.CRM.Mail.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Mail.EMailHelper.GetEnvelopeSet*
  commentId: Overload:SuperOffice.CRM.Mail.EMailHelper.GetEnvelopeSet
  isExternal: true
  href: SuperOffice.CRM.Mail.EMailHelper.html#SuperOffice_CRM_Mail_EMailHelper_GetEnvelopeSet_System_Collections_Generic_SortedDictionary_System_String_SuperOffice_CRM_Mail_MailEnvelope__System_Int32_System_Int32_System_Boolean_
  name: GetEnvelopeSet
  nameWithType: EMailHelper.GetEnvelopeSet
  fullName: SuperOffice.CRM.Mail.EMailHelper.GetEnvelopeSet
- uid: System.Collections.Generic.SortedDictionary{System.String,SuperOffice.CRM.Mail.MailEnvelope}
  commentId: T:System.Collections.Generic.SortedDictionary{System.String,SuperOffice.CRM.Mail.MailEnvelope}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.SortedDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sorteddictionary-2
  name: SortedDictionary<string, MailEnvelope>
  nameWithType: SortedDictionary<string, MailEnvelope>
  fullName: System.Collections.Generic.SortedDictionary<string, SuperOffice.CRM.Mail.MailEnvelope>
  nameWithType.vb: SortedDictionary(Of String, MailEnvelope)
  fullName.vb: System.Collections.Generic.SortedDictionary(Of String, SuperOffice.CRM.Mail.MailEnvelope)
  name.vb: SortedDictionary(Of String, MailEnvelope)
  spec.csharp:
  - uid: System.Collections.Generic.SortedDictionary`2
    name: SortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sorteddictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Mail.MailEnvelope
    name: MailEnvelope
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.SortedDictionary`2
    name: SortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sorteddictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Mail.MailEnvelope
    name: MailEnvelope
    isExternal: true
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.List{SuperOffice.CRM.Mail.MailEnvelope}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.Mail.MailEnvelope}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<MailEnvelope>
  nameWithType: List<MailEnvelope>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.Mail.MailEnvelope>
  nameWithType.vb: List(Of MailEnvelope)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.Mail.MailEnvelope)
  name.vb: List(Of MailEnvelope)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: SuperOffice.CRM.Mail.MailEnvelope
    name: MailEnvelope
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Mail.MailEnvelope
    name: MailEnvelope
    isExternal: true
  - name: )
- uid: System.Collections.Generic.SortedDictionary`2
  commentId: T:System.Collections.Generic.SortedDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sorteddictionary-2
  name: SortedDictionary<TKey, TValue>
  nameWithType: SortedDictionary<TKey, TValue>
  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>
  nameWithType.vb: SortedDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue)
  name.vb: SortedDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.SortedDictionary`2
    name: SortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sorteddictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.SortedDictionary`2
    name: SortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sorteddictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.CRM.Mail.EMailHelper.GetMissingIds*
  commentId: Overload:SuperOffice.CRM.Mail.EMailHelper.GetMissingIds
  isExternal: true
  href: SuperOffice.CRM.Mail.EMailHelper.html#SuperOffice_CRM_Mail_EMailHelper_GetMissingIds_System_Collections_Generic_List_SuperOffice_CRM_Mail_MailEnvelope__SuperOffice_CRM_Mail_MailEnvelope___
  name: GetMissingIds
  nameWithType: EMailHelper.GetMissingIds
  fullName: SuperOffice.CRM.Mail.EMailHelper.GetMissingIds
- uid: SuperOffice.CRM.Mail.MailEnvelope[]
  isExternal: true
  name: MailEnvelope[]
  nameWithType: MailEnvelope[]
  fullName: SuperOffice.CRM.Mail.MailEnvelope[]
  nameWithType.vb: MailEnvelope()
  fullName.vb: SuperOffice.CRM.Mail.MailEnvelope()
  name.vb: MailEnvelope()
  spec.csharp:
  - uid: SuperOffice.CRM.Mail.MailEnvelope
    name: MailEnvelope
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Mail.MailEnvelope
    name: MailEnvelope
    isExternal: true
  - name: (
  - name: )
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<int>
  nameWithType: List<int>
  fullName: System.Collections.Generic.List<int>
  nameWithType.vb: List(Of Integer)
  fullName.vb: System.Collections.Generic.List(Of Integer)
  name.vb: List(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.CRM.Mail.EMailHelper.GetSortString*
  commentId: Overload:SuperOffice.CRM.Mail.EMailHelper.GetSortString
  isExternal: true
  href: SuperOffice.CRM.Mail.EMailHelper.html#SuperOffice_CRM_Mail_EMailHelper_GetSortString_SuperOffice_CRM_Mail_MailSortCriterion_SuperOffice_CRM_Mail_MailEnvelope_
  name: GetSortString
  nameWithType: EMailHelper.GetSortString
  fullName: SuperOffice.CRM.Mail.EMailHelper.GetSortString
- uid: SuperOffice.CRM.Mail.MailSortCriterion
  commentId: T:SuperOffice.CRM.Mail.MailSortCriterion
  parent: SuperOffice.CRM.Mail
  isExternal: true
  name: MailSortCriterion
  nameWithType: MailSortCriterion
  fullName: SuperOffice.CRM.Mail.MailSortCriterion
- uid: SuperOffice.CRM.Mail.MailEnvelope
  commentId: T:SuperOffice.CRM.Mail.MailEnvelope
  parent: SuperOffice.CRM.Mail
  isExternal: true
  name: MailEnvelope
  nameWithType: MailEnvelope
  fullName: SuperOffice.CRM.Mail.MailEnvelope
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesCompanyPersonInfoAsync*
  commentId: Overload:SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesCompanyPersonInfoAsync
  isExternal: true
  href: SuperOffice.CRM.Mail.EMailHelper.html#SuperOffice_CRM_Mail_EMailHelper_PopulateEnvelopesCompanyPersonInfoAsync_SuperOffice_CRM_Mail_MailEnvelope___System_Threading_CancellationToken_
  name: PopulateEnvelopesCompanyPersonInfoAsync
  nameWithType: EMailHelper.PopulateEnvelopesCompanyPersonInfoAsync
  fullName: SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesCompanyPersonInfoAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesArchivedInfoAsync*
  commentId: Overload:SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesArchivedInfoAsync
  isExternal: true
  href: SuperOffice.CRM.Mail.EMailHelper.html#SuperOffice_CRM_Mail_EMailHelper_PopulateEnvelopesArchivedInfoAsync_SuperOffice_CRM_Mail_MailEnvelope___System_Threading_CancellationToken_
  name: PopulateEnvelopesArchivedInfoAsync
  nameWithType: EMailHelper.PopulateEnvelopesArchivedInfoAsync
  fullName: SuperOffice.CRM.Mail.EMailHelper.PopulateEnvelopesArchivedInfoAsync
- uid: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressAsync*
  commentId: Overload:SuperOffice.CRM.Mail.EMailHelper.ResolveAddressAsync
  isExternal: true
  href: SuperOffice.CRM.Mail.EMailHelper.html#SuperOffice_CRM_Mail_EMailHelper_ResolveAddressAsync_System_String_System_Threading_CancellationToken_System_Boolean_
  name: ResolveAddressAsync
  nameWithType: EMailHelper.ResolveAddressAsync
  fullName: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.MailAddress[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Mail.MailAddress[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MailAddress[]>
  nameWithType: Task<MailAddress[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Mail.MailAddress[]>
  nameWithType.vb: Task(Of MailAddress())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Mail.MailAddress())
  name.vb: Task(Of MailAddress())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Mail.MailAddress
    name: MailAddress
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Mail.MailAddress
    name: MailAddress
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressesAsync*
  commentId: Overload:SuperOffice.CRM.Mail.EMailHelper.ResolveAddressesAsync
  isExternal: true
  href: SuperOffice.CRM.Mail.EMailHelper.html#SuperOffice_CRM_Mail_EMailHelper_ResolveAddressesAsync_SuperOffice_CRM_Mail_MailItem_System_Threading_CancellationToken_
  name: ResolveAddressesAsync
  nameWithType: EMailHelper.ResolveAddressesAsync
  fullName: SuperOffice.CRM.Mail.EMailHelper.ResolveAddressesAsync
- uid: SuperOffice.CRM.Mail.MailItem
  commentId: T:SuperOffice.CRM.Mail.MailItem
  parent: SuperOffice.CRM.Mail
  isExternal: true
  name: MailItem
  nameWithType: MailItem
  fullName: SuperOffice.CRM.Mail.MailItem
- uid: System.Collections.Generic.List{SuperOffice.CRM.Mail.MailAddress}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.Mail.MailAddress}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<MailAddress>
  nameWithType: List<MailAddress>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.Mail.MailAddress>
  nameWithType.vb: List(Of MailAddress)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.Mail.MailAddress)
  name.vb: List(Of MailAddress)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: SuperOffice.CRM.Mail.MailAddress
    name: MailAddress
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Mail.MailAddress
    name: MailAddress
    isExternal: true
  - name: )
- uid: SuperOffice.CRM.Mail.EMailHelper.GetPlainHTMLBody*
  commentId: Overload:SuperOffice.CRM.Mail.EMailHelper.GetPlainHTMLBody
  isExternal: true
  href: SuperOffice.CRM.Mail.EMailHelper.html#SuperOffice_CRM_Mail_EMailHelper_GetPlainHTMLBody_System_String_
  name: GetPlainHTMLBody
  nameWithType: EMailHelper.GetPlainHTMLBody
  fullName: SuperOffice.CRM.Mail.EMailHelper.GetPlainHTMLBody
- uid: SuperOffice.CRM.Mail.EMailHelper.GetFileExtensionValidatorAsync*
  commentId: Overload:SuperOffice.CRM.Mail.EMailHelper.GetFileExtensionValidatorAsync
  isExternal: true
  href: SuperOffice.CRM.Mail.EMailHelper.html#SuperOffice_CRM_Mail_EMailHelper_GetFileExtensionValidatorAsync_System_Threading_CancellationToken_
  name: GetFileExtensionValidatorAsync
  nameWithType: EMailHelper.GetFileExtensionValidatorAsync
  fullName: SuperOffice.CRM.Mail.EMailHelper.GetFileExtensionValidatorAsync
- uid: System.Threading.Tasks.Task{SuperOffice.Util.FileExtensionValidator}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.Util.FileExtensionValidator}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<FileExtensionValidator>
  nameWithType: Task<FileExtensionValidator>
  fullName: System.Threading.Tasks.Task<SuperOffice.Util.FileExtensionValidator>
  nameWithType.vb: Task(Of FileExtensionValidator)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.Util.FileExtensionValidator)
  name.vb: Task(Of FileExtensionValidator)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.Util.FileExtensionValidator
    name: FileExtensionValidator
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Util.FileExtensionValidator
    name: FileExtensionValidator
    isExternal: true
  - name: )
