### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Globalization.CountryCache
  commentId: T:SuperOffice.CRM.Globalization.CountryCache
  id: CountryCache
  parent: SuperOffice.CRM.Globalization
  children:
  - SuperOffice.CRM.Globalization.CountryCache.#ctor
  - SuperOffice.CRM.Globalization.CountryCache.GetCountryIds
  - SuperOffice.CRM.Globalization.CountryCache.GetCurrent
  - SuperOffice.CRM.Globalization.CountryCache.GetFromCountryName(System.String)
  - SuperOffice.CRM.Globalization.CountryCache.GetFromId(System.Int32)
  - SuperOffice.CRM.Globalization.CountryCache.GetFromIso(System.String)
  - SuperOffice.CRM.Globalization.CountryCache.GetFromPhoneNumber(System.String)
  - SuperOffice.CRM.Globalization.CountryCache.GetFromPhonePrefix(System.String)
  - SuperOffice.CRM.Globalization.CountryCache.OnLoad
  - SuperOffice.CRM.Globalization.CountryCache.ParseMultiLanguageString(System.String)
  - SuperOffice.CRM.Globalization.CountryCache.TableNames
  langs:
  - csharp
  - vb
  name: CountryCache
  nameWithType: CountryCache
  fullName: SuperOffice.CRM.Globalization.CountryCache
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  syntax:
    content: >-
      [CacheV2("Database", 0)]

      public class CountryCache : CacheBaseV2, IFlushableV2, IDisposable
    content.vb: >-
      <CacheV2("Database", 0)>

      Public Class CountryCache
          Inherits CacheBaseV2
          Implements IFlushableV2, IDisposable
  inheritance:
  - System.Object
  - SuperOffice.Data.Cache.CacheBaseV2
  implements:
  - SuperOffice.Data.Cache.IFlushableV2
  - System.IDisposable
  inheritedMembers:
  - SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  - SuperOffice.Data.Cache.CacheBaseV2.Dispose
  - SuperOffice.Data.Cache.CacheBaseV2.Flush
  - SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  - SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
  - SuperOffice.Data.Cache.CacheBaseV2.Load
  - SuperOffice.Data.Cache.CacheBaseV2.Disposed
  extensionMethods:
  - SuperOffice.CRM.Globalization.CountryCache.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Globalization.CountryCache.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Globalization.CountryCache)
  - SuperOffice.CRM.Globalization.CountryCache.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Globalization.CountryCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Data.Cache.CacheV2Attribute
    ctor: SuperOffice.Data.Cache.CacheV2Attribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: Database
    - type: System.Int32
      value: 0
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Globalization.CountryCache.GetFromId(System.Int32)
  commentId: M:SuperOffice.CRM.Globalization.CountryCache.GetFromId(System.Int32)
  id: GetFromId(System.Int32)
  parent: SuperOffice.CRM.Globalization.CountryCache
  langs:
  - csharp
  - vb
  name: GetFromId(Int32)
  nameWithType: CountryCache.GetFromId(Int32)
  fullName: SuperOffice.CRM.Globalization.CountryCache.GetFromId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  summary: "\nGet the <xref href=\"SuperOffice.CRM.Globalization.Country\" data-throw-if-not-resolved=\"false\"></xref> information object from the countries primary key (this is no longer the phone prefix).\n"
  syntax:
    content: public Country GetFromId(int countryId)
    parameters:
    - id: countryId
      type: System.Int32
      description: Countries primary key (this is no longer the phone prefix)
    return:
      type: SuperOffice.CRM.Globalization.Country
      description: The <xref href="SuperOffice.CRM.Globalization.Country" data-throw-if-not-resolved="false"></xref> information object
    content.vb: Public Function GetFromId(countryId As Integer) As Country
  overload: SuperOffice.CRM.Globalization.CountryCache.GetFromId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Globalization.CountryCache.GetCountryIds
  commentId: M:SuperOffice.CRM.Globalization.CountryCache.GetCountryIds
  id: GetCountryIds
  parent: SuperOffice.CRM.Globalization.CountryCache
  langs:
  - csharp
  - vb
  name: GetCountryIds()
  nameWithType: CountryCache.GetCountryIds()
  fullName: SuperOffice.CRM.Globalization.CountryCache.GetCountryIds()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  summary: "\nGet all country ids\n"
  syntax:
    content: public int[] GetCountryIds()
    return:
      type: System.Int32[]
      description: List of all country ids
    content.vb: Public Function GetCountryIds As Integer()
  overload: SuperOffice.CRM.Globalization.CountryCache.GetCountryIds*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Globalization.CountryCache.GetFromIso(System.String)
  commentId: M:SuperOffice.CRM.Globalization.CountryCache.GetFromIso(System.String)
  id: GetFromIso(System.String)
  parent: SuperOffice.CRM.Globalization.CountryCache
  langs:
  - csharp
  - vb
  name: GetFromIso(String)
  nameWithType: CountryCache.GetFromIso(String)
  fullName: SuperOffice.CRM.Globalization.CountryCache.GetFromIso(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  summary: "\nGet a the <xref href=\"SuperOffice.CRM.Globalization.Country\" data-throw-if-not-resolved=\"false\"></xref> information object from its name.  The name can be either 2 or 3 \nletter ISO abbreviations for the country or the official name of \nthe country in english.\n"
  syntax:
    content: public Country GetFromIso(string isoCode)
    parameters:
    - id: isoCode
      type: System.String
      description: "Name of the country: 2 and 3 letter ISO abbriviation \nfor the name and name of the country according to ISO. e.g: &quot;no&quot; or &quot;nor&quot;, &quot;gb&quot; or &quot;gbr&quot;"
    return:
      type: SuperOffice.CRM.Globalization.Country
      description: The <xref href="SuperOffice.CRM.Globalization.Country" data-throw-if-not-resolved="false"></xref> information object, or null if not found
    content.vb: Public Function GetFromIso(isoCode As String) As Country
  overload: SuperOffice.CRM.Globalization.CountryCache.GetFromIso*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Globalization.CountryCache.GetFromCountryName(System.String)
  commentId: M:SuperOffice.CRM.Globalization.CountryCache.GetFromCountryName(System.String)
  id: GetFromCountryName(System.String)
  parent: SuperOffice.CRM.Globalization.CountryCache
  langs:
  - csharp
  - vb
  name: GetFromCountryName(String)
  nameWithType: CountryCache.GetFromCountryName(String)
  fullName: SuperOffice.CRM.Globalization.CountryCache.GetFromCountryName(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  summary: "\nGet a the <xref href=\"SuperOffice.CRM.Globalization.Country\" data-throw-if-not-resolved=\"false\"></xref> information object from its name.\nThe name can be exact or partial match. \n"
  syntax:
    content: public Country GetFromCountryName(string name)
    parameters:
    - id: name
      type: System.String
      description: 'Name of the country: &quot;norge&quot;, &quot;Norge&quot; or &quot;NORGE&quot;'
    return:
      type: SuperOffice.CRM.Globalization.Country
      description: The <xref href="SuperOffice.CRM.Globalization.Country" data-throw-if-not-resolved="false"></xref> information object, or null if not found
    content.vb: Public Function GetFromCountryName(name As String) As Country
  overload: SuperOffice.CRM.Globalization.CountryCache.GetFromCountryName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Globalization.CountryCache.GetFromPhonePrefix(System.String)
  commentId: M:SuperOffice.CRM.Globalization.CountryCache.GetFromPhonePrefix(System.String)
  id: GetFromPhonePrefix(System.String)
  parent: SuperOffice.CRM.Globalization.CountryCache
  langs:
  - csharp
  - vb
  name: GetFromPhonePrefix(String)
  nameWithType: CountryCache.GetFromPhonePrefix(String)
  fullName: SuperOffice.CRM.Globalization.CountryCache.GetFromPhonePrefix(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  summary: "\nGet the <xref href=\"SuperOffice.CRM.Globalization.Country\" data-throw-if-not-resolved=\"false\"></xref> information object from the country&apos;s phone prefix (e.g. &quot;47&quot; returns the CountryRow for Norway).\n"
  syntax:
    content: public Country GetFromPhonePrefix(string phonePrefix)
    parameters:
    - id: phonePrefix
      type: System.String
      description: 'International dialing prefix: &quot;+47&quot; or &quot;47&quot; '
    return:
      type: SuperOffice.CRM.Globalization.Country
      description: The <xref href="SuperOffice.CRM.Globalization.Country" data-throw-if-not-resolved="false"></xref> information object, or null if not found
    content.vb: Public Function GetFromPhonePrefix(phonePrefix As String) As Country
  overload: SuperOffice.CRM.Globalization.CountryCache.GetFromPhonePrefix*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Globalization.CountryCache.GetFromPhoneNumber(System.String)
  commentId: M:SuperOffice.CRM.Globalization.CountryCache.GetFromPhoneNumber(System.String)
  id: GetFromPhoneNumber(System.String)
  parent: SuperOffice.CRM.Globalization.CountryCache
  langs:
  - csharp
  - vb
  name: GetFromPhoneNumber(String)
  nameWithType: CountryCache.GetFromPhoneNumber(String)
  fullName: SuperOffice.CRM.Globalization.CountryCache.GetFromPhoneNumber(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  summary: "\nGet the <xref href=\"SuperOffice.CRM.Globalization.Country\" data-throw-if-not-resolved=\"false\"></xref> information object from the country&apos;s phone prefix (e.g. &quot;47&quot; returns the CountryRow for Norway).\n"
  syntax:
    content: public Country GetFromPhoneNumber(string strippedPhoneNumber)
    parameters:
    - id: strippedPhoneNumber
      type: System.String
    return:
      type: SuperOffice.CRM.Globalization.Country
      description: The <xref href="SuperOffice.CRM.Globalization.Country" data-throw-if-not-resolved="false"></xref> information object
    content.vb: Public Function GetFromPhoneNumber(strippedPhoneNumber As String) As Country
  overload: SuperOffice.CRM.Globalization.CountryCache.GetFromPhoneNumber*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Globalization.CountryCache.ParseMultiLanguageString(System.String)
  commentId: M:SuperOffice.CRM.Globalization.CountryCache.ParseMultiLanguageString(System.String)
  id: ParseMultiLanguageString(System.String)
  parent: SuperOffice.CRM.Globalization.CountryCache
  langs:
  - csharp
  - vb
  name: ParseMultiLanguageString(String)
  nameWithType: CountryCache.ParseMultiLanguageString(String)
  fullName: SuperOffice.CRM.Globalization.CountryCache.ParseMultiLanguageString(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  summary: "\nParse a multi-language string according to the default language of the current user&apos;s home country\n"
  example:
  - "\nString example from PrefDesc table:\nUS:&quot;Location and size&quot;;GE:&quot;Position und Größe&quot;;NO:&quot;Posisjon og størrelse&quot;\n"
  syntax:
    content: public string ParseMultiLanguageString(string multiLangString)
    parameters:
    - id: multiLangString
      type: System.String
      description: The multilanguage string to parse
    return:
      type: System.String
      description: Parsed string; or original string if there is a problem
    content.vb: Public Function ParseMultiLanguageString(multiLangString As String) As String
  overload: SuperOffice.CRM.Globalization.CountryCache.ParseMultiLanguageString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Globalization.CountryCache.GetCurrent
  commentId: M:SuperOffice.CRM.Globalization.CountryCache.GetCurrent
  id: GetCurrent
  parent: SuperOffice.CRM.Globalization.CountryCache
  langs:
  - csharp
  - vb
  name: GetCurrent()
  nameWithType: CountryCache.GetCurrent()
  fullName: SuperOffice.CRM.Globalization.CountryCache.GetCurrent()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  summary: "\nGet the current instance of the CountryCache\n"
  syntax:
    content: public static CountryCache GetCurrent()
    return:
      type: SuperOffice.CRM.Globalization.CountryCache
      description: Current instance of the country cache.
    content.vb: Public Shared Function GetCurrent As CountryCache
  overload: SuperOffice.CRM.Globalization.CountryCache.GetCurrent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Globalization.CountryCache.OnLoad
  commentId: M:SuperOffice.CRM.Globalization.CountryCache.OnLoad
  id: OnLoad
  parent: SuperOffice.CRM.Globalization.CountryCache
  langs:
  - csharp
  - vb
  name: OnLoad()
  nameWithType: CountryCache.OnLoad()
  fullName: SuperOffice.CRM.Globalization.CountryCache.OnLoad()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  syntax:
    content: protected override void OnLoad()
    content.vb: Protected Overrides Sub OnLoad
  overridden: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  overload: SuperOffice.CRM.Globalization.CountryCache.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Globalization.CountryCache.#ctor
  commentId: M:SuperOffice.CRM.Globalization.CountryCache.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Globalization.CountryCache
  langs:
  - csharp
  - vb
  name: CountryCache()
  nameWithType: CountryCache.CountryCache()
  fullName: SuperOffice.CRM.Globalization.CountryCache.CountryCache()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  syntax:
    content: public CountryCache()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Globalization.CountryCache.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Globalization.CountryCache.TableNames
  commentId: P:SuperOffice.CRM.Globalization.CountryCache.TableNames
  id: TableNames
  parent: SuperOffice.CRM.Globalization.CountryCache
  langs:
  - csharp
  - vb
  name: TableNames
  nameWithType: CountryCache.TableNames
  fullName: SuperOffice.CRM.Globalization.CountryCache.TableNames
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  syntax:
    content: protected override IEnumerable<string> TableNames { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Protected Overrides ReadOnly Property TableNames As IEnumerable(Of String)
  overridden: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  overload: SuperOffice.CRM.Globalization.CountryCache.TableNames*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
references:
- uid: SuperOffice.CRM.Globalization
  commentId: N:SuperOffice.CRM.Globalization
  isExternal: true
  name: SuperOffice.CRM.Globalization
  nameWithType: SuperOffice.CRM.Globalization
  fullName: SuperOffice.CRM.Globalization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.Cache.CacheBaseV2
  commentId: T:SuperOffice.Data.Cache.CacheBaseV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: CacheBaseV2
  nameWithType: CacheBaseV2
  fullName: SuperOffice.Data.Cache.CacheBaseV2
- uid: SuperOffice.Data.Cache.IFlushableV2
  commentId: T:SuperOffice.Data.Cache.IFlushableV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: IFlushableV2
  nameWithType: IFlushableV2
  fullName: SuperOffice.Data.Cache.IFlushableV2
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: IsCacheInvalidated(String, Int32, PrivateSave)
  nameWithType: CacheBaseV2.IsCacheInvalidated(String, Int32, PrivateSave)
  fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String, System.Int32, SuperOffice.Data.SQL.PrivateSave)
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
    name: IsCacheInvalidated
    nameWithType: CacheBaseV2.IsCacheInvalidated
    fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
    name: IsCacheInvalidated
    nameWithType: CacheBaseV2.IsCacheInvalidated
    fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Dispose
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Dispose()
  nameWithType: CacheBaseV2.Dispose()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    name: Dispose
    nameWithType: CacheBaseV2.Dispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    name: Dispose
    nameWithType: CacheBaseV2.Dispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Flush
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Flush()
  nameWithType: CacheBaseV2.Flush()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
    name: Flush
    nameWithType: CacheBaseV2.Flush
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
    name: Flush
    nameWithType: CacheBaseV2.Flush
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: BeginDisableAutoUpdate()
  nameWithType: CacheBaseV2.BeginDisableAutoUpdate()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: GetCurrent<T>()
  nameWithType: CacheBaseV2.GetCurrent<T>()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent<T>()
  nameWithType.vb: CacheBaseV2.GetCurrent(Of T)()
  fullName.vb: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent(Of T)()
  name.vb: GetCurrent(Of T)()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
    name: GetCurrent<T>
    nameWithType: CacheBaseV2.GetCurrent<T>
    fullName: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
    name: GetCurrent(Of T)
    nameWithType: CacheBaseV2.GetCurrent(Of T)
    fullName: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Load
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Load
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Load()
  nameWithType: CacheBaseV2.Load()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Load()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Disposed
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.Disposed
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Disposed
  nameWithType: CacheBaseV2.Disposed
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Disposed
- uid: SuperOffice.CRM.Globalization.CountryCache.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<CountryCache, To>()
  nameWithType: EnumUtil.MapEnums<CountryCache, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Globalization.CountryCache, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of CountryCache, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Globalization.CountryCache, To)()
  name.vb: MapEnums(Of CountryCache, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<CountryCache, To>
    nameWithType: EnumUtil.MapEnums<CountryCache, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Globalization.CountryCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of CountryCache, To)
    nameWithType: EnumUtil.MapEnums(Of CountryCache, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Globalization.CountryCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Globalization.CountryCache.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Globalization.CountryCache)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<CountryCache>(CountryCache)
  nameWithType: ObjectExtensions.AssignByReflection<CountryCache>(CountryCache)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Globalization.CountryCache>(SuperOffice.CRM.Globalization.CountryCache)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of CountryCache)(CountryCache)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Globalization.CountryCache)(SuperOffice.CRM.Globalization.CountryCache)
  name.vb: AssignByReflection(Of CountryCache)(CountryCache)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<CountryCache>
    nameWithType: ObjectExtensions.AssignByReflection<CountryCache>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Globalization.CountryCache>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Globalization.CountryCache
    name: CountryCache
    nameWithType: CountryCache
    fullName: SuperOffice.CRM.Globalization.CountryCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of CountryCache)
    nameWithType: ObjectExtensions.AssignByReflection(Of CountryCache)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Globalization.CountryCache)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Globalization.CountryCache
    name: CountryCache
    nameWithType: CountryCache
    fullName: SuperOffice.CRM.Globalization.CountryCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Globalization.CountryCache.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<CountryCache>()
  nameWithType: ObjectExtensions.GraphCopy<CountryCache>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Globalization.CountryCache>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of CountryCache)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Globalization.CountryCache)()
  name.vb: GraphCopy(Of CountryCache)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<CountryCache>
    nameWithType: ObjectExtensions.GraphCopy<CountryCache>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Globalization.CountryCache>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of CountryCache)
    nameWithType: ObjectExtensions.GraphCopy(Of CountryCache)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Globalization.CountryCache)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Globalization.CountryCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<CountryCache, To>()
  nameWithType: Converters.MapEnums<CountryCache, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Globalization.CountryCache, To>()
  nameWithType.vb: Converters.MapEnums(Of CountryCache, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Globalization.CountryCache, To)()
  name.vb: MapEnums(Of CountryCache, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<CountryCache, To>
    nameWithType: Converters.MapEnums<CountryCache, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Globalization.CountryCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of CountryCache, To)
    nameWithType: Converters.MapEnums(Of CountryCache, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Globalization.CountryCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.Cache
  commentId: N:SuperOffice.Data.Cache
  isExternal: true
  name: SuperOffice.Data.Cache
  nameWithType: SuperOffice.Data.Cache
  fullName: SuperOffice.Data.Cache
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Globalization.CountryCache.GetFromId*
  commentId: Overload:SuperOffice.CRM.Globalization.CountryCache.GetFromId
  isExternal: true
  name: GetFromId
  nameWithType: CountryCache.GetFromId
  fullName: SuperOffice.CRM.Globalization.CountryCache.GetFromId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Globalization.Country
  commentId: T:SuperOffice.CRM.Globalization.Country
  parent: SuperOffice.CRM.Globalization
  isExternal: true
  name: Country
  nameWithType: Country
  fullName: SuperOffice.CRM.Globalization.Country
- uid: SuperOffice.CRM.Globalization.CountryCache.GetCountryIds*
  commentId: Overload:SuperOffice.CRM.Globalization.CountryCache.GetCountryIds
  isExternal: true
  name: GetCountryIds
  nameWithType: CountryCache.GetCountryIds
  fullName: SuperOffice.CRM.Globalization.CountryCache.GetCountryIds
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Globalization.CountryCache.GetFromIso*
  commentId: Overload:SuperOffice.CRM.Globalization.CountryCache.GetFromIso
  isExternal: true
  name: GetFromIso
  nameWithType: CountryCache.GetFromIso
  fullName: SuperOffice.CRM.Globalization.CountryCache.GetFromIso
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Globalization.CountryCache.GetFromCountryName*
  commentId: Overload:SuperOffice.CRM.Globalization.CountryCache.GetFromCountryName
  isExternal: true
  name: GetFromCountryName
  nameWithType: CountryCache.GetFromCountryName
  fullName: SuperOffice.CRM.Globalization.CountryCache.GetFromCountryName
- uid: SuperOffice.CRM.Globalization.CountryCache.GetFromPhonePrefix*
  commentId: Overload:SuperOffice.CRM.Globalization.CountryCache.GetFromPhonePrefix
  isExternal: true
  name: GetFromPhonePrefix
  nameWithType: CountryCache.GetFromPhonePrefix
  fullName: SuperOffice.CRM.Globalization.CountryCache.GetFromPhonePrefix
- uid: SuperOffice.CRM.Globalization.CountryCache.GetFromPhoneNumber*
  commentId: Overload:SuperOffice.CRM.Globalization.CountryCache.GetFromPhoneNumber
  isExternal: true
  name: GetFromPhoneNumber
  nameWithType: CountryCache.GetFromPhoneNumber
  fullName: SuperOffice.CRM.Globalization.CountryCache.GetFromPhoneNumber
- uid: SuperOffice.CRM.Globalization.CountryCache.ParseMultiLanguageString*
  commentId: Overload:SuperOffice.CRM.Globalization.CountryCache.ParseMultiLanguageString
  isExternal: true
  name: ParseMultiLanguageString
  nameWithType: CountryCache.ParseMultiLanguageString
  fullName: SuperOffice.CRM.Globalization.CountryCache.ParseMultiLanguageString
- uid: SuperOffice.CRM.Globalization.CountryCache.GetCurrent*
  commentId: Overload:SuperOffice.CRM.Globalization.CountryCache.GetCurrent
  isExternal: true
  name: GetCurrent
  nameWithType: CountryCache.GetCurrent
  fullName: SuperOffice.CRM.Globalization.CountryCache.GetCurrent
- uid: SuperOffice.CRM.Globalization.CountryCache
  commentId: T:SuperOffice.CRM.Globalization.CountryCache
  parent: SuperOffice.CRM.Globalization
  isExternal: true
  name: CountryCache
  nameWithType: CountryCache
  fullName: SuperOffice.CRM.Globalization.CountryCache
- uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: OnLoad()
  nameWithType: CacheBaseV2.OnLoad()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Globalization.CountryCache.OnLoad*
  commentId: Overload:SuperOffice.CRM.Globalization.CountryCache.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: CountryCache.OnLoad
  fullName: SuperOffice.CRM.Globalization.CountryCache.OnLoad
- uid: SuperOffice.CRM.Globalization.CountryCache.#ctor*
  commentId: Overload:SuperOffice.CRM.Globalization.CountryCache.#ctor
  isExternal: true
  name: CountryCache
  nameWithType: CountryCache.CountryCache
  fullName: SuperOffice.CRM.Globalization.CountryCache.CountryCache
- uid: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.TableNames
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: TableNames
  nameWithType: CacheBaseV2.TableNames
  fullName: SuperOffice.Data.Cache.CacheBaseV2.TableNames
- uid: SuperOffice.CRM.Globalization.CountryCache.TableNames*
  commentId: Overload:SuperOffice.CRM.Globalization.CountryCache.TableNames
  isExternal: true
  name: TableNames
  nameWithType: CountryCache.TableNames
  fullName: SuperOffice.CRM.Globalization.CountryCache.TableNames
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: '!:System.Collections.Generic.IEnumerable{System.String}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
