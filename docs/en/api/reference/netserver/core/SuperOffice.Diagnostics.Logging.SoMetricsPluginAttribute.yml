### YamlMime:ManagedReference
items:
- uid: SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute
  commentId: T:SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute
  id: SoMetricsPluginAttribute
  parent: SuperOffice.Diagnostics.Logging
  children:
  - SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute.#ctor(System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: SoMetricsPluginAttribute
  nameWithType: SoMetricsPluginAttribute
  fullName: SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics.Logging
  summary: "\nPlugin for reporting metrics to a suitable back-end. Useful for graphing and accumulating.\n"
  syntax:
    content: 'public class SoMetricsPluginAttribute : PrioritizedPluginAttribute'
    content.vb: >-
      Public Class SoMetricsPluginAttribute
          Inherits PrioritizedPluginAttribute
  inheritance:
  - System.Object
  - SuperOffice.Factory.PluginAttribute
  - SuperOffice.Factory.PrioritizedPluginAttribute
  extensionMethods:
  - SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute.EnumUtil.MapEnums``2
  - SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute.#ctor(System.String,System.Int32)
  commentId: M:SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute
  langs:
  - csharp
  - vb
  name: SoMetricsPluginAttribute(String, Int32)
  nameWithType: SoMetricsPluginAttribute.SoMetricsPluginAttribute(String, Int32)
  fullName: SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute.SoMetricsPluginAttribute(System.String, System.Int32)
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics.Logging
  summary: "\n\n"
  syntax:
    content: public SoMetricsPluginAttribute(string name, int priority)
    parameters:
    - id: name
      type: System.String
    - id: priority
      type: System.Int32
    content.vb: Public Sub New(name As String, priority As Integer)
  overload: SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Diagnostics.Logging
  commentId: N:SuperOffice.Diagnostics.Logging
  isExternal: true
  name: SuperOffice.Diagnostics.Logging
  nameWithType: SuperOffice.Diagnostics.Logging
  fullName: SuperOffice.Diagnostics.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Factory.PluginAttribute
  commentId: T:SuperOffice.Factory.PluginAttribute
  parent: SuperOffice.Factory
  isExternal: true
  name: PluginAttribute
  nameWithType: PluginAttribute
  fullName: SuperOffice.Factory.PluginAttribute
- uid: SuperOffice.Factory.PrioritizedPluginAttribute
  commentId: T:SuperOffice.Factory.PrioritizedPluginAttribute
  parent: SuperOffice.Factory
  isExternal: true
  name: PrioritizedPluginAttribute
  nameWithType: PrioritizedPluginAttribute
  fullName: SuperOffice.Factory.PrioritizedPluginAttribute
- uid: SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoMetricsPluginAttribute, To>()
  nameWithType: EnumUtil.MapEnums<SoMetricsPluginAttribute, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoMetricsPluginAttribute, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute, To)()
  name.vb: MapEnums(Of SoMetricsPluginAttribute, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoMetricsPluginAttribute, To>
    nameWithType: EnumUtil.MapEnums<SoMetricsPluginAttribute, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoMetricsPluginAttribute, To)
    nameWithType: EnumUtil.MapEnums(Of SoMetricsPluginAttribute, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoMetricsPluginAttribute, To>()
  nameWithType: Converters.MapEnums<SoMetricsPluginAttribute, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute, To>()
  nameWithType.vb: Converters.MapEnums(Of SoMetricsPluginAttribute, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute, To)()
  name.vb: MapEnums(Of SoMetricsPluginAttribute, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoMetricsPluginAttribute, To>
    nameWithType: Converters.MapEnums<SoMetricsPluginAttribute, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoMetricsPluginAttribute, To)
    nameWithType: Converters.MapEnums(Of SoMetricsPluginAttribute, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Factory
  commentId: N:SuperOffice.Factory
  isExternal: true
  name: SuperOffice.Factory
  nameWithType: SuperOffice.Factory
  fullName: SuperOffice.Factory
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute.#ctor*
  commentId: Overload:SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute.#ctor
  isExternal: true
  name: SoMetricsPluginAttribute
  nameWithType: SoMetricsPluginAttribute.SoMetricsPluginAttribute
  fullName: SuperOffice.Diagnostics.Logging.SoMetricsPluginAttribute.SoMetricsPluginAttribute
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
