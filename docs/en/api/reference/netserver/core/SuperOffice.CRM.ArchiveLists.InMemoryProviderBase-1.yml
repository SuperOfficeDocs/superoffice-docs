### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  commentId: T:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  id: InMemoryProviderBase`1
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.#ctor
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1._entityHelper
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.AllowOrderBy
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldFilterColumns
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldFilterEntities
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldPage
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldSort
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.Close
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.ColumnHelper
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.DenyOrderBy
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.EntityHelper
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetAvailableColumns
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetAvailableEntities
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetReader(System.String)
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetResultData
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetResultInformation
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetRows(System.String)
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.Invisible
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.Options
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.RegisterEntity(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetDesiredColumns(System.String[])
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetDesiredEntities(System.String[])
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetPagingInfo(System.Int32,System.Int32)
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SortData(System.Collections.Generic.List{`0})
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.Visible
  langs:
  - csharp
  - vb
  name: InMemoryProviderBase<RowType>
  nameWithType: InMemoryProviderBase<RowType>
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: 'public abstract class InMemoryProviderBase<RowType> : IArchiveProvider, IArchiveProviderHasRows, IArchiveProviderHasColumns, IArchiveProviderHasEntities, IPlugin where RowType : ArchiveRow, new()'
    typeParameters:
    - id: RowType
    content.vb: >-
      Public MustInherit Class InMemoryProviderBase(Of RowType As {ArchiveRow, New})
          Implements IArchiveProvider, IArchiveProviderHasRows, IArchiveProviderHasColumns, IArchiveProviderHasEntities, IPlugin
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.CRM.ArchiveLists.CredentialUserProvider
  - SuperOffice.CRM.ArchiveLists.CriteriaProvider
  - SuperOffice.CRM.ArchiveLists.ExecutingServicesProvider
  - SuperOffice.CRM.ArchiveLists.FindProductViaConnectorProvider
  - SuperOffice.CRM.ArchiveLists.FreetextCountProvider
  - SuperOffice.CRM.ArchiveLists.MappedPreferenceProvider
  - SuperOffice.CRM.ArchiveLists.ParticipantsProvider
  - SuperOffice.CRM.ArchiveLists.QuoteConnectorProvider
  - SuperOffice.CRM.ArchiveLists.TypedInMemoryProviderBase`1
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProvider
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  nameWithType.vb: InMemoryProviderBase(Of RowType)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType)
  name.vb: InMemoryProviderBase(Of RowType)
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1._entityHelper
  commentId: F:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1._entityHelper
  id: _entityHelper
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: _entityHelper
  nameWithType: InMemoryProviderBase<RowType>._entityHelper
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>._entityHelper
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected EntityHelper _entityHelper
    return:
      type: SuperOffice.CRM.ArchiveLists.EntityHelper
    content.vb: Protected _entityHelper As EntityHelper
  nameWithType.vb: InMemoryProviderBase(Of RowType)._entityHelper
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType)._entityHelper
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.Visible
  commentId: F:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.Visible
  id: Visible
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: Visible
  nameWithType: InMemoryProviderBase<RowType>.Visible
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.Visible
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSymbolic boolean constant for <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo\" data-throw-if-not-resolved=\"false\"></xref> constructor, evaluates to &apos;true&apos;\n"
  syntax:
    content: protected const bool Visible = true
    return:
      type: System.Boolean
    content.vb: Protected Const Visible As Boolean = True
  nameWithType.vb: InMemoryProviderBase(Of RowType).Visible
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).Visible
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.Invisible
  commentId: F:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.Invisible
  id: Invisible
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: Invisible
  nameWithType: InMemoryProviderBase<RowType>.Invisible
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.Invisible
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSymbolic boolean constant for <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo\" data-throw-if-not-resolved=\"false\"></xref> constructor, evaluates to &apos;false&apos;\n"
  syntax:
    content: protected const bool Invisible = false
    return:
      type: System.Boolean
    content.vb: Protected Const Invisible As Boolean = False
  nameWithType.vb: InMemoryProviderBase(Of RowType).Invisible
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).Invisible
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.AllowOrderBy
  commentId: F:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.AllowOrderBy
  id: AllowOrderBy
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: AllowOrderBy
  nameWithType: InMemoryProviderBase<RowType>.AllowOrderBy
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.AllowOrderBy
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSymbolic boolean constant for <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo\" data-throw-if-not-resolved=\"false\"></xref> constructor, evaluates to &apos;true&apos;\n"
  syntax:
    content: protected const bool AllowOrderBy = true
    return:
      type: System.Boolean
    content.vb: Protected Const AllowOrderBy As Boolean = True
  nameWithType.vb: InMemoryProviderBase(Of RowType).AllowOrderBy
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).AllowOrderBy
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.DenyOrderBy
  commentId: F:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.DenyOrderBy
  id: DenyOrderBy
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: DenyOrderBy
  nameWithType: InMemoryProviderBase<RowType>.DenyOrderBy
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.DenyOrderBy
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSymbolic boolean constant for <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo\" data-throw-if-not-resolved=\"false\"></xref> constructor, evaluates to &apos;false&apos;\n"
  syntax:
    content: protected const bool DenyOrderBy = false
    return:
      type: System.Boolean
    content.vb: Protected Const DenyOrderBy As Boolean = False
  nameWithType.vb: InMemoryProviderBase(Of RowType).DenyOrderBy
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).DenyOrderBy
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.Options
  commentId: F:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.Options
  id: Options
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: InMemoryProviderBase<RowType>.Options
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.Options
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nOptions from GetRows() call\n"
  syntax:
    content: protected string Options
    return:
      type: System.String
    content.vb: Protected Options As String
  nameWithType.vb: InMemoryProviderBase(Of RowType).Options
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).Options
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.#ctor
  commentId: M:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: InMemoryProviderBase()
  nameWithType: InMemoryProviderBase<RowType>.InMemoryProviderBase()
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.InMemoryProviderBase()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected InMemoryProviderBase()
    content.vb: Protected Sub New
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.#ctor*
  nameWithType.vb: InMemoryProviderBase(Of RowType).InMemoryProviderBase()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).InMemoryProviderBase()
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetResultData
  commentId: M:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetResultData
  id: GetResultData
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: GetResultData()
  nameWithType: InMemoryProviderBase<RowType>.GetResultData()
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.GetResultData()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSubclass contract: Return a list of ArchiveRow items that are the current result\n"
  syntax:
    content: protected abstract List<RowType> GetResultData()
    return:
      type: System.Collections.Generic.List{{RowType}}
      description: result list, which may be paged, sorted and column-filtered, or not, according to the abstract properties
    content.vb: Protected MustOverride Function GetResultData As List(Of RowType)
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetResultData*
  nameWithType.vb: InMemoryProviderBase(Of RowType).GetResultData()
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).GetResultData()
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.RegisterEntity(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  commentId: M:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.RegisterEntity(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  id: RegisterEntity(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: RegisterEntity(ArchiveRowTypeInfo)
  nameWithType: InMemoryProviderBase<RowType>.RegisterEntity(ArchiveRowTypeInfo)
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.RegisterEntity(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nRegister an entity on this provider\n"
  syntax:
    content: protected ArchiveRowTypeInfo RegisterEntity(ArchiveRowTypeInfo entity)
    parameters:
    - id: entity
      type: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
      description: Entity to register
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
      description: The same entity, so you can go on doing things to it
    content.vb: Protected Function RegisterEntity(entity As ArchiveRowTypeInfo) As ArchiveRowTypeInfo
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.RegisterEntity*
  nameWithType.vb: InMemoryProviderBase(Of RowType).RegisterEntity(ArchiveRowTypeInfo)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).RegisterEntity(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetReader(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetReader(System.String)
  id: GetReader(System.String)
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: GetReader(String)
  nameWithType: InMemoryProviderBase<RowType>.GetReader(String)
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.GetReader(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual IDataReader GetReader(string options)
    parameters:
    - id: options
      type: System.String
    return:
      type: System.Data.IDataReader
    content.vb: Public Overridable Function GetReader(options As String) As IDataReader
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetReader*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
  nameWithType.vb: InMemoryProviderBase(Of RowType).GetReader(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).GetReader(System.String)
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetRows(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetRows(System.String)
  id: GetRows(System.String)
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: GetRows(String)
  nameWithType: InMemoryProviderBase<RowType>.GetRows(String)
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.GetRows(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual IEnumerable<ArchiveRow> GetRows(string options)
    parameters:
    - id: options
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRow}
    content.vb: Public Overridable Function GetRows(options As String) As IEnumerable(Of ArchiveRow)
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetRows*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
  nameWithType.vb: InMemoryProviderBase(Of RowType).GetRows(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).GetRows(System.String)
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetResultInformation
  commentId: M:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetResultInformation
  id: GetResultInformation
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: GetResultInformation()
  nameWithType: InMemoryProviderBase<RowType>.GetResultInformation()
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.GetResultInformation()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual ArchiveResultInformation GetResultInformation()
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveResultInformation
    content.vb: Public Overridable Function GetResultInformation As ArchiveResultInformation
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetResultInformation*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
  nameWithType.vb: InMemoryProviderBase(Of RowType).GetResultInformation()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).GetResultInformation()
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SortData(System.Collections.Generic.List{`0})
  commentId: M:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SortData(System.Collections.Generic.List{`0})
  id: SortData(System.Collections.Generic.List{`0})
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: SortData(List<RowType>)
  nameWithType: InMemoryProviderBase<RowType>.SortData(List<RowType>)
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.SortData(System.Collections.Generic.List<RowType>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSort the given list of archive rows according to the current orderby criteria\n"
  syntax:
    content: protected void SortData(List<RowType> dataToSort)
    parameters:
    - id: dataToSort
      type: System.Collections.Generic.List{{RowType}}
    content.vb: Protected Sub SortData(dataToSort As List(Of RowType))
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SortData*
  nameWithType.vb: InMemoryProviderBase(Of RowType).SortData(List(Of RowType))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).SortData(System.Collections.Generic.List(Of RowType))
  name.vb: SortData(List(Of RowType))
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.Close
  commentId: M:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.Close
  id: Close
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: InMemoryProviderBase<RowType>.Close()
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.Close()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual void Close()
    content.vb: Public Overridable Sub Close
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.Close*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
  nameWithType.vb: InMemoryProviderBase(Of RowType).Close()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).Close()
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetPagingInfo(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetPagingInfo(System.Int32,System.Int32)
  id: SetPagingInfo(System.Int32,System.Int32)
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: SetPagingInfo(Int32, Int32)
  nameWithType: InMemoryProviderBase<RowType>.SetPagingInfo(Int32, Int32)
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.SetPagingInfo(System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual void SetPagingInfo(int pageSize, int pageNumber)
    parameters:
    - id: pageSize
      type: System.Int32
    - id: pageNumber
      type: System.Int32
    content.vb: Public Overridable Sub SetPagingInfo(pageSize As Integer, pageNumber As Integer)
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetPagingInfo*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32,System.Int32)
  nameWithType.vb: InMemoryProviderBase(Of RowType).SetPagingInfo(Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).SetPagingInfo(System.Int32, System.Int32)
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetAvailableColumns
  commentId: M:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetAvailableColumns
  id: GetAvailableColumns
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: GetAvailableColumns()
  nameWithType: InMemoryProviderBase<RowType>.GetAvailableColumns()
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.GetAvailableColumns()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual List<ArchiveColumnInfo> GetAvailableColumns()
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo}
    content.vb: Public Overridable Function GetAvailableColumns As List(Of ArchiveColumnInfo)
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetAvailableColumns*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
  nameWithType.vb: InMemoryProviderBase(Of RowType).GetAvailableColumns()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).GetAvailableColumns()
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetDesiredColumns(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetDesiredColumns(System.String[])
  id: SetDesiredColumns(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: SetDesiredColumns(String[])
  nameWithType: InMemoryProviderBase<RowType>.SetDesiredColumns(String[])
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.SetDesiredColumns(System.String[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual void SetDesiredColumns(params string[] columnIds)
    parameters:
    - id: columnIds
      type: System.String[]
    content.vb: Public Overridable Sub SetDesiredColumns(ParamArray columnIds As String())
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetDesiredColumns*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
  nameWithType.vb: InMemoryProviderBase(Of RowType).SetDesiredColumns(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).SetDesiredColumns(System.String())
  name.vb: SetDesiredColumns(String())
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  id: SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: SetOrderBy(ArchiveOrderByInfo[])
  nameWithType: InMemoryProviderBase<RowType>.SetOrderBy(ArchiveOrderByInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual void SetOrderBy(params ArchiveOrderByInfo[] orderBy)
    parameters:
    - id: orderBy
      type: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
    content.vb: Public Overridable Sub SetOrderBy(ParamArray orderBy As ArchiveOrderByInfo())
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetOrderBy*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  nameWithType.vb: InMemoryProviderBase(Of RowType).SetOrderBy(ArchiveOrderByInfo())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo())
  name.vb: SetOrderBy(ArchiveOrderByInfo())
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: SetRestriction(ArchiveRestrictionInfo[])
  nameWithType: InMemoryProviderBase<RowType>.SetRestriction(ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual bool SetRestriction(params ArchiveRestrictionInfo[] restrictions)
    parameters:
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
    return:
      type: System.Boolean
    content.vb: Public Overridable Function SetRestriction(ParamArray restrictions As ArchiveRestrictionInfo()) As Boolean
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetRestriction*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  nameWithType.vb: InMemoryProviderBase(Of RowType).SetRestriction(ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: SetRestriction(ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetAvailableEntities
  commentId: M:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetAvailableEntities
  id: GetAvailableEntities
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: GetAvailableEntities()
  nameWithType: InMemoryProviderBase<RowType>.GetAvailableEntities()
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.GetAvailableEntities()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual List<ArchiveRowTypeInfo> GetAvailableEntities()
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
    content.vb: Public Overridable Function GetAvailableEntities As List(Of ArchiveRowTypeInfo)
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetAvailableEntities*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
  nameWithType.vb: InMemoryProviderBase(Of RowType).GetAvailableEntities()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).GetAvailableEntities()
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetDesiredEntities(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetDesiredEntities(System.String[])
  id: SetDesiredEntities(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: SetDesiredEntities(String[])
  nameWithType: InMemoryProviderBase<RowType>.SetDesiredEntities(String[])
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.SetDesiredEntities(System.String[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual void SetDesiredEntities(params string[] entities)
    parameters:
    - id: entities
      type: System.String[]
    content.vb: Public Overridable Sub SetDesiredEntities(ParamArray entities As String())
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetDesiredEntities*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
  nameWithType.vb: InMemoryProviderBase(Of RowType).SetDesiredEntities(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).SetDesiredEntities(System.String())
  name.vb: SetDesiredEntities(String())
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.EntityHelper
  commentId: P:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.EntityHelper
  id: EntityHelper
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: EntityHelper
  nameWithType: InMemoryProviderBase<RowType>.EntityHelper
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.EntityHelper
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected EntityHelper EntityHelper { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.ArchiveLists.EntityHelper
    content.vb: Protected ReadOnly Property EntityHelper As EntityHelper
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.EntityHelper*
  nameWithType.vb: InMemoryProviderBase(Of RowType).EntityHelper
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).EntityHelper
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.ColumnHelper
  commentId: P:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.ColumnHelper
  id: ColumnHelper
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: ColumnHelper
  nameWithType: InMemoryProviderBase<RowType>.ColumnHelper
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.ColumnHelper
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected ColumnHelper ColumnHelper { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.ArchiveLists.ColumnHelper
    content.vb: Protected ReadOnly Property ColumnHelper As ColumnHelper
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.ColumnHelper*
  nameWithType.vb: InMemoryProviderBase(Of RowType).ColumnHelper
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).ColumnHelper
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldFilterColumns
  commentId: P:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldFilterColumns
  id: BaseClassShouldFilterColumns
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: BaseClassShouldFilterColumns
  nameWithType: InMemoryProviderBase<RowType>.BaseClassShouldFilterColumns
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.BaseClassShouldFilterColumns
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSubclass contract: Return true if the base class should filter columns according to SetDesiredColumns. If this property is false,\nthe actual ArchiveRow objects are returned; otherwise a typed copy is made and ColumnData are populated accoprding to DesiredColumns.\n"
  remarks: "\nIf columns are cheap to get, the subclass can save code by leaving the filtering to this base class. Conversely, if somecolumns are expensive\nto calculate, the subclass should do the filtering itself to improve performance.\n"
  syntax:
    content: protected abstract bool BaseClassShouldFilterColumns { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected MustOverride ReadOnly Property BaseClassShouldFilterColumns As Boolean
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldFilterColumns*
  nameWithType.vb: InMemoryProviderBase(Of RowType).BaseClassShouldFilterColumns
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).BaseClassShouldFilterColumns
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldFilterEntities
  commentId: P:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldFilterEntities
  id: BaseClassShouldFilterEntities
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: BaseClassShouldFilterEntities
  nameWithType: InMemoryProviderBase<RowType>.BaseClassShouldFilterEntities
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.BaseClassShouldFilterEntities
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSubclass contract: Return true if the base class should filter columns according to SetDesiredColumns. If this property is false,\nthe actual ArchiveRow objects are returned; otherwise a typed copy is made and ColumnData are populated accoprding to DesiredColumns.\n"
  remarks: "\nIf columns are cheap to get, the subclass can save code by leaving the filtering to this base class. Conversely, if somecolumns are expensive\nto calculate, the subclass should do the filtering itself to improve performance.\n"
  syntax:
    content: protected abstract bool BaseClassShouldFilterEntities { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected MustOverride ReadOnly Property BaseClassShouldFilterEntities As Boolean
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldFilterEntities*
  nameWithType.vb: InMemoryProviderBase(Of RowType).BaseClassShouldFilterEntities
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).BaseClassShouldFilterEntities
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldPage
  commentId: P:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldPage
  id: BaseClassShouldPage
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: BaseClassShouldPage
  nameWithType: InMemoryProviderBase<RowType>.BaseClassShouldPage
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.BaseClassShouldPage
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSubclass contract: Return true if the base class should perform filter entities according to SetDesiredEntities. If this property is false,\nthe result set is assumed to represent the chosen entities only.\n"
  remarks: "\nIf rows are cheap to get, the subclass can save code by leaving the filtering to this base class. Conversely, if rows are expensive\nto calculate, the subclass should do the entity filtering itself to improve performance.\n"
  syntax:
    content: protected abstract bool BaseClassShouldPage { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected MustOverride ReadOnly Property BaseClassShouldPage As Boolean
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldPage*
  nameWithType.vb: InMemoryProviderBase(Of RowType).BaseClassShouldPage
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).BaseClassShouldPage
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldSort
  commentId: P:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldSort
  id: BaseClassShouldSort
  parent: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1
  langs:
  - csharp
  - vb
  name: BaseClassShouldSort
  nameWithType: InMemoryProviderBase<RowType>.BaseClassShouldSort
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.BaseClassShouldSort
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSubclass contract: Return true if the base class should perform sorting according to SetOrderBy. If this property is false,\nthe result set is assumed to be correctly ordered.\n"
  syntax:
    content: protected abstract bool BaseClassShouldSort { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected MustOverride ReadOnly Property BaseClassShouldSort As Boolean
  overload: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldSort*
  nameWithType.vb: InMemoryProviderBase(Of RowType).BaseClassShouldSort
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).BaseClassShouldSort
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProvider
  commentId: T:SuperOffice.CRM.ArchiveLists.IArchiveProvider
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: IArchiveProvider
  nameWithType: IArchiveProvider
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProvider
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  commentId: T:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: IArchiveProviderHasRows
  nameWithType: IArchiveProviderHasRows
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  commentId: T:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: IArchiveProviderHasColumns
  nameWithType: IArchiveProviderHasColumns
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
  commentId: T:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: IArchiveProviderHasEntities
  nameWithType: IArchiveProviderHasEntities
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<InMemoryProviderBase<RowType>, To>()
  nameWithType: EnumUtil.MapEnums<InMemoryProviderBase<RowType>, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of InMemoryProviderBase(Of RowType), To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType), To)()
  name.vb: MapEnums(Of InMemoryProviderBase(Of RowType), To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<InMemoryProviderBase<RowType>, To>
    nameWithType: EnumUtil.MapEnums<InMemoryProviderBase<RowType>, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of InMemoryProviderBase(Of RowType), To)
    nameWithType: EnumUtil.MapEnums(Of InMemoryProviderBase(Of RowType), To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<InMemoryProviderBase<RowType>, To>()
  nameWithType: Converters.MapEnums<InMemoryProviderBase<RowType>, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>, To>()
  nameWithType.vb: Converters.MapEnums(Of InMemoryProviderBase(Of RowType), To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType), To)()
  name.vb: MapEnums(Of InMemoryProviderBase(Of RowType), To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<InMemoryProviderBase<RowType>, To>
    nameWithType: Converters.MapEnums<InMemoryProviderBase<RowType>, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of InMemoryProviderBase(Of RowType), To)
    nameWithType: Converters.MapEnums(Of InMemoryProviderBase(Of RowType), To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.ArchiveLists.EntityHelper
  commentId: T:SuperOffice.CRM.ArchiveLists.EntityHelper
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: EntityHelper
  nameWithType: EntityHelper
  fullName: SuperOffice.CRM.ArchiveLists.EntityHelper
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.#ctor*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.#ctor
  isExternal: true
  name: InMemoryProviderBase
  nameWithType: InMemoryProviderBase<RowType>.InMemoryProviderBase
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.InMemoryProviderBase
  nameWithType.vb: InMemoryProviderBase(Of RowType).InMemoryProviderBase
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).InMemoryProviderBase
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetResultData*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetResultData
  isExternal: true
  name: GetResultData
  nameWithType: InMemoryProviderBase<RowType>.GetResultData
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.GetResultData
  nameWithType.vb: InMemoryProviderBase(Of RowType).GetResultData
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).GetResultData
- uid: System.Collections.Generic.List{{RowType}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<RowType>
  nameWithType: List<RowType>
  fullName: System.Collections.Generic.List<RowType>
  nameWithType.vb: List(Of RowType)
  fullName.vb: System.Collections.Generic.List(Of RowType)
  name.vb: List(Of RowType)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: RowType
    nameWithType: RowType
    fullName: RowType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: RowType
    nameWithType: RowType
    fullName: RowType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.RegisterEntity*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.RegisterEntity
  isExternal: true
  name: RegisterEntity
  nameWithType: InMemoryProviderBase<RowType>.RegisterEntity
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.RegisterEntity
  nameWithType.vb: InMemoryProviderBase(Of RowType).RegisterEntity
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).RegisterEntity
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  commentId: T:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: ArchiveRowTypeInfo
  nameWithType: ArchiveRowTypeInfo
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetReader*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetReader
  isExternal: true
  name: GetReader
  nameWithType: InMemoryProviderBase<RowType>.GetReader
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.GetReader
  nameWithType.vb: InMemoryProviderBase(Of RowType).GetReader
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).GetReader
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  isExternal: true
  name: GetReader(String)
  nameWithType: IArchiveProviderHasRows.GetReader(String)
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
    name: GetReader
    nameWithType: IArchiveProviderHasRows.GetReader
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
    name: GetReader
    nameWithType: IArchiveProviderHasRows.GetReader
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataReader
  isExternal: true
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetRows*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetRows
  isExternal: true
  name: GetRows
  nameWithType: InMemoryProviderBase<RowType>.GetRows
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.GetRows
  nameWithType.vb: InMemoryProviderBase(Of RowType).GetRows
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).GetRows
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  isExternal: true
  name: GetRows(String)
  nameWithType: IArchiveProviderHasRows.GetRows(String)
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
    name: GetRows
    nameWithType: IArchiveProviderHasRows.GetRows
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
    name: GetRows
    nameWithType: IArchiveProviderHasRows.GetRows
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRow}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRow}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ArchiveRow>
  nameWithType: IEnumerable<ArchiveRow>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.ArchiveLists.ArchiveRow>
  nameWithType.vb: IEnumerable(Of ArchiveRow)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.ArchiveLists.ArchiveRow)
  name.vb: IEnumerable(Of ArchiveRow)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRow
    name: ArchiveRow
    nameWithType: ArchiveRow
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRow
    name: ArchiveRow
    nameWithType: ArchiveRow
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetResultInformation*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetResultInformation
  isExternal: true
  name: GetResultInformation
  nameWithType: InMemoryProviderBase<RowType>.GetResultInformation
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.GetResultInformation
  nameWithType.vb: InMemoryProviderBase(Of RowType).GetResultInformation
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).GetResultInformation
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  isExternal: true
  name: GetResultInformation()
  nameWithType: IArchiveProviderHasRows.GetResultInformation()
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
    name: GetResultInformation
    nameWithType: IArchiveProviderHasRows.GetResultInformation
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
    name: GetResultInformation
    nameWithType: IArchiveProviderHasRows.GetResultInformation
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveResultInformation
  commentId: T:SuperOffice.CRM.ArchiveLists.ArchiveResultInformation
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: ArchiveResultInformation
  nameWithType: ArchiveResultInformation
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveResultInformation
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SortData*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SortData
  isExternal: true
  name: SortData
  nameWithType: InMemoryProviderBase<RowType>.SortData
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.SortData
  nameWithType.vb: InMemoryProviderBase(Of RowType).SortData
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).SortData
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.Close*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.Close
  isExternal: true
  name: Close
  nameWithType: InMemoryProviderBase<RowType>.Close
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.Close
  nameWithType.vb: InMemoryProviderBase(Of RowType).Close
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).Close
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  isExternal: true
  name: Close()
  nameWithType: IArchiveProviderHasRows.Close()
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
    name: Close
    nameWithType: IArchiveProviderHasRows.Close
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
    name: Close
    nameWithType: IArchiveProviderHasRows.Close
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetPagingInfo*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetPagingInfo
  isExternal: true
  name: SetPagingInfo
  nameWithType: InMemoryProviderBase<RowType>.SetPagingInfo
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.SetPagingInfo
  nameWithType.vb: InMemoryProviderBase(Of RowType).SetPagingInfo
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).SetPagingInfo
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32,System.Int32)
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  isExternal: true
  name: SetPagingInfo(Int32, Int32)
  nameWithType: IArchiveProviderHasRows.SetPagingInfo(Int32, Int32)
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32,System.Int32)
    name: SetPagingInfo
    nameWithType: IArchiveProviderHasRows.SetPagingInfo
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32,System.Int32)
    name: SetPagingInfo
    nameWithType: IArchiveProviderHasRows.SetPagingInfo
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetAvailableColumns*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetAvailableColumns
  isExternal: true
  name: GetAvailableColumns
  nameWithType: InMemoryProviderBase<RowType>.GetAvailableColumns
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.GetAvailableColumns
  nameWithType.vb: InMemoryProviderBase(Of RowType).GetAvailableColumns
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).GetAvailableColumns
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  isExternal: true
  name: GetAvailableColumns()
  nameWithType: IArchiveProviderHasColumns.GetAvailableColumns()
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
    name: GetAvailableColumns
    nameWithType: IArchiveProviderHasColumns.GetAvailableColumns
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
    name: GetAvailableColumns
    nameWithType: IArchiveProviderHasColumns.GetAvailableColumns
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ArchiveColumnInfo>
  nameWithType: List<ArchiveColumnInfo>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo>
  nameWithType.vb: List(Of ArchiveColumnInfo)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo)
  name.vb: List(Of ArchiveColumnInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    name: ArchiveColumnInfo
    nameWithType: ArchiveColumnInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    name: ArchiveColumnInfo
    nameWithType: ArchiveColumnInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetDesiredColumns*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetDesiredColumns
  isExternal: true
  name: SetDesiredColumns
  nameWithType: InMemoryProviderBase<RowType>.SetDesiredColumns
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.SetDesiredColumns
  nameWithType.vb: InMemoryProviderBase(Of RowType).SetDesiredColumns
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).SetDesiredColumns
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  isExternal: true
  name: SetDesiredColumns(String[])
  nameWithType: IArchiveProviderHasColumns.SetDesiredColumns(String[])
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
  nameWithType.vb: IArchiveProviderHasColumns.SetDesiredColumns(String())
  fullName.vb: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String())
  name.vb: SetDesiredColumns(String())
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
    name: SetDesiredColumns
    nameWithType: IArchiveProviderHasColumns.SetDesiredColumns
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
    name: SetDesiredColumns
    nameWithType: IArchiveProviderHasColumns.SetDesiredColumns
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetOrderBy*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetOrderBy
  isExternal: true
  name: SetOrderBy
  nameWithType: InMemoryProviderBase<RowType>.SetOrderBy
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.SetOrderBy
  nameWithType.vb: InMemoryProviderBase(Of RowType).SetOrderBy
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).SetOrderBy
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  isExternal: true
  name: SetOrderBy(ArchiveOrderByInfo[])
  nameWithType: IArchiveProviderHasColumns.SetOrderBy(ArchiveOrderByInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  nameWithType.vb: IArchiveProviderHasColumns.SetOrderBy(ArchiveOrderByInfo())
  fullName.vb: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo())
  name.vb: SetOrderBy(ArchiveOrderByInfo())
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
    name: SetOrderBy
    nameWithType: IArchiveProviderHasColumns.SetOrderBy
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
    name: SetOrderBy
    nameWithType: IArchiveProviderHasColumns.SetOrderBy
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
  isExternal: true
  name: ArchiveOrderByInfo[]
  nameWithType: ArchiveOrderByInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
  nameWithType.vb: ArchiveOrderByInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo()
  name.vb: ArchiveOrderByInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetRestriction*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetRestriction
  isExternal: true
  name: SetRestriction
  nameWithType: InMemoryProviderBase<RowType>.SetRestriction
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.SetRestriction
  nameWithType.vb: InMemoryProviderBase(Of RowType).SetRestriction
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).SetRestriction
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  isExternal: true
  name: SetRestriction(ArchiveRestrictionInfo[])
  nameWithType: IArchiveProviderHasColumns.SetRestriction(ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  nameWithType.vb: IArchiveProviderHasColumns.SetRestriction(ArchiveRestrictionInfo())
  fullName.vb: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: SetRestriction(ArchiveRestrictionInfo())
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
    name: SetRestriction
    nameWithType: IArchiveProviderHasColumns.SetRestriction
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
    name: SetRestriction
    nameWithType: IArchiveProviderHasColumns.SetRestriction
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  isExternal: true
  name: ArchiveRestrictionInfo[]
  nameWithType: ArchiveRestrictionInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  nameWithType.vb: ArchiveRestrictionInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo()
  name.vb: ArchiveRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetAvailableEntities*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.GetAvailableEntities
  isExternal: true
  name: GetAvailableEntities
  nameWithType: InMemoryProviderBase<RowType>.GetAvailableEntities
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.GetAvailableEntities
  nameWithType.vb: InMemoryProviderBase(Of RowType).GetAvailableEntities
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).GetAvailableEntities
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
  isExternal: true
  name: GetAvailableEntities()
  nameWithType: IArchiveProviderHasEntities.GetAvailableEntities()
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
    name: GetAvailableEntities
    nameWithType: IArchiveProviderHasEntities.GetAvailableEntities
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
    name: GetAvailableEntities
    nameWithType: IArchiveProviderHasEntities.GetAvailableEntities
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ArchiveRowTypeInfo>
  nameWithType: List<ArchiveRowTypeInfo>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>
  nameWithType.vb: List(Of ArchiveRowTypeInfo)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  name.vb: List(Of ArchiveRowTypeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    nameWithType: ArchiveRowTypeInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    nameWithType: ArchiveRowTypeInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetDesiredEntities*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.SetDesiredEntities
  isExternal: true
  name: SetDesiredEntities
  nameWithType: InMemoryProviderBase<RowType>.SetDesiredEntities
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.SetDesiredEntities
  nameWithType.vb: InMemoryProviderBase(Of RowType).SetDesiredEntities
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).SetDesiredEntities
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
  isExternal: true
  name: SetDesiredEntities(String[])
  nameWithType: IArchiveProviderHasEntities.SetDesiredEntities(String[])
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
  nameWithType.vb: IArchiveProviderHasEntities.SetDesiredEntities(String())
  fullName.vb: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String())
  name.vb: SetDesiredEntities(String())
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
    name: SetDesiredEntities
    nameWithType: IArchiveProviderHasEntities.SetDesiredEntities
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
    name: SetDesiredEntities
    nameWithType: IArchiveProviderHasEntities.SetDesiredEntities
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.EntityHelper*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.EntityHelper
  isExternal: true
  name: EntityHelper
  nameWithType: InMemoryProviderBase<RowType>.EntityHelper
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.EntityHelper
  nameWithType.vb: InMemoryProviderBase(Of RowType).EntityHelper
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).EntityHelper
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.ColumnHelper*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.ColumnHelper
  isExternal: true
  name: ColumnHelper
  nameWithType: InMemoryProviderBase<RowType>.ColumnHelper
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.ColumnHelper
  nameWithType.vb: InMemoryProviderBase(Of RowType).ColumnHelper
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).ColumnHelper
- uid: SuperOffice.CRM.ArchiveLists.ColumnHelper
  commentId: T:SuperOffice.CRM.ArchiveLists.ColumnHelper
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: ColumnHelper
  nameWithType: ColumnHelper
  fullName: SuperOffice.CRM.ArchiveLists.ColumnHelper
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldFilterColumns*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldFilterColumns
  isExternal: true
  name: BaseClassShouldFilterColumns
  nameWithType: InMemoryProviderBase<RowType>.BaseClassShouldFilterColumns
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.BaseClassShouldFilterColumns
  nameWithType.vb: InMemoryProviderBase(Of RowType).BaseClassShouldFilterColumns
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).BaseClassShouldFilterColumns
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldFilterEntities*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldFilterEntities
  isExternal: true
  name: BaseClassShouldFilterEntities
  nameWithType: InMemoryProviderBase<RowType>.BaseClassShouldFilterEntities
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.BaseClassShouldFilterEntities
  nameWithType.vb: InMemoryProviderBase(Of RowType).BaseClassShouldFilterEntities
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).BaseClassShouldFilterEntities
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldPage*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldPage
  isExternal: true
  name: BaseClassShouldPage
  nameWithType: InMemoryProviderBase<RowType>.BaseClassShouldPage
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.BaseClassShouldPage
  nameWithType.vb: InMemoryProviderBase(Of RowType).BaseClassShouldPage
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).BaseClassShouldPage
- uid: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldSort*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.InMemoryProviderBase`1.BaseClassShouldSort
  isExternal: true
  name: BaseClassShouldSort
  nameWithType: InMemoryProviderBase<RowType>.BaseClassShouldSort
  fullName: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase<RowType>.BaseClassShouldSort
  nameWithType.vb: InMemoryProviderBase(Of RowType).BaseClassShouldSort
  fullName.vb: SuperOffice.CRM.ArchiveLists.InMemoryProviderBase(Of RowType).BaseClassShouldSort
