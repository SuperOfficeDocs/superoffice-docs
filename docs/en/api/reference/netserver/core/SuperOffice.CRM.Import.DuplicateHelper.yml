### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Import.DuplicateHelper
  commentId: T:SuperOffice.CRM.Import.DuplicateHelper
  id: DuplicateHelper
  parent: SuperOffice.CRM.Import
  children:
  - SuperOffice.CRM.Import.DuplicateHelper.#ctor(System.Collections.Generic.Dictionary{System.String,System.Int32},SuperOffice.Data.ImportContactDuplicateMatch,SuperOffice.Data.ImportPersonDuplicateMatch,SuperOffice.Data.ImportBlankAction,System.Boolean,System.Boolean,System.Int32,System.Int32)
  - SuperOffice.CRM.Import.DuplicateHelper.GetDuplicates(SuperOffice.CRM.Import.ImportItem[],System.Collections.Generic.Dictionary{System.String,System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Boolean},System.Collections.Generic.Dictionary{System.Int32,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Int16},System.Boolean,System.Boolean,System.Boolean,System.Int32,SuperOffice.Data.ImportDuplicateAction,SuperOffice.Data.ImportDuplicateAction)
  langs:
  - csharp
  - vb
  name: DuplicateHelper
  nameWithType: DuplicateHelper
  fullName: SuperOffice.CRM.Import.DuplicateHelper
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Import
  summary: "\nClass that encapsulates the duplicate check in the import routine\n"
  syntax:
    content: public class DuplicateHelper
    content.vb: Public Class DuplicateHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Import.DuplicateHelper.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Import.DuplicateHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Import.DuplicateHelper.#ctor(System.Collections.Generic.Dictionary{System.String,System.Int32},SuperOffice.Data.ImportContactDuplicateMatch,SuperOffice.Data.ImportPersonDuplicateMatch,SuperOffice.Data.ImportBlankAction,System.Boolean,System.Boolean,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Import.DuplicateHelper.#ctor(System.Collections.Generic.Dictionary{System.String,System.Int32},SuperOffice.Data.ImportContactDuplicateMatch,SuperOffice.Data.ImportPersonDuplicateMatch,SuperOffice.Data.ImportBlankAction,System.Boolean,System.Boolean,System.Int32,System.Int32)
  id: '#ctor(System.Collections.Generic.Dictionary{System.String,System.Int32},SuperOffice.Data.ImportContactDuplicateMatch,SuperOffice.Data.ImportPersonDuplicateMatch,SuperOffice.Data.ImportBlankAction,System.Boolean,System.Boolean,System.Int32,System.Int32)'
  parent: SuperOffice.CRM.Import.DuplicateHelper
  langs:
  - csharp
  - vb
  name: DuplicateHelper(Dictionary<String, Int32>, ImportContactDuplicateMatch, ImportPersonDuplicateMatch, ImportBlankAction, Boolean, Boolean, Int32, Int32)
  nameWithType: DuplicateHelper.DuplicateHelper(Dictionary<String, Int32>, ImportContactDuplicateMatch, ImportPersonDuplicateMatch, ImportBlankAction, Boolean, Boolean, Int32, Int32)
  fullName: SuperOffice.CRM.Import.DuplicateHelper.DuplicateHelper(System.Collections.Generic.Dictionary<System.String, System.Int32>, SuperOffice.Data.ImportContactDuplicateMatch, SuperOffice.Data.ImportPersonDuplicateMatch, SuperOffice.Data.ImportBlankAction, System.Boolean, System.Boolean, System.Int32, System.Int32)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Import
  summary: "\nConstructor\n"
  syntax:
    content: public DuplicateHelper(Dictionary<string, int> columnsDictionary, ImportContactDuplicateMatch contactMatch, ImportPersonDuplicateMatch dupPersonMatch, ImportBlankAction contactNameBlankAction, bool addAllContacts, bool addAllPersons, int countEmail, int countPhones)
    parameters:
    - id: columnsDictionary
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
      description: Columns setup
    - id: contactMatch
      type: SuperOffice.Data.ImportContactDuplicateMatch
      description: Duplicate type for contact matches
    - id: dupPersonMatch
      type: SuperOffice.Data.ImportPersonDuplicateMatch
      description: Duplicate type for person matches
    - id: contactNameBlankAction
      type: SuperOffice.Data.ImportBlankAction
      description: Action to take when contact name is blank
    - id: addAllContacts
      type: System.Boolean
      description: Add contacts?
    - id: addAllPersons
      type: System.Boolean
      description: Add persons?
    - id: countEmail
      type: System.Int32
    - id: countPhones
      type: System.Int32
    content.vb: Public Sub New(columnsDictionary As Dictionary(Of String, Integer), contactMatch As ImportContactDuplicateMatch, dupPersonMatch As ImportPersonDuplicateMatch, contactNameBlankAction As ImportBlankAction, addAllContacts As Boolean, addAllPersons As Boolean, countEmail As Integer, countPhones As Integer)
  overload: SuperOffice.CRM.Import.DuplicateHelper.#ctor*
  nameWithType.vb: DuplicateHelper.DuplicateHelper(Dictionary(Of String, Int32), ImportContactDuplicateMatch, ImportPersonDuplicateMatch, ImportBlankAction, Boolean, Boolean, Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Import.DuplicateHelper.DuplicateHelper(System.Collections.Generic.Dictionary(Of System.String, System.Int32), SuperOffice.Data.ImportContactDuplicateMatch, SuperOffice.Data.ImportPersonDuplicateMatch, SuperOffice.Data.ImportBlankAction, System.Boolean, System.Boolean, System.Int32, System.Int32)
  name.vb: DuplicateHelper(Dictionary(Of String, Int32), ImportContactDuplicateMatch, ImportPersonDuplicateMatch, ImportBlankAction, Boolean, Boolean, Int32, Int32)
- uid: SuperOffice.CRM.Import.DuplicateHelper.GetDuplicates(SuperOffice.CRM.Import.ImportItem[],System.Collections.Generic.Dictionary{System.String,System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Boolean},System.Collections.Generic.Dictionary{System.Int32,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Int16},System.Boolean,System.Boolean,System.Boolean,System.Int32,SuperOffice.Data.ImportDuplicateAction,SuperOffice.Data.ImportDuplicateAction)
  commentId: M:SuperOffice.CRM.Import.DuplicateHelper.GetDuplicates(SuperOffice.CRM.Import.ImportItem[],System.Collections.Generic.Dictionary{System.String,System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Boolean},System.Collections.Generic.Dictionary{System.Int32,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Int16},System.Boolean,System.Boolean,System.Boolean,System.Int32,SuperOffice.Data.ImportDuplicateAction,SuperOffice.Data.ImportDuplicateAction)
  id: GetDuplicates(SuperOffice.CRM.Import.ImportItem[],System.Collections.Generic.Dictionary{System.String,System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Boolean},System.Collections.Generic.Dictionary{System.Int32,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Int16},System.Boolean,System.Boolean,System.Boolean,System.Int32,SuperOffice.Data.ImportDuplicateAction,SuperOffice.Data.ImportDuplicateAction)
  parent: SuperOffice.CRM.Import.DuplicateHelper
  langs:
  - csharp
  - vb
  name: GetDuplicates(ImportItem[], Dictionary<String, Boolean>, Dictionary<String, Dictionary<String, Object>>, Dictionary<String, Boolean>, Dictionary<Int32, String>, Dictionary<String, Dictionary<String, Object>>, Dictionary<String, Int16>, Boolean, Boolean, Boolean, Int32, ImportDuplicateAction, ImportDuplicateAction)
  nameWithType: DuplicateHelper.GetDuplicates(ImportItem[], Dictionary<String, Boolean>, Dictionary<String, Dictionary<String, Object>>, Dictionary<String, Boolean>, Dictionary<Int32, String>, Dictionary<String, Dictionary<String, Object>>, Dictionary<String, Int16>, Boolean, Boolean, Boolean, Int32, ImportDuplicateAction, ImportDuplicateAction)
  fullName: SuperOffice.CRM.Import.DuplicateHelper.GetDuplicates(SuperOffice.CRM.Import.ImportItem[], System.Collections.Generic.Dictionary<System.String, System.Boolean>, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.Dictionary<System.String, System.Object>>, System.Collections.Generic.Dictionary<System.String, System.Boolean>, System.Collections.Generic.Dictionary<System.Int32, System.String>, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.Dictionary<System.String, System.Object>>, System.Collections.Generic.Dictionary<System.String, System.Int16>, System.Boolean, System.Boolean, System.Boolean, System.Int32, SuperOffice.Data.ImportDuplicateAction, SuperOffice.Data.ImportDuplicateAction)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Import
  summary: "\nPrepare the duplicate information\n"
  syntax:
    content: public void GetDuplicates(ImportItem[] importRows, Dictionary<string, bool> contactInserted, Dictionary<string, Dictionary<string, object>> contactLookup, Dictionary<string, bool> personInserted, Dictionary<int, string> contactIdLookup, Dictionary<string, Dictionary<string, object>> personLookup, Dictionary<string, short> contactPersonRankLookUp, bool saveForReal, bool isErpContact, bool isErpPerson, int connectionId, ImportDuplicateAction contactDuplicateAction, ImportDuplicateAction personDuplicateAction)
    parameters:
    - id: importRows
      type: SuperOffice.CRM.Import.ImportItem[]
    - id: contactInserted
      type: System.Collections.Generic.Dictionary{System.String,System.Boolean}
    - id: contactLookup
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Object}}
    - id: personInserted
      type: System.Collections.Generic.Dictionary{System.String,System.Boolean}
    - id: contactIdLookup
      type: System.Collections.Generic.Dictionary{System.Int32,System.String}
    - id: personLookup
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Object}}
    - id: contactPersonRankLookUp
      type: System.Collections.Generic.Dictionary{System.String,System.Int16}
    - id: saveForReal
      type: System.Boolean
    - id: isErpContact
      type: System.Boolean
    - id: isErpPerson
      type: System.Boolean
    - id: connectionId
      type: System.Int32
    - id: contactDuplicateAction
      type: SuperOffice.Data.ImportDuplicateAction
    - id: personDuplicateAction
      type: SuperOffice.Data.ImportDuplicateAction
    content.vb: Public Sub GetDuplicates(importRows As ImportItem(), contactInserted As Dictionary(Of String, Boolean), contactLookup As Dictionary(Of String, Dictionary(Of String, Object)), personInserted As Dictionary(Of String, Boolean), contactIdLookup As Dictionary(Of Integer, String), personLookup As Dictionary(Of String, Dictionary(Of String, Object)), contactPersonRankLookUp As Dictionary(Of String, Short), saveForReal As Boolean, isErpContact As Boolean, isErpPerson As Boolean, connectionId As Integer, contactDuplicateAction As ImportDuplicateAction, personDuplicateAction As ImportDuplicateAction)
  overload: SuperOffice.CRM.Import.DuplicateHelper.GetDuplicates*
  nameWithType.vb: DuplicateHelper.GetDuplicates(ImportItem(), Dictionary(Of String, Boolean), Dictionary(Of String, Dictionary(Of String, Object)), Dictionary(Of String, Boolean), Dictionary(Of Int32, String), Dictionary(Of String, Dictionary(Of String, Object)), Dictionary(Of String, Int16), Boolean, Boolean, Boolean, Int32, ImportDuplicateAction, ImportDuplicateAction)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Import.DuplicateHelper.GetDuplicates(SuperOffice.CRM.Import.ImportItem(), System.Collections.Generic.Dictionary(Of System.String, System.Boolean), System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object)), System.Collections.Generic.Dictionary(Of System.String, System.Boolean), System.Collections.Generic.Dictionary(Of System.Int32, System.String), System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object)), System.Collections.Generic.Dictionary(Of System.String, System.Int16), System.Boolean, System.Boolean, System.Boolean, System.Int32, SuperOffice.Data.ImportDuplicateAction, SuperOffice.Data.ImportDuplicateAction)
  name.vb: GetDuplicates(ImportItem(), Dictionary(Of String, Boolean), Dictionary(Of String, Dictionary(Of String, Object)), Dictionary(Of String, Boolean), Dictionary(Of Int32, String), Dictionary(Of String, Dictionary(Of String, Object)), Dictionary(Of String, Int16), Boolean, Boolean, Boolean, Int32, ImportDuplicateAction, ImportDuplicateAction)
references:
- uid: SuperOffice.CRM.Import
  commentId: N:SuperOffice.CRM.Import
  isExternal: true
  name: SuperOffice.CRM.Import
  nameWithType: SuperOffice.CRM.Import
  fullName: SuperOffice.CRM.Import
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Import.DuplicateHelper.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<DuplicateHelper, To>()
  nameWithType: EnumUtil.MapEnums<DuplicateHelper, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Import.DuplicateHelper, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of DuplicateHelper, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Import.DuplicateHelper, To)()
  name.vb: MapEnums(Of DuplicateHelper, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<DuplicateHelper, To>
    nameWithType: EnumUtil.MapEnums<DuplicateHelper, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Import.DuplicateHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of DuplicateHelper, To)
    nameWithType: EnumUtil.MapEnums(Of DuplicateHelper, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Import.DuplicateHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Import.DuplicateHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<DuplicateHelper, To>()
  nameWithType: Converters.MapEnums<DuplicateHelper, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Import.DuplicateHelper, To>()
  nameWithType.vb: Converters.MapEnums(Of DuplicateHelper, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Import.DuplicateHelper, To)()
  name.vb: MapEnums(Of DuplicateHelper, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<DuplicateHelper, To>
    nameWithType: Converters.MapEnums<DuplicateHelper, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Import.DuplicateHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of DuplicateHelper, To)
    nameWithType: Converters.MapEnums(Of DuplicateHelper, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Import.DuplicateHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Import.DuplicateHelper.#ctor*
  commentId: Overload:SuperOffice.CRM.Import.DuplicateHelper.#ctor
  isExternal: true
  name: DuplicateHelper
  nameWithType: DuplicateHelper.DuplicateHelper
  fullName: SuperOffice.CRM.Import.DuplicateHelper.DuplicateHelper
- uid: System.Collections.Generic.Dictionary{System.String,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Int32>
  nameWithType: Dictionary<String, Int32>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Int32>
  nameWithType.vb: Dictionary(Of String, Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Int32)
  name.vb: Dictionary(Of String, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ImportContactDuplicateMatch
  commentId: T:SuperOffice.Data.ImportContactDuplicateMatch
  parent: SuperOffice.Data
  isExternal: true
  name: ImportContactDuplicateMatch
  nameWithType: ImportContactDuplicateMatch
  fullName: SuperOffice.Data.ImportContactDuplicateMatch
- uid: SuperOffice.Data.ImportPersonDuplicateMatch
  commentId: T:SuperOffice.Data.ImportPersonDuplicateMatch
  parent: SuperOffice.Data
  isExternal: true
  name: ImportPersonDuplicateMatch
  nameWithType: ImportPersonDuplicateMatch
  fullName: SuperOffice.Data.ImportPersonDuplicateMatch
- uid: SuperOffice.Data.ImportBlankAction
  commentId: T:SuperOffice.Data.ImportBlankAction
  parent: SuperOffice.Data
  isExternal: true
  name: ImportBlankAction
  nameWithType: ImportBlankAction
  fullName: SuperOffice.Data.ImportBlankAction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Import.DuplicateHelper.GetDuplicates*
  commentId: Overload:SuperOffice.CRM.Import.DuplicateHelper.GetDuplicates
  isExternal: true
  name: GetDuplicates
  nameWithType: DuplicateHelper.GetDuplicates
  fullName: SuperOffice.CRM.Import.DuplicateHelper.GetDuplicates
- uid: SuperOffice.CRM.Import.ImportItem[]
  isExternal: true
  name: ImportItem[]
  nameWithType: ImportItem[]
  fullName: SuperOffice.CRM.Import.ImportItem[]
  nameWithType.vb: ImportItem()
  fullName.vb: SuperOffice.CRM.Import.ImportItem()
  name.vb: ImportItem()
  spec.csharp:
  - uid: SuperOffice.CRM.Import.ImportItem
    name: ImportItem
    nameWithType: ImportItem
    fullName: SuperOffice.CRM.Import.ImportItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Import.ImportItem
    name: ImportItem
    nameWithType: ImportItem
    fullName: SuperOffice.CRM.Import.ImportItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.Dictionary{System.String,System.Boolean}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Boolean}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Boolean>
  nameWithType: Dictionary<String, Boolean>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Boolean>
  nameWithType.vb: Dictionary(Of String, Boolean)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Boolean)
  name.vb: Dictionary(Of String, Boolean)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Object}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Dictionary<String, Object>>
  nameWithType: Dictionary<String, Dictionary<String, Object>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.Dictionary<System.String, System.Object>>
  nameWithType.vb: Dictionary(Of String, Dictionary(Of String, Object))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: Dictionary(Of String, Dictionary(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.Int32,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Int32, String>
  nameWithType: Dictionary<Int32, String>
  fullName: System.Collections.Generic.Dictionary<System.Int32, System.String>
  nameWithType.vb: Dictionary(Of Int32, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Int32, System.String)
  name.vb: Dictionary(Of Int32, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.Int16}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int16}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Int16>
  nameWithType: Dictionary<String, Int16>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Int16>
  nameWithType.vb: Dictionary(Of String, Int16)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Int16)
  name.vb: Dictionary(Of String, Int16)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ImportDuplicateAction
  commentId: T:SuperOffice.Data.ImportDuplicateAction
  parent: SuperOffice.Data
  isExternal: true
  name: ImportDuplicateAction
  nameWithType: ImportDuplicateAction
  fullName: SuperOffice.Data.ImportDuplicateAction
