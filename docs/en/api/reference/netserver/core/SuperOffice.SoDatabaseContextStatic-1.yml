### YamlMime:ManagedReference
items:
- uid: SuperOffice.SoDatabaseContextStatic`1
  commentId: T:SuperOffice.SoDatabaseContextStatic`1
  id: SoDatabaseContextStatic`1
  parent: SuperOffice
  children:
  - SuperOffice.SoDatabaseContextStatic`1.#ctor
  - SuperOffice.SoDatabaseContextStatic`1.SafeGetValue(System.Func{`0})
  - SuperOffice.SoDatabaseContextStatic`1.Value
  langs:
  - csharp
  - vb
  name: SoDatabaseContextStatic<T>
  nameWithType: SoDatabaseContextStatic<T>
  fullName: SuperOffice.SoDatabaseContextStatic<T>
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nHelper class for storing things in a Database Context (that used to be static)\n"
  remarks: Call SafeGetValue to make sure the inner object is created as needed
  syntax:
    content: >-
      public sealed class SoDatabaseContextStatic<T>
          where T : class
    typeParameters:
    - id: T
      description: Type of value to hold
    content.vb: Public NotInheritable Class SoDatabaseContextStatic(Of T As Class)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.SoDatabaseContextStatic`1.EnumUtil.MapEnums``2
  - SuperOffice.SoDatabaseContextStatic`1.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.SoDatabaseContextStatic{{T}})
  - SuperOffice.SoDatabaseContextStatic`1.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.SoDatabaseContextStatic`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  nameWithType.vb: SoDatabaseContextStatic(Of T)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: SuperOffice.SoDatabaseContextStatic(Of T)
  name.vb: SoDatabaseContextStatic(Of T)
- uid: SuperOffice.SoDatabaseContextStatic`1.SafeGetValue(System.Func{`0})
  commentId: M:SuperOffice.SoDatabaseContextStatic`1.SafeGetValue(System.Func{`0})
  id: SafeGetValue(System.Func{`0})
  parent: SuperOffice.SoDatabaseContextStatic`1
  langs:
  - csharp
  - vb
  name: SafeGetValue(Func<T>)
  nameWithType: SoDatabaseContextStatic<T>.SafeGetValue(Func<T>)
  fullName: SuperOffice.SoDatabaseContextStatic<T>.SafeGetValue(System.Func<T>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nGet value from the database instance container and create a new if needed.\n"
  syntax:
    content: public T SafeGetValue(Func<T> create)
    parameters:
    - id: create
      type: System.Func{{T}}
      description: Function for creating a new instance.  Called only if an exisisting value is not allready present.
    return:
      type: '{T}'
    content.vb: Public Function SafeGetValue(create As Func(Of T)) As T
  overload: SuperOffice.SoDatabaseContextStatic`1.SafeGetValue*
  nameWithType.vb: SoDatabaseContextStatic(Of T).SafeGetValue(Func(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.SoDatabaseContextStatic(Of T).SafeGetValue(System.Func(Of T))
  name.vb: SafeGetValue(Func(Of T))
- uid: SuperOffice.SoDatabaseContextStatic`1.#ctor
  commentId: M:SuperOffice.SoDatabaseContextStatic`1.#ctor
  id: '#ctor'
  parent: SuperOffice.SoDatabaseContextStatic`1
  langs:
  - csharp
  - vb
  name: SoDatabaseContextStatic()
  nameWithType: SoDatabaseContextStatic<T>.SoDatabaseContextStatic()
  fullName: SuperOffice.SoDatabaseContextStatic<T>.SoDatabaseContextStatic()
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  syntax:
    content: public SoDatabaseContextStatic()
    content.vb: Public Sub New
  overload: SuperOffice.SoDatabaseContextStatic`1.#ctor*
  nameWithType.vb: SoDatabaseContextStatic(Of T).SoDatabaseContextStatic()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.SoDatabaseContextStatic(Of T).SoDatabaseContextStatic()
- uid: SuperOffice.SoDatabaseContextStatic`1.Value
  commentId: P:SuperOffice.SoDatabaseContextStatic`1.Value
  id: Value
  parent: SuperOffice.SoDatabaseContextStatic`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: SoDatabaseContextStatic<T>.Value
  fullName: SuperOffice.SoDatabaseContextStatic<T>.Value
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nGet the inner value from the database instance context.\n"
  syntax:
    content: public T Value { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property Value As T
  overload: SuperOffice.SoDatabaseContextStatic`1.Value*
  nameWithType.vb: SoDatabaseContextStatic(Of T).Value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.SoDatabaseContextStatic(Of T).Value
references:
- uid: SuperOffice
  commentId: N:SuperOffice
  isExternal: true
  name: SuperOffice
  nameWithType: SuperOffice
  fullName: SuperOffice
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.SoDatabaseContextStatic`1.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoDatabaseContextStatic<T>, To>()
  nameWithType: EnumUtil.MapEnums<SoDatabaseContextStatic<T>, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.SoDatabaseContextStatic<T>, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoDatabaseContextStatic(Of T), To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.SoDatabaseContextStatic(Of T), To)()
  name.vb: MapEnums(Of SoDatabaseContextStatic(Of T), To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoDatabaseContextStatic<T>, To>
    nameWithType: EnumUtil.MapEnums<SoDatabaseContextStatic<T>, To>
    fullName: EnumUtil.MapEnums<SuperOffice.SoDatabaseContextStatic<T>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoDatabaseContextStatic(Of T), To)
    nameWithType: EnumUtil.MapEnums(Of SoDatabaseContextStatic(Of T), To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.SoDatabaseContextStatic(Of T), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.SoDatabaseContextStatic`1.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.SoDatabaseContextStatic{{T}})
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<SoDatabaseContextStatic<T>>(SoDatabaseContextStatic<T>)
  nameWithType: ObjectExtensions.AssignByReflection<SoDatabaseContextStatic<T>>(SoDatabaseContextStatic<T>)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.SoDatabaseContextStatic<T>>(SuperOffice.SoDatabaseContextStatic<T>)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of SoDatabaseContextStatic(Of T))(SoDatabaseContextStatic(Of T))
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.SoDatabaseContextStatic(Of T))(SuperOffice.SoDatabaseContextStatic(Of T))
  name.vb: AssignByReflection(Of SoDatabaseContextStatic(Of T))(SoDatabaseContextStatic(Of T))
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<SoDatabaseContextStatic<T>>
    nameWithType: ObjectExtensions.AssignByReflection<SoDatabaseContextStatic<T>>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.SoDatabaseContextStatic<T>>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.SoDatabaseContextStatic`1
    name: SoDatabaseContextStatic
    nameWithType: SoDatabaseContextStatic
    fullName: SuperOffice.SoDatabaseContextStatic
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of SoDatabaseContextStatic(Of T))
    nameWithType: ObjectExtensions.AssignByReflection(Of SoDatabaseContextStatic(Of T))
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.SoDatabaseContextStatic(Of T))
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.SoDatabaseContextStatic`1
    name: SoDatabaseContextStatic
    nameWithType: SoDatabaseContextStatic
    fullName: SuperOffice.SoDatabaseContextStatic
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.SoDatabaseContextStatic`1.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<SoDatabaseContextStatic<T>>()
  nameWithType: ObjectExtensions.GraphCopy<SoDatabaseContextStatic<T>>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.SoDatabaseContextStatic<T>>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of SoDatabaseContextStatic(Of T))()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.SoDatabaseContextStatic(Of T))()
  name.vb: GraphCopy(Of SoDatabaseContextStatic(Of T))()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<SoDatabaseContextStatic<T>>
    nameWithType: ObjectExtensions.GraphCopy<SoDatabaseContextStatic<T>>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.SoDatabaseContextStatic<T>>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of SoDatabaseContextStatic(Of T))
    nameWithType: ObjectExtensions.GraphCopy(Of SoDatabaseContextStatic(Of T))
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.SoDatabaseContextStatic(Of T))
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.SoDatabaseContextStatic`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoDatabaseContextStatic<T>, To>()
  nameWithType: Converters.MapEnums<SoDatabaseContextStatic<T>, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.SoDatabaseContextStatic<T>, To>()
  nameWithType.vb: Converters.MapEnums(Of SoDatabaseContextStatic(Of T), To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.SoDatabaseContextStatic(Of T), To)()
  name.vb: MapEnums(Of SoDatabaseContextStatic(Of T), To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoDatabaseContextStatic<T>, To>
    nameWithType: Converters.MapEnums<SoDatabaseContextStatic<T>, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.SoDatabaseContextStatic<T>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoDatabaseContextStatic(Of T), To)
    nameWithType: Converters.MapEnums(Of SoDatabaseContextStatic(Of T), To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.SoDatabaseContextStatic(Of T), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.SoDatabaseContextStatic`1.SafeGetValue*
  commentId: Overload:SuperOffice.SoDatabaseContextStatic`1.SafeGetValue
  isExternal: true
  name: SafeGetValue
  nameWithType: SoDatabaseContextStatic<T>.SafeGetValue
  fullName: SuperOffice.SoDatabaseContextStatic<T>.SafeGetValue
  nameWithType.vb: SoDatabaseContextStatic(Of T).SafeGetValue
  fullName.vb: SuperOffice.SoDatabaseContextStatic(Of T).SafeGetValue
- uid: System.Func{{T}}
  commentId: T:System.Func{`0}
  parent: System
  definition: System.Func`1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: SuperOffice.SoDatabaseContextStatic`1.#ctor*
  commentId: Overload:SuperOffice.SoDatabaseContextStatic`1.#ctor
  isExternal: true
  name: SoDatabaseContextStatic
  nameWithType: SoDatabaseContextStatic<T>.SoDatabaseContextStatic
  fullName: SuperOffice.SoDatabaseContextStatic<T>.SoDatabaseContextStatic
  nameWithType.vb: SoDatabaseContextStatic(Of T).SoDatabaseContextStatic
  fullName.vb: SuperOffice.SoDatabaseContextStatic(Of T).SoDatabaseContextStatic
- uid: SuperOffice.SoDatabaseContextStatic`1.Value*
  commentId: Overload:SuperOffice.SoDatabaseContextStatic`1.Value
  isExternal: true
  name: Value
  nameWithType: SoDatabaseContextStatic<T>.Value
  fullName: SuperOffice.SoDatabaseContextStatic<T>.Value
  nameWithType.vb: SoDatabaseContextStatic(Of T).Value
  fullName.vb: SuperOffice.SoDatabaseContextStatic(Of T).Value
