### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SoConnection
  commentId: T:SuperOffice.Data.SoConnection
  id: SoConnection
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.SoConnection.BeginTransaction
  - SuperOffice.Data.SoConnection.BeginTransaction(System.Data.IsolationLevel)
  - SuperOffice.Data.SoConnection.Close
  - SuperOffice.Data.SoConnection.CreateCommand
  - SuperOffice.Data.SoConnection.DigContextTrace
  - SuperOffice.Data.SoConnection.Dispose
  - SuperOffice.Data.SoConnection.InnerConnection
  - SuperOffice.Data.SoConnection.Open
  - SuperOffice.Data.SoConnection.ToString
  langs:
  - csharp
  - vb
  name: SoConnection
  nameWithType: SoConnection
  fullName: SuperOffice.Data.SoConnection
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nThis class implements the IDbConnection interface, and is the wrapper used to represent a\nconnection against a physical database. The actual connection is an inner object and is\na database-specific class, potentially provided by a dynamically loaded assembly (sybase and\ndb/2).\n"
  syntax:
    content: 'public sealed class SoConnection : Object, IDbConnection, IDisposable'
    content.vb: >-
      Public NotInheritable Class SoConnection
          Inherits Object
          Implements IDbConnection, IDisposable
  inheritance:
  - System.Object
  implements:
  - System.Data.IDbConnection
  - System.IDisposable
  extensionMethods:
  - SuperOffice.Data.SoConnection.EnumUtil.MapEnums``2
  - SuperOffice.Data.SoConnection.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.Data.SoConnection.DigContextTrace
  commentId: F:SuperOffice.Data.SoConnection.DigContextTrace
  id: DigContextTrace
  parent: SuperOffice.Data.SoConnection
  langs:
  - csharp
  - vb
  name: DigContextTrace
  nameWithType: SoConnection.DigContextTrace
  fullName: SuperOffice.Data.SoConnection.DigContextTrace
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\n<strong>VERY</strong> hacky way to obtain data from the DIG system if there is a missing-config problem during test runs\n"
  syntax:
    content: public static StringBuilder DigContextTrace
    return:
      type: System.Text.StringBuilder
    content.vb: Public Shared DigContextTrace As StringBuilder
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.SoConnection.Open
  commentId: M:SuperOffice.Data.SoConnection.Open
  id: Open
  parent: SuperOffice.Data.SoConnection
  langs:
  - csharp
  - vb
  name: Open()
  nameWithType: SoConnection.Open()
  fullName: SuperOffice.Data.SoConnection.Open()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nOpens a database connection with the settings specified by the ConnectionString property of the provider-specific Connection object.  \n"
  syntax:
    content: public void Open()
    content.vb: Public Sub Open
  overload: SuperOffice.Data.SoConnection.Open*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoConnection.Close
  commentId: M:SuperOffice.Data.SoConnection.Close
  id: Close
  parent: SuperOffice.Data.SoConnection
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: SoConnection.Close()
  fullName: SuperOffice.Data.SoConnection.Close()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nCloses the connection to the database.  \n"
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: SuperOffice.Data.SoConnection.Close*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoConnection.ToString
  commentId: M:SuperOffice.Data.SoConnection.ToString
  id: ToString
  parent: SuperOffice.Data.SoConnection
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SoConnection.ToString()
  fullName: SuperOffice.Data.SoConnection.ToString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: SuperOffice.Data.SoConnection.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.Data.SoConnection.BeginTransaction
  commentId: M:SuperOffice.Data.SoConnection.BeginTransaction
  id: BeginTransaction
  parent: SuperOffice.Data.SoConnection
  langs:
  - csharp
  - vb
  name: BeginTransaction()
  nameWithType: SoConnection.BeginTransaction()
  fullName: SuperOffice.Data.SoConnection.BeginTransaction()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nBegins a database transaction.  \n"
  syntax:
    content: public SoTransaction BeginTransaction()
    return:
      type: SuperOffice.Data.SoTransaction
      description: An object representing the new transaction.
    content.vb: Public Function BeginTransaction As SoTransaction
  overload: SuperOffice.Data.SoConnection.BeginTransaction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoConnection.BeginTransaction(System.Data.IsolationLevel)
  commentId: M:SuperOffice.Data.SoConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: SuperOffice.Data.SoConnection
  langs:
  - csharp
  - vb
  name: BeginTransaction(IsolationLevel)
  nameWithType: SoConnection.BeginTransaction(IsolationLevel)
  fullName: SuperOffice.Data.SoConnection.BeginTransaction(System.Data.IsolationLevel)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nBegins a database transaction with the specified System.Data.IsolationLevel value.\n"
  syntax:
    content: public SoTransaction BeginTransaction(IsolationLevel isolationLevel)
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: One of the System.Data.IsolationLevel values.
    return:
      type: SuperOffice.Data.SoTransaction
      description: An object representing the new transaction.
    content.vb: Public Function BeginTransaction(isolationLevel As IsolationLevel) As SoTransaction
  overload: SuperOffice.Data.SoConnection.BeginTransaction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoConnection.CreateCommand
  commentId: M:SuperOffice.Data.SoConnection.CreateCommand
  id: CreateCommand
  parent: SuperOffice.Data.SoConnection
  langs:
  - csharp
  - vb
  name: CreateCommand()
  nameWithType: SoConnection.CreateCommand()
  fullName: SuperOffice.Data.SoConnection.CreateCommand()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nCreates and returns a Command object associated with the connection.\n"
  syntax:
    content: public SoCommand CreateCommand()
    return:
      type: SuperOffice.Data.SoCommand
      description: A Command object associated with the connection.
    content.vb: Public Function CreateCommand As SoCommand
  overload: SuperOffice.Data.SoConnection.CreateCommand*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoConnection.Dispose
  commentId: M:SuperOffice.Data.SoConnection.Dispose
  id: Dispose
  parent: SuperOffice.Data.SoConnection
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SoConnection.Dispose()
  fullName: SuperOffice.Data.SoConnection.Dispose()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nPerforms application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: SuperOffice.Data.SoConnection.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoConnection.InnerConnection
  commentId: P:SuperOffice.Data.SoConnection.InnerConnection
  id: InnerConnection
  parent: SuperOffice.Data.SoConnection
  langs:
  - csharp
  - vb
  name: InnerConnection
  nameWithType: SoConnection.InnerConnection
  fullName: SuperOffice.Data.SoConnection.InnerConnection
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nThe inner (e.g. native) connection object.\n"
  syntax:
    content: public IDbConnection InnerConnection { get; }
    parameters: []
    return:
      type: System.Data.IDbConnection
      description: The inner connection.
    content.vb: Public ReadOnly Property InnerConnection As IDbConnection
  overload: SuperOffice.Data.SoConnection.InnerConnection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.IDbConnection
  isExternal: true
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.Data.SoConnection.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoConnection, To>()
  nameWithType: EnumUtil.MapEnums<SoConnection, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SoConnection, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoConnection, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SoConnection, To)()
  name.vb: MapEnums(Of SoConnection, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoConnection, To>
    nameWithType: EnumUtil.MapEnums<SoConnection, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.SoConnection, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoConnection, To)
    nameWithType: EnumUtil.MapEnums(Of SoConnection, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.SoConnection, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SoConnection.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoConnection, To>()
  nameWithType: Converters.MapEnums<SoConnection, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SoConnection, To>()
  nameWithType.vb: Converters.MapEnums(Of SoConnection, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SoConnection, To)()
  name.vb: MapEnums(Of SoConnection, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoConnection, To>
    nameWithType: Converters.MapEnums<SoConnection, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SoConnection, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoConnection, To)
    nameWithType: Converters.MapEnums(Of SoConnection, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SoConnection, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Text.StringBuilder
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: SuperOffice.Data.SoConnection.Open*
  commentId: Overload:SuperOffice.Data.SoConnection.Open
  isExternal: true
  name: Open
  nameWithType: SoConnection.Open
  fullName: SuperOffice.Data.SoConnection.Open
- uid: SuperOffice.Data.SoConnection.Close*
  commentId: Overload:SuperOffice.Data.SoConnection.Close
  isExternal: true
  name: Close
  nameWithType: SoConnection.Close
  fullName: SuperOffice.Data.SoConnection.Close
- uid: SuperOffice.Data.SoConnection.ToString*
  commentId: Overload:SuperOffice.Data.SoConnection.ToString
  isExternal: true
  name: ToString
  nameWithType: SoConnection.ToString
  fullName: SuperOffice.Data.SoConnection.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.SoConnection.BeginTransaction*
  commentId: Overload:SuperOffice.Data.SoConnection.BeginTransaction
  isExternal: true
  name: BeginTransaction
  nameWithType: SoConnection.BeginTransaction
  fullName: SuperOffice.Data.SoConnection.BeginTransaction
- uid: SuperOffice.Data.SoTransaction
  commentId: T:SuperOffice.Data.SoTransaction
  parent: SuperOffice.Data
  isExternal: true
  name: SoTransaction
  nameWithType: SoTransaction
  fullName: SuperOffice.Data.SoTransaction
- uid: System.Data.IsolationLevel
  isExternal: true
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: SuperOffice.Data.SoConnection.CreateCommand*
  commentId: Overload:SuperOffice.Data.SoConnection.CreateCommand
  isExternal: true
  name: CreateCommand
  nameWithType: SoConnection.CreateCommand
  fullName: SuperOffice.Data.SoConnection.CreateCommand
- uid: SuperOffice.Data.SoCommand
  commentId: T:SuperOffice.Data.SoCommand
  parent: SuperOffice.Data
  isExternal: true
  name: SoCommand
  nameWithType: SoCommand
  fullName: SuperOffice.Data.SoCommand
- uid: SuperOffice.Data.SoConnection.Dispose*
  commentId: Overload:SuperOffice.Data.SoConnection.Dispose
  isExternal: true
  name: Dispose
  nameWithType: SoConnection.Dispose
  fullName: SuperOffice.Data.SoConnection.Dispose
- uid: SuperOffice.Data.SoConnection.InnerConnection*
  commentId: Overload:SuperOffice.Data.SoConnection.InnerConnection
  isExternal: true
  name: InnerConnection
  nameWithType: SoConnection.InnerConnection
  fullName: SuperOffice.Data.SoConnection.InnerConnection
