### YamlMime:ManagedReference
items:
- uid: SuperOffice.Threading.ThreadwiseKeyCache`1
  commentId: T:SuperOffice.Threading.ThreadwiseKeyCache`1
  id: ThreadwiseKeyCache`1
  parent: SuperOffice.Threading
  children:
  - SuperOffice.Threading.ThreadwiseKeyCache`1.#ctor
  - SuperOffice.Threading.ThreadwiseKeyCache`1.#ctor(System.Int32)
  - SuperOffice.Threading.ThreadwiseKeyCache`1.Add(`0)
  - SuperOffice.Threading.ThreadwiseKeyCache`1.ContainsKey(`0)
  langs:
  - csharp
  - vb
  name: ThreadwiseKeyCache<Item>
  nameWithType: ThreadwiseKeyCache<Item>
  fullName: SuperOffice.Threading.ThreadwiseKeyCache<Item>
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: "\nThe purpose of this class is to contain a cache of items, with a separate cache per thread.\nThe use case is that some class needs to maintain a unique list of items, uses a cache for this,\nand wants the list to be kept separate for each thread - even if the instance of the cache and/or client class is\nthe same.\n"
  syntax:
    content: public class ThreadwiseKeyCache<Item>
    typeParameters:
    - id: Item
    content.vb: Public Class ThreadwiseKeyCache(Of Item)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Threading.ThreadwiseKeyCache`1.EnumUtil.MapEnums``2
  - SuperOffice.Threading.ThreadwiseKeyCache`1.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Threading.ThreadwiseKeyCache{{Item}})
  - SuperOffice.Threading.ThreadwiseKeyCache`1.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Threading.ThreadwiseKeyCache`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  nameWithType.vb: ThreadwiseKeyCache(Of Item)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: SuperOffice.Threading.ThreadwiseKeyCache(Of Item)
  name.vb: ThreadwiseKeyCache(Of Item)
- uid: SuperOffice.Threading.ThreadwiseKeyCache`1.#ctor
  commentId: M:SuperOffice.Threading.ThreadwiseKeyCache`1.#ctor
  id: '#ctor'
  parent: SuperOffice.Threading.ThreadwiseKeyCache`1
  langs:
  - csharp
  - vb
  name: ThreadwiseKeyCache()
  nameWithType: ThreadwiseKeyCache<Item>.ThreadwiseKeyCache()
  fullName: SuperOffice.Threading.ThreadwiseKeyCache<Item>.ThreadwiseKeyCache()
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  syntax:
    content: public ThreadwiseKeyCache()
    content.vb: Public Sub New
  overload: SuperOffice.Threading.ThreadwiseKeyCache`1.#ctor*
  nameWithType.vb: ThreadwiseKeyCache(Of Item).ThreadwiseKeyCache()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Threading.ThreadwiseKeyCache(Of Item).ThreadwiseKeyCache()
- uid: SuperOffice.Threading.ThreadwiseKeyCache`1.#ctor(System.Int32)
  commentId: M:SuperOffice.Threading.ThreadwiseKeyCache`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: SuperOffice.Threading.ThreadwiseKeyCache`1
  langs:
  - csharp
  - vb
  name: ThreadwiseKeyCache(Int32)
  nameWithType: ThreadwiseKeyCache<Item>.ThreadwiseKeyCache(Int32)
  fullName: SuperOffice.Threading.ThreadwiseKeyCache<Item>.ThreadwiseKeyCache(System.Int32)
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  syntax:
    content: public ThreadwiseKeyCache(int defaultAllocationSize)
    parameters:
    - id: defaultAllocationSize
      type: System.Int32
    content.vb: Public Sub New(defaultAllocationSize As Integer)
  overload: SuperOffice.Threading.ThreadwiseKeyCache`1.#ctor*
  nameWithType.vb: ThreadwiseKeyCache(Of Item).ThreadwiseKeyCache(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Threading.ThreadwiseKeyCache(Of Item).ThreadwiseKeyCache(System.Int32)
- uid: SuperOffice.Threading.ThreadwiseKeyCache`1.ContainsKey(`0)
  commentId: M:SuperOffice.Threading.ThreadwiseKeyCache`1.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: SuperOffice.Threading.ThreadwiseKeyCache`1
  langs:
  - csharp
  - vb
  name: ContainsKey(Item)
  nameWithType: ThreadwiseKeyCache<Item>.ContainsKey(Item)
  fullName: SuperOffice.Threading.ThreadwiseKeyCache<Item>.ContainsKey(Item)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  syntax:
    content: public bool ContainsKey(Item item)
    parameters:
    - id: item
      type: '{Item}'
    return:
      type: System.Boolean
    content.vb: Public Function ContainsKey(item As Item) As Boolean
  overload: SuperOffice.Threading.ThreadwiseKeyCache`1.ContainsKey*
  nameWithType.vb: ThreadwiseKeyCache(Of Item).ContainsKey(Item)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Threading.ThreadwiseKeyCache(Of Item).ContainsKey(Item)
- uid: SuperOffice.Threading.ThreadwiseKeyCache`1.Add(`0)
  commentId: M:SuperOffice.Threading.ThreadwiseKeyCache`1.Add(`0)
  id: Add(`0)
  parent: SuperOffice.Threading.ThreadwiseKeyCache`1
  langs:
  - csharp
  - vb
  name: Add(Item)
  nameWithType: ThreadwiseKeyCache<Item>.Add(Item)
  fullName: SuperOffice.Threading.ThreadwiseKeyCache<Item>.Add(Item)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  syntax:
    content: public bool Add(Item item)
    parameters:
    - id: item
      type: '{Item}'
    return:
      type: System.Boolean
    content.vb: Public Function Add(item As Item) As Boolean
  overload: SuperOffice.Threading.ThreadwiseKeyCache`1.Add*
  nameWithType.vb: ThreadwiseKeyCache(Of Item).Add(Item)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Threading.ThreadwiseKeyCache(Of Item).Add(Item)
references:
- uid: SuperOffice.Threading
  commentId: N:SuperOffice.Threading
  isExternal: true
  name: SuperOffice.Threading
  nameWithType: SuperOffice.Threading
  fullName: SuperOffice.Threading
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Threading.ThreadwiseKeyCache`1.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ThreadwiseKeyCache<Item>, To>()
  nameWithType: EnumUtil.MapEnums<ThreadwiseKeyCache<Item>, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Threading.ThreadwiseKeyCache<Item>, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ThreadwiseKeyCache(Of Item), To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Threading.ThreadwiseKeyCache(Of Item), To)()
  name.vb: MapEnums(Of ThreadwiseKeyCache(Of Item), To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ThreadwiseKeyCache<Item>, To>
    nameWithType: EnumUtil.MapEnums<ThreadwiseKeyCache<Item>, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Threading.ThreadwiseKeyCache<Item>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ThreadwiseKeyCache(Of Item), To)
    nameWithType: EnumUtil.MapEnums(Of ThreadwiseKeyCache(Of Item), To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Threading.ThreadwiseKeyCache(Of Item), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Threading.ThreadwiseKeyCache`1.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Threading.ThreadwiseKeyCache{{Item}})
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ThreadwiseKeyCache<Item>>(ThreadwiseKeyCache<Item>)
  nameWithType: ObjectExtensions.AssignByReflection<ThreadwiseKeyCache<Item>>(ThreadwiseKeyCache<Item>)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Threading.ThreadwiseKeyCache<Item>>(SuperOffice.Threading.ThreadwiseKeyCache<Item>)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ThreadwiseKeyCache(Of Item))(ThreadwiseKeyCache(Of Item))
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Threading.ThreadwiseKeyCache(Of Item))(SuperOffice.Threading.ThreadwiseKeyCache(Of Item))
  name.vb: AssignByReflection(Of ThreadwiseKeyCache(Of Item))(ThreadwiseKeyCache(Of Item))
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ThreadwiseKeyCache<Item>>
    nameWithType: ObjectExtensions.AssignByReflection<ThreadwiseKeyCache<Item>>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Threading.ThreadwiseKeyCache<Item>>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Threading.ThreadwiseKeyCache`1
    name: ThreadwiseKeyCache
    nameWithType: ThreadwiseKeyCache
    fullName: SuperOffice.Threading.ThreadwiseKeyCache
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Item
    nameWithType: Item
    fullName: Item
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ThreadwiseKeyCache(Of Item))
    nameWithType: ObjectExtensions.AssignByReflection(Of ThreadwiseKeyCache(Of Item))
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Threading.ThreadwiseKeyCache(Of Item))
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Threading.ThreadwiseKeyCache`1
    name: ThreadwiseKeyCache
    nameWithType: ThreadwiseKeyCache
    fullName: SuperOffice.Threading.ThreadwiseKeyCache
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Item
    nameWithType: Item
    fullName: Item
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Threading.ThreadwiseKeyCache`1.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ThreadwiseKeyCache<Item>>()
  nameWithType: ObjectExtensions.GraphCopy<ThreadwiseKeyCache<Item>>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Threading.ThreadwiseKeyCache<Item>>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ThreadwiseKeyCache(Of Item))()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Threading.ThreadwiseKeyCache(Of Item))()
  name.vb: GraphCopy(Of ThreadwiseKeyCache(Of Item))()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ThreadwiseKeyCache<Item>>
    nameWithType: ObjectExtensions.GraphCopy<ThreadwiseKeyCache<Item>>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Threading.ThreadwiseKeyCache<Item>>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ThreadwiseKeyCache(Of Item))
    nameWithType: ObjectExtensions.GraphCopy(Of ThreadwiseKeyCache(Of Item))
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Threading.ThreadwiseKeyCache(Of Item))
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Threading.ThreadwiseKeyCache`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ThreadwiseKeyCache<Item>, To>()
  nameWithType: Converters.MapEnums<ThreadwiseKeyCache<Item>, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Threading.ThreadwiseKeyCache<Item>, To>()
  nameWithType.vb: Converters.MapEnums(Of ThreadwiseKeyCache(Of Item), To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Threading.ThreadwiseKeyCache(Of Item), To)()
  name.vb: MapEnums(Of ThreadwiseKeyCache(Of Item), To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ThreadwiseKeyCache<Item>, To>
    nameWithType: Converters.MapEnums<ThreadwiseKeyCache<Item>, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Threading.ThreadwiseKeyCache<Item>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ThreadwiseKeyCache(Of Item), To)
    nameWithType: Converters.MapEnums(Of ThreadwiseKeyCache(Of Item), To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Threading.ThreadwiseKeyCache(Of Item), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Threading.ThreadwiseKeyCache`1.#ctor*
  commentId: Overload:SuperOffice.Threading.ThreadwiseKeyCache`1.#ctor
  isExternal: true
  name: ThreadwiseKeyCache
  nameWithType: ThreadwiseKeyCache<Item>.ThreadwiseKeyCache
  fullName: SuperOffice.Threading.ThreadwiseKeyCache<Item>.ThreadwiseKeyCache
  nameWithType.vb: ThreadwiseKeyCache(Of Item).ThreadwiseKeyCache
  fullName.vb: SuperOffice.Threading.ThreadwiseKeyCache(Of Item).ThreadwiseKeyCache
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Threading.ThreadwiseKeyCache`1.ContainsKey*
  commentId: Overload:SuperOffice.Threading.ThreadwiseKeyCache`1.ContainsKey
  isExternal: true
  name: ContainsKey
  nameWithType: ThreadwiseKeyCache<Item>.ContainsKey
  fullName: SuperOffice.Threading.ThreadwiseKeyCache<Item>.ContainsKey
  nameWithType.vb: ThreadwiseKeyCache(Of Item).ContainsKey
  fullName.vb: SuperOffice.Threading.ThreadwiseKeyCache(Of Item).ContainsKey
- uid: '{Item}'
  commentId: '!:Item'
  definition: Item
  name: Item
  nameWithType: Item
  fullName: Item
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Item
  name: Item
  nameWithType: Item
  fullName: Item
- uid: SuperOffice.Threading.ThreadwiseKeyCache`1.Add*
  commentId: Overload:SuperOffice.Threading.ThreadwiseKeyCache`1.Add
  isExternal: true
  name: Add
  nameWithType: ThreadwiseKeyCache<Item>.Add
  fullName: SuperOffice.Threading.ThreadwiseKeyCache<Item>.Add
  nameWithType.vb: ThreadwiseKeyCache(Of Item).Add
  fullName.vb: SuperOffice.Threading.ThreadwiseKeyCache(Of Item).Add
