### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.WebhookRecordData
  commentId: T:SuperOffice.CRM.Rows.WebhookRecordData
  id: WebhookRecordData
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.WebhookRecordData.#ctor
  - SuperOffice.CRM.Rows.WebhookRecordData.ApplicationToken
  - SuperOffice.CRM.Rows.WebhookRecordData.ErrorsEmail
  - SuperOffice.CRM.Rows.WebhookRecordData.Events
  - SuperOffice.CRM.Rows.WebhookRecordData.Headers
  - SuperOffice.CRM.Rows.WebhookRecordData.Name
  - SuperOffice.CRM.Rows.WebhookRecordData.Properties
  - SuperOffice.CRM.Rows.WebhookRecordData.Registered
  - SuperOffice.CRM.Rows.WebhookRecordData.RegisteredAssociateId
  - SuperOffice.CRM.Rows.WebhookRecordData.Secret
  - SuperOffice.CRM.Rows.WebhookRecordData.State
  - SuperOffice.CRM.Rows.WebhookRecordData.TargetUrl
  - SuperOffice.CRM.Rows.WebhookRecordData.Type
  - SuperOffice.CRM.Rows.WebhookRecordData.Updated
  - SuperOffice.CRM.Rows.WebhookRecordData.UpdatedAssociateId
  - SuperOffice.CRM.Rows.WebhookRecordData.UpdatedCount
  - SuperOffice.CRM.Rows.WebhookRecordData.WebhookId
  langs:
  - csharp
  - vb
  name: WebhookRecordData
  nameWithType: WebhookRecordData
  fullName: SuperOffice.CRM.Rows.WebhookRecordData
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPOCO (Plain Old CLR Object) class that can be used to hold data corresponding\nto a row from the Webhook table.\n"
  remarks: "\nPlease use this class instead of a full <xref href=\"SuperOffice.CRM.Rows.WebhookRow\" data-throw-if-not-resolved=\"false\"></xref> object when\nyou do not need to <strong>create or update</strong> a value in the database. Row objects have a large overhead\nsince they carry the corresponding <xref href=\"SuperOffice.CRM.Data.WebhookTableInfo\" data-throw-if-not-resolved=\"false\"></xref> object, which\nin turn defines fields and aliases; there may be a Sentry on a row, and various other helper objects.\n"
  syntax:
    content: 'public class WebhookRecordData : Object'
    content.vb: >-
      Public Class WebhookRecordData
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.Rows.WebhookRecordData.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Rows.WebhookRecordData.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Rows.WebhookRecordData)
  - SuperOffice.CRM.Rows.WebhookRecordData.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Rows.WebhookRecordData.SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.WebhookRecordData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Rows.WebhookRecordData.WebhookId
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.WebhookId
  id: WebhookId
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: WebhookId
  nameWithType: WebhookRecordData.WebhookId
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.WebhookId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPrimary key \n"
  syntax:
    content: public int WebhookId
    return:
      type: System.Int32
    content.vb: Public WebhookId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.Name
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.Name
  id: Name
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: WebhookRecordData.Name
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.Name
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nName to identify this webhook. Does not have to be unique. \n"
  syntax:
    content: public string Name
    return:
      type: System.String
    content.vb: Public Name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.Events
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.Events
  id: Events
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: WebhookRecordData.Events
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.Events
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nComma separated list of event names that this hook responds to: &apos;contact.created,person.changed,project.deleted&apos; \n"
  syntax:
    content: public string Events
    return:
      type: System.String
    content.vb: Public Events As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.TargetUrl
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.TargetUrl
  id: TargetUrl
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: TargetUrl
  nameWithType: WebhookRecordData.TargetUrl
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.TargetUrl
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nDestination to POST event info to. URL for webhooks. Id for CRM scripts \n"
  syntax:
    content: public string TargetUrl
    return:
      type: System.String
    content.vb: Public TargetUrl As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.Type
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.Type
  id: Type
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: WebhookRecordData.Type
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.Type
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nName of plugin that handles this webhook. &apos;webhook&apos; for HTTP POST notifications, &apos;crmscript&apos; for script invocations. \n"
  syntax:
    content: public string Type
    return:
      type: System.String
    content.vb: Public Type As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.ApplicationToken
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.ApplicationToken
  id: ApplicationToken
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: ApplicationToken
  nameWithType: WebhookRecordData.ApplicationToken
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.ApplicationToken
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nApplication that registered this hook. If set, then other apps won&apos;t be able to modify this record \n"
  syntax:
    content: public string ApplicationToken
    return:
      type: System.String
    content.vb: Public ApplicationToken As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.Headers
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.Headers
  id: Headers
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: WebhookRecordData.Headers
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.Headers
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nHook specific additional HTTP headers that should be added to HTTP request, stored as JSON blob \n"
  syntax:
    content: public string Headers
    return:
      type: System.String
    content.vb: Public Headers As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.Properties
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.Properties
  id: Properties
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: WebhookRecordData.Properties
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.Properties
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nHook specific additional data that should be added to payload, stored as JSON blob \n"
  syntax:
    content: public string Properties
    return:
      type: System.String
    content.vb: Public Properties As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.Secret
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.Secret
  id: Secret
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: Secret
  nameWithType: WebhookRecordData.Secret
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.Secret
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nShared secret key used for generating SHA256 HMAC signature, so that receiver can verify that call came from this server \n"
  syntax:
    content: public string Secret
    return:
      type: System.String
    content.vb: Public Secret As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.State
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.State
  id: State
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: State
  nameWithType: WebhookRecordData.State
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.State
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nWebhook status - should we post events to the URL? 1=Active, 2=Stopped or 3=TooManyErrors \n"
  syntax:
    content: public WebhookState State
    return:
      type: SuperOffice.Data.WebhookState
    content.vb: Public State As WebhookState
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.Registered
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.Registered
  id: Registered
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: Registered
  nameWithType: WebhookRecordData.Registered
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.Registered
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nRegistered when in UTC.  \n"
  syntax:
    content: public DateTime Registered
    return:
      type: System.DateTime
    content.vb: Public Registered As DateTime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.RegisteredAssociateId
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.RegisteredAssociateId
  id: RegisteredAssociateId
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId
  nameWithType: WebhookRecordData.RegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.RegisteredAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nRegistered by whom \n"
  syntax:
    content: public int RegisteredAssociateId
    return:
      type: System.Int32
    content.vb: Public RegisteredAssociateId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.Updated
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.Updated
  id: Updated
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: WebhookRecordData.Updated
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.Updated
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nLast updated when in UTC.  \n"
  syntax:
    content: public DateTime Updated
    return:
      type: System.DateTime
    content.vb: Public Updated As DateTime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.UpdatedAssociateId
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.UpdatedAssociateId
  id: UpdatedAssociateId
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId
  nameWithType: WebhookRecordData.UpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.UpdatedAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nLast updated by whom \n"
  syntax:
    content: public int UpdatedAssociateId
    return:
      type: System.Int32
    content.vb: Public UpdatedAssociateId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.UpdatedCount
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.UpdatedCount
  id: UpdatedCount
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: UpdatedCount
  nameWithType: WebhookRecordData.UpdatedCount
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.UpdatedCount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nNumber of updates made to this record \n"
  syntax:
    content: public short UpdatedCount
    return:
      type: System.Int16
    content.vb: Public UpdatedCount As Short
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.ErrorsEmail
  commentId: F:SuperOffice.CRM.Rows.WebhookRecordData.ErrorsEmail
  id: ErrorsEmail
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: ErrorsEmail
  nameWithType: WebhookRecordData.ErrorsEmail
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.ErrorsEmail
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEmail address to send error message to when this webhook state changes to too-many errors. \n"
  syntax:
    content: public string ErrorsEmail
    return:
      type: System.String
    content.vb: Public ErrorsEmail As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.WebhookRecordData.#ctor
  commentId: M:SuperOffice.CRM.Rows.WebhookRecordData.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Rows.WebhookRecordData
  langs:
  - csharp
  - vb
  name: WebhookRecordData()
  nameWithType: WebhookRecordData.WebhookRecordData()
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.WebhookRecordData()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public WebhookRecordData()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Rows.WebhookRecordData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Rows.WebhookRecordData.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<WebhookRecordData, To>()
  nameWithType: EnumUtil.MapEnums<WebhookRecordData, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.WebhookRecordData, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of WebhookRecordData, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.WebhookRecordData, To)()
  name.vb: MapEnums(Of WebhookRecordData, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<WebhookRecordData, To>
    nameWithType: EnumUtil.MapEnums<WebhookRecordData, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.WebhookRecordData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of WebhookRecordData, To)
    nameWithType: EnumUtil.MapEnums(Of WebhookRecordData, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.WebhookRecordData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.WebhookRecordData.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Rows.WebhookRecordData)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<WebhookRecordData>(WebhookRecordData)
  nameWithType: ObjectExtensions.AssignByReflection<WebhookRecordData>(WebhookRecordData)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Rows.WebhookRecordData>(SuperOffice.CRM.Rows.WebhookRecordData)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of WebhookRecordData)(WebhookRecordData)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Rows.WebhookRecordData)(SuperOffice.CRM.Rows.WebhookRecordData)
  name.vb: AssignByReflection(Of WebhookRecordData)(WebhookRecordData)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<WebhookRecordData>
    nameWithType: ObjectExtensions.AssignByReflection<WebhookRecordData>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Rows.WebhookRecordData>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.WebhookRecordData
    name: WebhookRecordData
    nameWithType: WebhookRecordData
    fullName: SuperOffice.CRM.Rows.WebhookRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of WebhookRecordData)
    nameWithType: ObjectExtensions.AssignByReflection(Of WebhookRecordData)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Rows.WebhookRecordData)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.WebhookRecordData
    name: WebhookRecordData
    nameWithType: WebhookRecordData
    fullName: SuperOffice.CRM.Rows.WebhookRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.WebhookRecordData.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<WebhookRecordData>()
  nameWithType: ObjectExtensions.GraphCopy<WebhookRecordData>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Rows.WebhookRecordData>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of WebhookRecordData)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Rows.WebhookRecordData)()
  name.vb: GraphCopy(Of WebhookRecordData)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<WebhookRecordData>
    nameWithType: ObjectExtensions.GraphCopy<WebhookRecordData>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Rows.WebhookRecordData>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of WebhookRecordData)
    nameWithType: ObjectExtensions.GraphCopy(Of WebhookRecordData)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Rows.WebhookRecordData)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.WebhookRecordData.SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.WebhookRecordData,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.WebhookRecordDataExtensions
  definition: SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.WebhookRecordData,System.Threading.CancellationToken)
  name: ToInsertAsync(CancellationToken)
  nameWithType: WebhookRecordDataExtensions.ToInsertAsync(CancellationToken)
  fullName: SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync(System.Threading.CancellationToken)
    name: ToInsertAsync
    nameWithType: WebhookRecordDataExtensions.ToInsertAsync
    fullName: SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync(System.Threading.CancellationToken)
    name: ToInsertAsync
    nameWithType: WebhookRecordDataExtensions.ToInsertAsync
    fullName: SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.WebhookRecordData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<WebhookRecordData, To>()
  nameWithType: Converters.MapEnums<WebhookRecordData, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.WebhookRecordData, To>()
  nameWithType.vb: Converters.MapEnums(Of WebhookRecordData, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.WebhookRecordData, To)()
  name.vb: MapEnums(Of WebhookRecordData, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<WebhookRecordData, To>
    nameWithType: Converters.MapEnums<WebhookRecordData, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.WebhookRecordData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of WebhookRecordData, To)
    nameWithType: Converters.MapEnums(Of WebhookRecordData, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.WebhookRecordData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.WebhookRecordData,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.WebhookRecordData,System.Threading.CancellationToken)
  isExternal: true
  name: ToInsertAsync(WebhookRecordData, CancellationToken)
  nameWithType: WebhookRecordDataExtensions.ToInsertAsync(WebhookRecordData, CancellationToken)
  fullName: SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.WebhookRecordData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.WebhookRecordData,System.Threading.CancellationToken)
    name: ToInsertAsync
    nameWithType: WebhookRecordDataExtensions.ToInsertAsync
    fullName: SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.WebhookRecordData
    name: WebhookRecordData
    nameWithType: WebhookRecordData
    fullName: SuperOffice.CRM.Rows.WebhookRecordData
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.WebhookRecordData,System.Threading.CancellationToken)
    name: ToInsertAsync
    nameWithType: WebhookRecordDataExtensions.ToInsertAsync
    fullName: SuperOffice.CRM.Rows.WebhookRecordDataExtensions.ToInsertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.WebhookRecordData
    name: WebhookRecordData
    nameWithType: WebhookRecordData
    fullName: SuperOffice.CRM.Rows.WebhookRecordData
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.WebhookRecordDataExtensions
  commentId: T:SuperOffice.CRM.Rows.WebhookRecordDataExtensions
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: WebhookRecordDataExtensions
  nameWithType: WebhookRecordDataExtensions
  fullName: SuperOffice.CRM.Rows.WebhookRecordDataExtensions
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.WebhookState
  commentId: T:SuperOffice.Data.WebhookState
  parent: SuperOffice.Data
  isExternal: true
  name: WebhookState
  nameWithType: WebhookState
  fullName: SuperOffice.Data.WebhookState
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: SuperOffice.CRM.Rows.WebhookRecordData.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.WebhookRecordData.#ctor
  isExternal: true
  name: WebhookRecordData
  nameWithType: WebhookRecordData.WebhookRecordData
  fullName: SuperOffice.CRM.Rows.WebhookRecordData.WebhookRecordData
