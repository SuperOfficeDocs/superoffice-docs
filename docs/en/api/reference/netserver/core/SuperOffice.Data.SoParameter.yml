### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SoParameter
  commentId: T:SuperOffice.Data.SoParameter
  id: SoParameter
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.SoParameter.#ctor
  - SuperOffice.Data.SoParameter.#ctor(System.String,System.Data.DbType)
  - SuperOffice.Data.SoParameter.#ctor(System.String,System.Data.DbType,System.Int32)
  - SuperOffice.Data.SoParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  - SuperOffice.Data.SoParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.String)
  - SuperOffice.Data.SoParameter.#ctor(System.String,System.Data.DbType,System.String)
  - SuperOffice.Data.SoParameter.#ctor(System.String,System.Object)
  - SuperOffice.Data.SoParameter.Clone
  - SuperOffice.Data.SoParameter.DbType
  - SuperOffice.Data.SoParameter.Direction
  - SuperOffice.Data.SoParameter.IsNullable
  - SuperOffice.Data.SoParameter.ParameterName
  - SuperOffice.Data.SoParameter.Precision
  - SuperOffice.Data.SoParameter.Scale
  - SuperOffice.Data.SoParameter.Size
  - SuperOffice.Data.SoParameter.SourceColumn
  - SuperOffice.Data.SoParameter.SourceVersion
  - SuperOffice.Data.SoParameter.Value
  langs:
  - csharp
  - vb
  name: SoParameter
  nameWithType: SoParameter
  fullName: SuperOffice.Data.SoParameter
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nRepresents a parameter to a Command object.\nImplements IDbDataParameter, IDataParameter\n"
  syntax:
    content: 'public class SoParameter : IDbDataParameter, IDataParameter, ICloneable'
    content.vb: >-
      Public Class SoParameter
          Implements IDbDataParameter, IDataParameter, ICloneable
  inheritance:
  - System.Object
  implements:
  - System.Data.IDbDataParameter
  - System.Data.IDataParameter
  - System.ICloneable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.SoParameter.EnumUtil.MapEnums``2
  - SuperOffice.Data.SoParameter.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.SoParameter)
  - SuperOffice.Data.SoParameter.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.SoParameter.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Data.SoParameter.#ctor
  commentId: M:SuperOffice.Data.SoParameter.#ctor
  id: '#ctor'
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: SoParameter()
  nameWithType: SoParameter.SoParameter()
  fullName: SuperOffice.Data.SoParameter.SoParameter()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nDefault constructor\n"
  syntax:
    content: public SoParameter()
    content.vb: Public Sub New
  overload: SuperOffice.Data.SoParameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.#ctor(System.String,System.Data.DbType)
  commentId: M:SuperOffice.Data.SoParameter.#ctor(System.String,System.Data.DbType)
  id: '#ctor(System.String,System.Data.DbType)'
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: SoParameter(String, DbType)
  nameWithType: SoParameter.SoParameter(String, DbType)
  fullName: SuperOffice.Data.SoParameter.SoParameter(System.String, System.Data.DbType)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\n\n"
  syntax:
    content: public SoParameter(string parameterName, DbType dbType)
    parameters:
    - id: parameterName
      type: System.String
      description: The name of the parameter to map.
    - id: dbType
      type: System.Data.DbType
    content.vb: Public Sub New(parameterName As String, dbType As DbType)
  overload: SuperOffice.Data.SoParameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.#ctor(System.String,System.Object)
  commentId: M:SuperOffice.Data.SoParameter.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: SoParameter(String, Object)
  nameWithType: SoParameter.SoParameter(String, Object)
  fullName: SuperOffice.Data.SoParameter.SoParameter(System.String, System.Object)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SoParameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public SoParameter(string parameterName, object value)
    parameters:
    - id: parameterName
      type: System.String
      description: The name of the parameter to map.
    - id: value
      type: System.Object
      description: The value.
    content.vb: Public Sub New(parameterName As String, value As Object)
  overload: SuperOffice.Data.SoParameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.#ctor(System.String,System.Data.DbType,System.Int32)
  commentId: M:SuperOffice.Data.SoParameter.#ctor(System.String,System.Data.DbType,System.Int32)
  id: '#ctor(System.String,System.Data.DbType,System.Int32)'
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: SoParameter(String, DbType, Int32)
  nameWithType: SoParameter.SoParameter(String, DbType, Int32)
  fullName: SuperOffice.Data.SoParameter.SoParameter(System.String, System.Data.DbType, System.Int32)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SoParameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public SoParameter(string parameterName, DbType dbType, int size)
    parameters:
    - id: parameterName
      type: System.String
      description: The name of the parameter to map.
    - id: dbType
      type: System.Data.DbType
      description: Type of the db.
    - id: size
      type: System.Int32
      description: The size.
    content.vb: Public Sub New(parameterName As String, dbType As DbType, size As Integer)
  overload: SuperOffice.Data.SoParameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.String)
  commentId: M:SuperOffice.Data.SoParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.String)
  id: '#ctor(System.String,System.Data.DbType,System.Int32,System.String)'
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: SoParameter(String, DbType, Int32, String)
  nameWithType: SoParameter.SoParameter(String, DbType, Int32, String)
  fullName: SuperOffice.Data.SoParameter.SoParameter(System.String, System.Data.DbType, System.Int32, System.String)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SoParameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public SoParameter(string parameterName, DbType dbType, int size, string sourceColumn)
    parameters:
    - id: parameterName
      type: System.String
      description: The name of the parameter to map.
    - id: dbType
      type: System.Data.DbType
      description: Type of the db.
    - id: size
      type: System.Int32
      description: The size.
    - id: sourceColumn
      type: System.String
      description: The name of the source column
    content.vb: Public Sub New(parameterName As String, dbType As DbType, size As Integer, sourceColumn As String)
  overload: SuperOffice.Data.SoParameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.#ctor(System.String,System.Data.DbType,System.String)
  commentId: M:SuperOffice.Data.SoParameter.#ctor(System.String,System.Data.DbType,System.String)
  id: '#ctor(System.String,System.Data.DbType,System.String)'
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: SoParameter(String, DbType, String)
  nameWithType: SoParameter.SoParameter(String, DbType, String)
  fullName: SuperOffice.Data.SoParameter.SoParameter(System.String, System.Data.DbType, System.String)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SoParameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public SoParameter(string parameterName, DbType dbType, string sourceColumn)
    parameters:
    - id: parameterName
      type: System.String
      description: The name of the parameter to map.
    - id: dbType
      type: System.Data.DbType
      description: Type of the db.
    - id: sourceColumn
      type: System.String
      description: The name of the source column
    content.vb: Public Sub New(parameterName As String, dbType As DbType, sourceColumn As String)
  overload: SuperOffice.Data.SoParameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  commentId: M:SuperOffice.Data.SoParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  id: '#ctor(System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)'
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: SoParameter(String, DbType, Int32, ParameterDirection, Boolean, Byte, Byte, String, DataRowVersion, Object)
  nameWithType: SoParameter.SoParameter(String, DbType, Int32, ParameterDirection, Boolean, Byte, Byte, String, DataRowVersion, Object)
  fullName: SuperOffice.Data.SoParameter.SoParameter(System.String, System.Data.DbType, System.Int32, System.Data.ParameterDirection, System.Boolean, System.Byte, System.Byte, System.String, System.Data.DataRowVersion, System.Object)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SoParameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public SoParameter(string parameterName, DbType dbType, int size, ParameterDirection direction, bool isNullable, byte precision, byte scale, string sourceColumn, DataRowVersion sourceVersion, object value)
    parameters:
    - id: parameterName
      type: System.String
      description: The name of the parameter to map.
    - id: dbType
      type: System.Data.DbType
      description: Type of the db.
    - id: size
      type: System.Int32
      description: The size.
    - id: direction
      type: System.Data.ParameterDirection
      description: The direction.
    - id: isNullable
      type: System.Boolean
      description: if set to <code>true</code> [is nullable].
    - id: precision
      type: System.Byte
      description: The precision.
    - id: scale
      type: System.Byte
      description: The scale.
    - id: sourceColumn
      type: System.String
      description: The name of the source column
    - id: sourceVersion
      type: System.Data.DataRowVersion
      description: The source version.
    - id: value
      type: System.Object
      description: The value.
    content.vb: Public Sub New(parameterName As String, dbType As DbType, size As Integer, direction As ParameterDirection, isNullable As Boolean, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, value As Object)
  overload: SuperOffice.Data.SoParameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.Clone
  commentId: M:SuperOffice.Data.SoParameter.Clone
  id: Clone
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SoParameter.Clone()
  fullName: SuperOffice.Data.SoParameter.Clone()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nClone this object\n"
  syntax:
    content: public object Clone()
    return:
      type: System.Object
    content.vb: Public Function Clone As Object
  overload: SuperOffice.Data.SoParameter.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.Precision
  commentId: P:SuperOffice.Data.SoParameter.Precision
  id: Precision
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: Precision
  nameWithType: SoParameter.Precision
  fullName: SuperOffice.Data.SoParameter.Precision
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nGets or sets the maximum number of digits used to represent the Value property.\n"
  syntax:
    content: public byte Precision { get; set; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public Property Precision As Byte
  overload: SuperOffice.Data.SoParameter.Precision*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.Scale
  commentId: P:SuperOffice.Data.SoParameter.Scale
  id: Scale
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: SoParameter.Scale
  fullName: SuperOffice.Data.SoParameter.Scale
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nGets or sets the number of decimal places to which Value is resolved.\n"
  syntax:
    content: public byte Scale { get; set; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public Property Scale As Byte
  overload: SuperOffice.Data.SoParameter.Scale*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.Size
  commentId: P:SuperOffice.Data.SoParameter.Size
  id: Size
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: SoParameter.Size
  fullName: SuperOffice.Data.SoParameter.Size
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nGets or sets the maximum size, in bytes, of the data within the column.\n"
  syntax:
    content: public int Size { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Size As Integer
  overload: SuperOffice.Data.SoParameter.Size*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.Direction
  commentId: P:SuperOffice.Data.SoParameter.Direction
  id: Direction
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: SoParameter.Direction
  fullName: SuperOffice.Data.SoParameter.Direction
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nGets or sets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.\n"
  syntax:
    content: public ParameterDirection Direction { get; set; }
    parameters: []
    return:
      type: System.Data.ParameterDirection
    content.vb: Public Property Direction As ParameterDirection
  overload: SuperOffice.Data.SoParameter.Direction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.DbType
  commentId: P:SuperOffice.Data.SoParameter.DbType
  id: DbType
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: DbType
  nameWithType: SoParameter.DbType
  fullName: SuperOffice.Data.SoParameter.DbType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nGets or sets the DbType of the parameter.\n"
  syntax:
    content: public DbType DbType { get; set; }
    parameters: []
    return:
      type: System.Data.DbType
    content.vb: Public Property DbType As DbType
  overload: SuperOffice.Data.SoParameter.DbType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.Value
  commentId: P:SuperOffice.Data.SoParameter.Value
  id: Value
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: SoParameter.Value
  fullName: SuperOffice.Data.SoParameter.Value
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nGets or sets the value of the parameter.\n"
  syntax:
    content: public object Value { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Value As Object
  overload: SuperOffice.Data.SoParameter.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.IsNullable
  commentId: P:SuperOffice.Data.SoParameter.IsNullable
  id: IsNullable
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: IsNullable
  nameWithType: SoParameter.IsNullable
  fullName: SuperOffice.Data.SoParameter.IsNullable
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nGets or sets a value indicating whether the parameter accepts null values.\n"
  syntax:
    content: public bool IsNullable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNullable As Boolean
  overload: SuperOffice.Data.SoParameter.IsNullable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.Data.SoParameter.SourceVersion
  commentId: P:SuperOffice.Data.SoParameter.SourceVersion
  id: SourceVersion
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: SourceVersion
  nameWithType: SoParameter.SourceVersion
  fullName: SuperOffice.Data.SoParameter.SourceVersion
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nGets or sets the DataRowVersion to use when loading Value.\n"
  syntax:
    content: public DataRowVersion SourceVersion { get; set; }
    parameters: []
    return:
      type: System.Data.DataRowVersion
    content.vb: Public Property SourceVersion As DataRowVersion
  overload: SuperOffice.Data.SoParameter.SourceVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.ParameterName
  commentId: P:SuperOffice.Data.SoParameter.ParameterName
  id: ParameterName
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: ParameterName
  nameWithType: SoParameter.ParameterName
  fullName: SuperOffice.Data.SoParameter.ParameterName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nGets or sets the name of the SqlParameter.\n"
  syntax:
    content: public string ParameterName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ParameterName As String
  overload: SuperOffice.Data.SoParameter.ParameterName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoParameter.SourceColumn
  commentId: P:SuperOffice.Data.SoParameter.SourceColumn
  id: SourceColumn
  parent: SuperOffice.Data.SoParameter
  langs:
  - csharp
  - vb
  name: SourceColumn
  nameWithType: SoParameter.SourceColumn
  fullName: SuperOffice.Data.SoParameter.SourceColumn
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nGets or sets the name of the source column that is mapped to the DataSet and used for loading or returning the Value.\n"
  syntax:
    content: public string SourceColumn { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SourceColumn As String
  overload: SuperOffice.Data.SoParameter.SourceColumn*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.IDbDataParameter
  isExternal: true
  name: IDbDataParameter
  nameWithType: IDbDataParameter
  fullName: System.Data.IDbDataParameter
- uid: System.Data.IDataParameter
  commentId: '!:System.Data.IDataParameter'
  isExternal: true
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SoParameter.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoParameter, To>()
  nameWithType: EnumUtil.MapEnums<SoParameter, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SoParameter, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoParameter, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SoParameter, To)()
  name.vb: MapEnums(Of SoParameter, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoParameter, To>
    nameWithType: EnumUtil.MapEnums<SoParameter, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.SoParameter, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoParameter, To)
    nameWithType: EnumUtil.MapEnums(Of SoParameter, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.SoParameter, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SoParameter.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.SoParameter)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<SoParameter>(SoParameter)
  nameWithType: ObjectExtensions.AssignByReflection<SoParameter>(SoParameter)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.SoParameter>(SuperOffice.Data.SoParameter)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of SoParameter)(SoParameter)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.SoParameter)(SuperOffice.Data.SoParameter)
  name.vb: AssignByReflection(Of SoParameter)(SoParameter)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<SoParameter>
    nameWithType: ObjectExtensions.AssignByReflection<SoParameter>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.SoParameter>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoParameter
    name: SoParameter
    nameWithType: SoParameter
    fullName: SuperOffice.Data.SoParameter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of SoParameter)
    nameWithType: ObjectExtensions.AssignByReflection(Of SoParameter)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.SoParameter)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoParameter
    name: SoParameter
    nameWithType: SoParameter
    fullName: SuperOffice.Data.SoParameter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SoParameter.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<SoParameter>()
  nameWithType: ObjectExtensions.GraphCopy<SoParameter>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.SoParameter>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of SoParameter)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.SoParameter)()
  name.vb: GraphCopy(Of SoParameter)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<SoParameter>
    nameWithType: ObjectExtensions.GraphCopy<SoParameter>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.SoParameter>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of SoParameter)
    nameWithType: ObjectExtensions.GraphCopy(Of SoParameter)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.SoParameter)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SoParameter.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoParameter, To>()
  nameWithType: Converters.MapEnums<SoParameter, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SoParameter, To>()
  nameWithType.vb: Converters.MapEnums(Of SoParameter, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SoParameter, To)()
  name.vb: MapEnums(Of SoParameter, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoParameter, To>
    nameWithType: Converters.MapEnums<SoParameter, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SoParameter, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoParameter, To)
    nameWithType: Converters.MapEnums(Of SoParameter, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SoParameter, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.SoParameter.#ctor*
  commentId: Overload:SuperOffice.Data.SoParameter.#ctor
  isExternal: true
  name: SoParameter
  nameWithType: SoParameter.SoParameter
  fullName: SuperOffice.Data.SoParameter.SoParameter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DbType
  isExternal: true
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.ParameterDirection
  isExternal: true
  name: ParameterDirection
  nameWithType: ParameterDirection
  fullName: System.Data.ParameterDirection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.DataRowVersion
  isExternal: true
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: SuperOffice.Data.SoParameter.Clone*
  commentId: Overload:SuperOffice.Data.SoParameter.Clone
  isExternal: true
  name: Clone
  nameWithType: SoParameter.Clone
  fullName: SuperOffice.Data.SoParameter.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SoParameter.Precision*
  commentId: Overload:SuperOffice.Data.SoParameter.Precision
  isExternal: true
  name: Precision
  nameWithType: SoParameter.Precision
  fullName: SuperOffice.Data.SoParameter.Precision
- uid: SuperOffice.Data.SoParameter.Scale*
  commentId: Overload:SuperOffice.Data.SoParameter.Scale
  isExternal: true
  name: Scale
  nameWithType: SoParameter.Scale
  fullName: SuperOffice.Data.SoParameter.Scale
- uid: SuperOffice.Data.SoParameter.Size*
  commentId: Overload:SuperOffice.Data.SoParameter.Size
  isExternal: true
  name: Size
  nameWithType: SoParameter.Size
  fullName: SuperOffice.Data.SoParameter.Size
- uid: SuperOffice.Data.SoParameter.Direction*
  commentId: Overload:SuperOffice.Data.SoParameter.Direction
  isExternal: true
  name: Direction
  nameWithType: SoParameter.Direction
  fullName: SuperOffice.Data.SoParameter.Direction
- uid: SuperOffice.Data.SoParameter.DbType*
  commentId: Overload:SuperOffice.Data.SoParameter.DbType
  isExternal: true
  name: DbType
  nameWithType: SoParameter.DbType
  fullName: SuperOffice.Data.SoParameter.DbType
- uid: SuperOffice.Data.SoParameter.Value*
  commentId: Overload:SuperOffice.Data.SoParameter.Value
  isExternal: true
  name: Value
  nameWithType: SoParameter.Value
  fullName: SuperOffice.Data.SoParameter.Value
- uid: SuperOffice.Data.SoParameter.IsNullable*
  commentId: Overload:SuperOffice.Data.SoParameter.IsNullable
  isExternal: true
  name: IsNullable
  nameWithType: SoParameter.IsNullable
  fullName: SuperOffice.Data.SoParameter.IsNullable
- uid: SuperOffice.Data.SoParameter.SourceVersion*
  commentId: Overload:SuperOffice.Data.SoParameter.SourceVersion
  isExternal: true
  name: SourceVersion
  nameWithType: SoParameter.SourceVersion
  fullName: SuperOffice.Data.SoParameter.SourceVersion
- uid: SuperOffice.Data.SoParameter.ParameterName*
  commentId: Overload:SuperOffice.Data.SoParameter.ParameterName
  isExternal: true
  name: ParameterName
  nameWithType: SoParameter.ParameterName
  fullName: SuperOffice.Data.SoParameter.ParameterName
- uid: SuperOffice.Data.SoParameter.SourceColumn*
  commentId: Overload:SuperOffice.Data.SoParameter.SourceColumn
  isExternal: true
  name: SourceColumn
  nameWithType: SoParameter.SourceColumn
  fullName: SuperOffice.Data.SoParameter.SourceColumn
