### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SQL.QueryElement
  commentId: T:SuperOffice.Data.SQL.QueryElement
  id: QueryElement
  parent: SuperOffice.Data.SQL
  children:
  - SuperOffice.Data.SQL.QueryElement.#ctor
  - SuperOffice.Data.SQL.QueryElement.Clone
  - SuperOffice.Data.SQL.QueryElement.GetSubElements
  langs:
  - csharp
  - vb
  name: QueryElement
  nameWithType: QueryElement
  fullName: SuperOffice.Data.SQL.QueryElement
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nIpmplementing the visitor pattern.\n"
  syntax:
    content: 'public abstract class QueryElement : Object, ICloneable'
    content.vb: >-
      Public MustInherit Class QueryElement
          Inherits Object
          Implements ICloneable
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.Data.SQL.Argument
  - SuperOffice.Data.SQL.Restriction
  implements:
  - System.ICloneable
  extensionMethods:
  - SuperOffice.Data.SQL.QueryElement.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.QueryElement.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SuperOffice.Data.SQL.QueryElement.GetSubElements
  commentId: M:SuperOffice.Data.SQL.QueryElement.GetSubElements
  id: GetSubElements
  parent: SuperOffice.Data.SQL.QueryElement
  langs:
  - csharp
  - vb
  name: GetSubElements()
  nameWithType: QueryElement.GetSubElements()
  fullName: SuperOffice.Data.SQL.QueryElement.GetSubElements()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nReturn subelements.\n"
  syntax:
    content: protected abstract QueryElement[] GetSubElements()
    return:
      type: SuperOffice.Data.SQL.QueryElement[]
      description: Array of QueryElement
    content.vb: Protected MustOverride Function GetSubElements As QueryElement()
  overload: SuperOffice.Data.SQL.QueryElement.GetSubElements*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: SuperOffice.Data.SQL.QueryElement.Clone
  commentId: M:SuperOffice.Data.SQL.QueryElement.Clone
  id: Clone
  parent: SuperOffice.Data.SQL.QueryElement
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: QueryElement.Clone()
  fullName: SuperOffice.Data.SQL.QueryElement.Clone()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nCreates a copy of the query elements, but shares parameter values with the original, so it is not a complete copy.\n"
  remarks: "\nThis method is used by the <see cref=\"!:SentryQueryUpdater\"></see> to modify a query with sentry extensions without affecting the original query.\n"
  syntax:
    content: public abstract object Clone()
    return:
      type: System.Object
      description: Copy of all the restrictions/joins
    content.vb: Public MustOverride Function Clone As Object
  overload: SuperOffice.Data.SQL.QueryElement.Clone*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: SuperOffice.Data.SQL.QueryElement.#ctor
  commentId: M:SuperOffice.Data.SQL.QueryElement.#ctor
  id: '#ctor'
  parent: SuperOffice.Data.SQL.QueryElement
  langs:
  - csharp
  - vb
  name: QueryElement()
  nameWithType: QueryElement.QueryElement()
  fullName: SuperOffice.Data.SQL.QueryElement.QueryElement()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  syntax:
    content: protected QueryElement()
    content.vb: Protected Sub New
  overload: SuperOffice.Data.SQL.QueryElement.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ICloneable
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: SuperOffice.Data.SQL.QueryElement.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<QueryElement, To>()
  nameWithType: EnumUtil.MapEnums<QueryElement, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.QueryElement, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of QueryElement, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.QueryElement, To)()
  name.vb: MapEnums(Of QueryElement, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<QueryElement, To>
    nameWithType: EnumUtil.MapEnums<QueryElement, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.QueryElement, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of QueryElement, To)
    nameWithType: EnumUtil.MapEnums(Of QueryElement, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.QueryElement, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.QueryElement.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<QueryElement, To>()
  nameWithType: Converters.MapEnums<QueryElement, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.QueryElement, To>()
  nameWithType.vb: Converters.MapEnums(Of QueryElement, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.QueryElement, To)()
  name.vb: MapEnums(Of QueryElement, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<QueryElement, To>
    nameWithType: Converters.MapEnums<QueryElement, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.QueryElement, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of QueryElement, To)
    nameWithType: Converters.MapEnums(Of QueryElement, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.QueryElement, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.SQL.QueryElement.GetSubElements*
  commentId: Overload:SuperOffice.Data.SQL.QueryElement.GetSubElements
  isExternal: true
  name: GetSubElements
  nameWithType: QueryElement.GetSubElements
  fullName: SuperOffice.Data.SQL.QueryElement.GetSubElements
- uid: SuperOffice.Data.SQL.QueryElement[]
  isExternal: true
  name: QueryElement[]
  nameWithType: QueryElement[]
  fullName: SuperOffice.Data.SQL.QueryElement[]
  nameWithType.vb: QueryElement()
  fullName.vb: SuperOffice.Data.SQL.QueryElement()
  name.vb: QueryElement()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.QueryElement
    name: QueryElement
    nameWithType: QueryElement
    fullName: SuperOffice.Data.SQL.QueryElement
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.Data.SQL.QueryElement
    name: QueryElement
    nameWithType: QueryElement
    fullName: SuperOffice.Data.SQL.QueryElement
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Data.SQL.QueryElement.Clone*
  commentId: Overload:SuperOffice.Data.SQL.QueryElement.Clone
  isExternal: true
  name: Clone
  nameWithType: QueryElement.Clone
  fullName: SuperOffice.Data.SQL.QueryElement.Clone
- uid: SuperOffice.Data.SQL.QueryElement.#ctor*
  commentId: Overload:SuperOffice.Data.SQL.QueryElement.#ctor
  isExternal: true
  name: QueryElement
  nameWithType: QueryElement.QueryElement
  fullName: SuperOffice.Data.SQL.QueryElement.QueryElement
