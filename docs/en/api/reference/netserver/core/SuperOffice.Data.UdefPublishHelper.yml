### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.UdefPublishHelper
  commentId: T:SuperOffice.Data.UdefPublishHelper
  id: UdefPublishHelper
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.UdefPublishHelper.DetectChangesInPageOneFields(System.Collections.Generic.List{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo},System.Collections.Generic.List{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo},System.Int32)
  - SuperOffice.Data.UdefPublishHelper.DetectColumnIdChanges(SuperOffice.Data.UDefType)
  - SuperOffice.Data.UdefPublishHelper.DetectUnpublishedChanges(SuperOffice.Data.UDefType)
  - SuperOffice.Data.UdefPublishHelper.Publish(SuperOffice.Data.UDefType,SuperOffice.Data.UdefPublishHelper.IProgressHandler)
  - SuperOffice.Data.UdefPublishHelper.PublishSmallChanges(SuperOffice.Data.UDefType)
  - SuperOffice.Data.UdefPublishHelper.Revert(SuperOffice.Data.UDefType)
  langs:
  - csharp
  - vb
  name: UdefPublishHelper
  nameWithType: UdefPublishHelper
  fullName: SuperOffice.Data.UdefPublishHelper
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nThis class contains helper functions for publishing user-defined fields.\n"
  syntax:
    content: public class UdefPublishHelper
    content.vb: Public Class UdefPublishHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.UdefPublishHelper.EnumUtil.MapEnums``2
  - SuperOffice.Data.UdefPublishHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Data.UdefPublishHelper.Revert(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefPublishHelper.Revert(SuperOffice.Data.UDefType)
  id: Revert(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefPublishHelper
  langs:
  - csharp
  - vb
  name: Revert(UDefType)
  nameWithType: UdefPublishHelper.Revert(UDefType)
  fullName: SuperOffice.Data.UdefPublishHelper.Revert(SuperOffice.Data.UDefType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public static void Revert(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    content.vb: Public Shared Sub Revert(type As UDefType)
  overload: SuperOffice.Data.UdefPublishHelper.Revert*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.UdefPublishHelper.Publish(SuperOffice.Data.UDefType,SuperOffice.Data.UdefPublishHelper.IProgressHandler)
  commentId: M:SuperOffice.Data.UdefPublishHelper.Publish(SuperOffice.Data.UDefType,SuperOffice.Data.UdefPublishHelper.IProgressHandler)
  id: Publish(SuperOffice.Data.UDefType,SuperOffice.Data.UdefPublishHelper.IProgressHandler)
  parent: SuperOffice.Data.UdefPublishHelper
  langs:
  - csharp
  - vb
  name: Publish(UDefType, UdefPublishHelper.IProgressHandler)
  nameWithType: UdefPublishHelper.Publish(UDefType, UdefPublishHelper.IProgressHandler)
  fullName: SuperOffice.Data.UdefPublishHelper.Publish(SuperOffice.Data.UDefType, SuperOffice.Data.UdefPublishHelper.IProgressHandler)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nPublish Udef, with changes/reassignments of fields.\n"
  remarks: "\nThis code <strong>must be kept in sync</strong> with <xref href=\"SuperOffice.Data.UdefPublishHelper.PublishSmallChanges(SuperOffice.Data.UDefType)\" data-throw-if-not-resolved=\"false\"></xref> - there is a significant\namount of overlap.\n"
  syntax:
    content: public static void Publish(UDefType type, UdefPublishHelper.IProgressHandler progressHandler)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    - id: progressHandler
      type: SuperOffice.Data.UdefPublishHelper.IProgressHandler
    content.vb: Public Shared Sub Publish(type As UDefType, progressHandler As UdefPublishHelper.IProgressHandler)
  overload: SuperOffice.Data.UdefPublishHelper.Publish*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.UdefPublishHelper.PublishSmallChanges(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefPublishHelper.PublishSmallChanges(SuperOffice.Data.UDefType)
  id: PublishSmallChanges(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefPublishHelper
  langs:
  - csharp
  - vb
  name: PublishSmallChanges(UDefType)
  nameWithType: UdefPublishHelper.PublishSmallChanges(UDefType)
  fullName: SuperOffice.Data.UdefPublishHelper.PublishSmallChanges(SuperOffice.Data.UDefType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nPublish Udef, with changes/reassignments of fields.\n"
  remarks: "\nThis code <strong>must be kept in sync</strong> with <xref href=\"SuperOffice.Data.UdefPublishHelper.Publish(SuperOffice.Data.UDefType%2cSuperOffice.Data.UdefPublishHelper.IProgressHandler)\" data-throw-if-not-resolved=\"false\"></xref> - there is a significant\namount of overlap.\n"
  syntax:
    content: public static void PublishSmallChanges(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    content.vb: Public Shared Sub PublishSmallChanges(type As UDefType)
  overload: SuperOffice.Data.UdefPublishHelper.PublishSmallChanges*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.UdefPublishHelper.DetectUnpublishedChanges(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefPublishHelper.DetectUnpublishedChanges(SuperOffice.Data.UDefType)
  id: DetectUnpublishedChanges(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefPublishHelper
  langs:
  - csharp
  - vb
  name: DetectUnpublishedChanges(UDefType)
  nameWithType: UdefPublishHelper.DetectUnpublishedChanges(UDefType)
  fullName: SuperOffice.Data.UdefPublishHelper.DetectUnpublishedChanges(SuperOffice.Data.UDefType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nDetect changes to admin version. Used to enable/disable &quot;publish&quot; button\n"
  syntax:
    content: public static bool DetectUnpublishedChanges(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    return:
      type: System.Boolean
    content.vb: Public Shared Function DetectUnpublishedChanges(type As UDefType) As Boolean
  overload: SuperOffice.Data.UdefPublishHelper.DetectUnpublishedChanges*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.UdefPublishHelper.DetectColumnIdChanges(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.Data.UdefPublishHelper.DetectColumnIdChanges(SuperOffice.Data.UDefType)
  id: DetectColumnIdChanges(SuperOffice.Data.UDefType)
  parent: SuperOffice.Data.UdefPublishHelper
  langs:
  - csharp
  - vb
  name: DetectColumnIdChanges(UDefType)
  nameWithType: UdefPublishHelper.DetectColumnIdChanges(UDefType)
  fullName: SuperOffice.Data.UdefPublishHelper.DetectColumnIdChanges(SuperOffice.Data.UDefType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nDetect if the admin version contain changes to column ids in any of the fields\nUsed for determining if async publish should be run and if the publish backup warning should be shown\n"
  syntax:
    content: public static bool DetectColumnIdChanges(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
    return:
      type: System.Boolean
    content.vb: Public Shared Function DetectColumnIdChanges(type As UDefType) As Boolean
  overload: SuperOffice.Data.UdefPublishHelper.DetectColumnIdChanges*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.UdefPublishHelper.DetectChangesInPageOneFields(System.Collections.Generic.List{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo},System.Collections.Generic.List{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo},System.Int32)
  commentId: M:SuperOffice.Data.UdefPublishHelper.DetectChangesInPageOneFields(System.Collections.Generic.List{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo},System.Collections.Generic.List{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo},System.Int32)
  id: DetectChangesInPageOneFields(System.Collections.Generic.List{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo},System.Collections.Generic.List{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo},System.Int32)
  parent: SuperOffice.Data.UdefPublishHelper
  langs:
  - csharp
  - vb
  name: DetectChangesInPageOneFields(List<UDefFieldCacheBase.PageOneFieldInfo>, List<UDefFieldCacheBase.PageOneFieldInfo>, Int32)
  nameWithType: UdefPublishHelper.DetectChangesInPageOneFields(List<UDefFieldCacheBase.PageOneFieldInfo>, List<UDefFieldCacheBase.PageOneFieldInfo>, Int32)
  fullName: SuperOffice.Data.UdefPublishHelper.DetectChangesInPageOneFields(System.Collections.Generic.List<SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo>, System.Collections.Generic.List<SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo>, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nDetect changes for one line number in a group of page one fields.\n"
  syntax:
    content: public static bool DetectChangesInPageOneFields(List<UDefFieldCacheBase.PageOneFieldInfo> adminPageOneFields, List<UDefFieldCacheBase.PageOneFieldInfo> currentPageOneFields, int lineNumber)
    parameters:
    - id: adminPageOneFields
      type: System.Collections.Generic.List{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo}
    - id: currentPageOneFields
      type: System.Collections.Generic.List{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo}
    - id: lineNumber
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function DetectChangesInPageOneFields(adminPageOneFields As List(Of UDefFieldCacheBase.PageOneFieldInfo), currentPageOneFields As List(Of UDefFieldCacheBase.PageOneFieldInfo), lineNumber As Integer) As Boolean
  overload: SuperOffice.Data.UdefPublishHelper.DetectChangesInPageOneFields*
  nameWithType.vb: UdefPublishHelper.DetectChangesInPageOneFields(List(Of UDefFieldCacheBase.PageOneFieldInfo), List(Of UDefFieldCacheBase.PageOneFieldInfo), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Data.UdefPublishHelper.DetectChangesInPageOneFields(System.Collections.Generic.List(Of SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo), System.Collections.Generic.List(Of SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo), System.Int32)
  name.vb: DetectChangesInPageOneFields(List(Of UDefFieldCacheBase.PageOneFieldInfo), List(Of UDefFieldCacheBase.PageOneFieldInfo), Int32)
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.UdefPublishHelper.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<UdefPublishHelper, To>()
  nameWithType: EnumUtil.MapEnums<UdefPublishHelper, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.UdefPublishHelper, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of UdefPublishHelper, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.UdefPublishHelper, To)()
  name.vb: MapEnums(Of UdefPublishHelper, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<UdefPublishHelper, To>
    nameWithType: EnumUtil.MapEnums<UdefPublishHelper, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.UdefPublishHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of UdefPublishHelper, To)
    nameWithType: EnumUtil.MapEnums(Of UdefPublishHelper, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.UdefPublishHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.UdefPublishHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<UdefPublishHelper, To>()
  nameWithType: Converters.MapEnums<UdefPublishHelper, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.UdefPublishHelper, To>()
  nameWithType.vb: Converters.MapEnums(Of UdefPublishHelper, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.UdefPublishHelper, To)()
  name.vb: MapEnums(Of UdefPublishHelper, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<UdefPublishHelper, To>
    nameWithType: Converters.MapEnums<UdefPublishHelper, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.UdefPublishHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of UdefPublishHelper, To)
    nameWithType: Converters.MapEnums(Of UdefPublishHelper, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.UdefPublishHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.UdefPublishHelper.Revert*
  commentId: Overload:SuperOffice.Data.UdefPublishHelper.Revert
  isExternal: true
  name: Revert
  nameWithType: UdefPublishHelper.Revert
  fullName: SuperOffice.Data.UdefPublishHelper.Revert
- uid: SuperOffice.Data.UDefType
  commentId: T:SuperOffice.Data.UDefType
  parent: SuperOffice.Data
  isExternal: true
  name: UDefType
  nameWithType: UDefType
  fullName: SuperOffice.Data.UDefType
- uid: SuperOffice.Data.UdefPublishHelper.Publish*
  commentId: Overload:SuperOffice.Data.UdefPublishHelper.Publish
  isExternal: true
  name: Publish
  nameWithType: UdefPublishHelper.Publish
  fullName: SuperOffice.Data.UdefPublishHelper.Publish
- uid: SuperOffice.Data.UdefPublishHelper.IProgressHandler
  commentId: T:SuperOffice.Data.UdefPublishHelper.IProgressHandler
  parent: SuperOffice.Data
  isExternal: true
  name: UdefPublishHelper.IProgressHandler
  nameWithType: UdefPublishHelper.IProgressHandler
  fullName: SuperOffice.Data.UdefPublishHelper.IProgressHandler
- uid: SuperOffice.Data.UdefPublishHelper.PublishSmallChanges*
  commentId: Overload:SuperOffice.Data.UdefPublishHelper.PublishSmallChanges
  isExternal: true
  name: PublishSmallChanges
  nameWithType: UdefPublishHelper.PublishSmallChanges
  fullName: SuperOffice.Data.UdefPublishHelper.PublishSmallChanges
- uid: SuperOffice.Data.UdefPublishHelper.DetectUnpublishedChanges*
  commentId: Overload:SuperOffice.Data.UdefPublishHelper.DetectUnpublishedChanges
  isExternal: true
  name: DetectUnpublishedChanges
  nameWithType: UdefPublishHelper.DetectUnpublishedChanges
  fullName: SuperOffice.Data.UdefPublishHelper.DetectUnpublishedChanges
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Data.UdefPublishHelper.DetectColumnIdChanges*
  commentId: Overload:SuperOffice.Data.UdefPublishHelper.DetectColumnIdChanges
  isExternal: true
  name: DetectColumnIdChanges
  nameWithType: UdefPublishHelper.DetectColumnIdChanges
  fullName: SuperOffice.Data.UdefPublishHelper.DetectColumnIdChanges
- uid: SuperOffice.Data.UdefPublishHelper.DetectChangesInPageOneFields*
  commentId: Overload:SuperOffice.Data.UdefPublishHelper.DetectChangesInPageOneFields
  isExternal: true
  name: DetectChangesInPageOneFields
  nameWithType: UdefPublishHelper.DetectChangesInPageOneFields
  fullName: SuperOffice.Data.UdefPublishHelper.DetectChangesInPageOneFields
- uid: System.Collections.Generic.List{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UDefFieldCacheBase.PageOneFieldInfo>
  nameWithType: List<UDefFieldCacheBase.PageOneFieldInfo>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo>
  nameWithType.vb: List(Of UDefFieldCacheBase.PageOneFieldInfo)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo)
  name.vb: List(Of UDefFieldCacheBase.PageOneFieldInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo
    name: UDefFieldCacheBase.PageOneFieldInfo
    nameWithType: UDefFieldCacheBase.PageOneFieldInfo
    fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo
    name: UDefFieldCacheBase.PageOneFieldInfo
    nameWithType: UDefFieldCacheBase.PageOneFieldInfo
    fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
