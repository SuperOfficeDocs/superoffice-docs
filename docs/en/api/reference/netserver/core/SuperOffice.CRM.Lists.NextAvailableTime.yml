### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Lists.NextAvailableTime
  commentId: T:SuperOffice.CRM.Lists.NextAvailableTime
  id: NextAvailableTime
  parent: SuperOffice.CRM.Lists
  children:
  - SuperOffice.CRM.Lists.NextAvailableTime.#ctor
  - SuperOffice.CRM.Lists.NextAvailableTime.AddItems
  - SuperOffice.CRM.Lists.NextAvailableTime.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  - SuperOffice.CRM.Lists.NextAvailableTime.ProviderName
  - SuperOffice.CRM.Lists.NextAvailableTime.SectionKeyDelimiter
  langs:
  - csharp
  - vb
  name: NextAvailableTime
  nameWithType: NextAvailableTime
  fullName: SuperOffice.CRM.Lists.NextAvailableTime
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nMDO Provider for identifying available times for meeting.\n"
  remarks: "\nAdditionalInfo = &quot;startTime | endTime | isAllDay 0/1 | assocId, assocIds&quot;\n"
  syntax:
    content: >-
      [MDOProviderPlugin("NextAvailableTime")]

      [MDOAdditionalInfoSeparator("|")]

      [MDOAdditionalInfo("Combined start, end, user ids, separated by | char", "2014-9-14 13:45:22|2014-9-14 14:45:22|0|23,34,45")]

      public class NextAvailableTime : LiteralsOnlyBase, ISoListProvider, ISoList, IPlugin
    content.vb: >-
      <MDOProviderPlugin("NextAvailableTime")>

      <MDOAdditionalInfoSeparator("|")>

      <MDOAdditionalInfo("Combined start, end, user ids, separated by | char", "2014-9-14 13:45:22|2014-9-14 14:45:22|0|23,34,45")>

      Public Class NextAvailableTime
          Inherits LiteralsOnlyBase
          Implements ISoListProvider, ISoList, IPlugin
  inheritance:
  - System.Object
  - SuperOffice.CRM.Lists.LiteralsOnlyBase
  implements:
  - SuperOffice.CRM.Lists.ISoListProvider
  - SuperOffice.CRM.Lists.ISoList
  inheritedMembers:
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Lists.NextAvailableTime.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Lists.NextAvailableTime.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Lists.NextAvailableTime)
  - SuperOffice.CRM.Lists.NextAvailableTime.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Lists.NextAvailableTime.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.CRM.Lists.MDOProviderPluginAttribute
    ctor: SuperOffice.CRM.Lists.MDOProviderPluginAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NextAvailableTime
  - type: SuperOffice.CRM.Lists.MDOAdditionalInfoSeparatorAttribute
    ctor: SuperOffice.CRM.Lists.MDOAdditionalInfoSeparatorAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '|'
  - type: SuperOffice.CRM.Lists.MDOAdditionalInfoAttribute
    ctor: SuperOffice.CRM.Lists.MDOAdditionalInfoAttribute.#ctor(System.String,System.Object)
    arguments:
    - type: System.String
      value: Combined start, end, user ids, separated by | char
    - type: System.String
      value: 2014-9-14 13:45:22|2014-9-14 14:45:22|0|23,34,45
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Lists.NextAvailableTime.ProviderName
  commentId: F:SuperOffice.CRM.Lists.NextAvailableTime.ProviderName
  id: ProviderName
  parent: SuperOffice.CRM.Lists.NextAvailableTime
  langs:
  - csharp
  - vb
  name: ProviderName
  nameWithType: NextAvailableTime.ProviderName
  fullName: SuperOffice.CRM.Lists.NextAvailableTime.ProviderName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public const string ProviderName = "NextAvailableTime"
    return:
      type: System.String
    content.vb: Public Const ProviderName As String = "NextAvailableTime"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Lists.NextAvailableTime.SectionKeyDelimiter
  commentId: F:SuperOffice.CRM.Lists.NextAvailableTime.SectionKeyDelimiter
  id: SectionKeyDelimiter
  parent: SuperOffice.CRM.Lists.NextAvailableTime
  langs:
  - csharp
  - vb
  name: SectionKeyDelimiter
  nameWithType: NextAvailableTime.SectionKeyDelimiter
  fullName: SuperOffice.CRM.Lists.NextAvailableTime.SectionKeyDelimiter
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nDelimiter to use between section name and key name in the additionalInfo parameter. Consider\nusing the <see cref=\"!:CreateAdditionalInfo\"></see> method to avoid coding dependencies.\n"
  syntax:
    content: public const char SectionKeyDelimiter = '|'
    return:
      type: System.Char
    content.vb: Public Const SectionKeyDelimiter As Char = "|"c
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Lists.NextAvailableTime.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Lists.NextAvailableTime.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  id: Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  parent: SuperOffice.CRM.Lists.NextAvailableTime
  langs:
  - csharp
  - vb
  name: Construct(String, String, Int32[], Boolean, String, Boolean)
  nameWithType: NextAvailableTime.Construct(String, String, Int32[], Boolean, String, Boolean)
  fullName: SuperOffice.CRM.Lists.NextAvailableTime.Construct(System.String, System.String, System.Int32[], System.Boolean, System.String, System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public override void Construct(string listName, string additionalInfo, int[] historyIDs, bool onlyReadHistory, string searchValue, bool forceFlatList)
    parameters:
    - id: listName
      type: System.String
    - id: additionalInfo
      type: System.String
    - id: historyIDs
      type: System.Int32[]
    - id: onlyReadHistory
      type: System.Boolean
    - id: searchValue
      type: System.String
    - id: forceFlatList
      type: System.Boolean
    content.vb: Public Overrides Sub Construct(listName As String, additionalInfo As String, historyIDs As Integer(), onlyReadHistory As Boolean, searchValue As String, forceFlatList As Boolean)
  overridden: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  overload: SuperOffice.CRM.Lists.NextAvailableTime.Construct*
  nameWithType.vb: NextAvailableTime.Construct(String, String, Int32(), Boolean, String, Boolean)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: SuperOffice.CRM.Lists.NextAvailableTime.Construct(System.String, System.String, System.Int32(), System.Boolean, System.String, System.Boolean)
  name.vb: Construct(String, String, Int32(), Boolean, String, Boolean)
- uid: SuperOffice.CRM.Lists.NextAvailableTime.AddItems
  commentId: M:SuperOffice.CRM.Lists.NextAvailableTime.AddItems
  id: AddItems
  parent: SuperOffice.CRM.Lists.NextAvailableTime
  langs:
  - csharp
  - vb
  name: AddItems()
  nameWithType: NextAvailableTime.AddItems()
  fullName: SuperOffice.CRM.Lists.NextAvailableTime.AddItems()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: protected override void AddItems()
    content.vb: Protected Overrides Sub AddItems
  overridden: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
  overload: SuperOffice.CRM.Lists.NextAvailableTime.AddItems*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Lists.NextAvailableTime.#ctor
  commentId: M:SuperOffice.CRM.Lists.NextAvailableTime.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Lists.NextAvailableTime
  langs:
  - csharp
  - vb
  name: NextAvailableTime()
  nameWithType: NextAvailableTime.NextAvailableTime()
  fullName: SuperOffice.CRM.Lists.NextAvailableTime.NextAvailableTime()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public NextAvailableTime()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Lists.NextAvailableTime.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Lists
  commentId: N:SuperOffice.CRM.Lists
  isExternal: true
  name: SuperOffice.CRM.Lists
  nameWithType: SuperOffice.CRM.Lists
  fullName: SuperOffice.CRM.Lists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase
  commentId: T:SuperOffice.CRM.Lists.LiteralsOnlyBase
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: LiteralsOnlyBase
  nameWithType: LiteralsOnlyBase
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase
- uid: SuperOffice.CRM.Lists.ISoListProvider
  commentId: T:SuperOffice.CRM.Lists.ISoListProvider
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: ISoListProvider
  nameWithType: ISoListProvider
  fullName: SuperOffice.CRM.Lists.ISoListProvider
- uid: SuperOffice.CRM.Lists.ISoList
  commentId: T:SuperOffice.CRM.Lists.ISoList
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: ISoList
  nameWithType: ISoList
  fullName: SuperOffice.CRM.Lists.ISoList
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: ListName
  nameWithType: LiteralsOnlyBase.ListName
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: ExtraInfo
  nameWithType: LiteralsOnlyBase.ExtraInfo
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: SearchValue
  nameWithType: LiteralsOnlyBase.SearchValue
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: RawRootItems
  nameWithType: LiteralsOnlyBase.RawRootItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: RawHeadingItems
  nameWithType: LiteralsOnlyBase.RawHeadingItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: RawHistoryItems
  nameWithType: LiteralsOnlyBase.RawHistoryItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: HistoryInfo
  nameWithType: LiteralsOnlyBase.HistoryInfo
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: HistoryItems
  nameWithType: LiteralsOnlyBase.HistoryItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: RootItems
  nameWithType: LiteralsOnlyBase.RootItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: HeadingItems
  nameWithType: LiteralsOnlyBase.HeadingItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.NextAvailableTime.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<NextAvailableTime, To>()
  nameWithType: EnumUtil.MapEnums<NextAvailableTime, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.NextAvailableTime, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of NextAvailableTime, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.NextAvailableTime, To)()
  name.vb: MapEnums(Of NextAvailableTime, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<NextAvailableTime, To>
    nameWithType: EnumUtil.MapEnums<NextAvailableTime, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.NextAvailableTime, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of NextAvailableTime, To)
    nameWithType: EnumUtil.MapEnums(Of NextAvailableTime, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.NextAvailableTime, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.NextAvailableTime.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Lists.NextAvailableTime)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<NextAvailableTime>(NextAvailableTime)
  nameWithType: ObjectExtensions.AssignByReflection<NextAvailableTime>(NextAvailableTime)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Lists.NextAvailableTime>(SuperOffice.CRM.Lists.NextAvailableTime)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of NextAvailableTime)(NextAvailableTime)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Lists.NextAvailableTime)(SuperOffice.CRM.Lists.NextAvailableTime)
  name.vb: AssignByReflection(Of NextAvailableTime)(NextAvailableTime)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<NextAvailableTime>
    nameWithType: ObjectExtensions.AssignByReflection<NextAvailableTime>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Lists.NextAvailableTime>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Lists.NextAvailableTime
    name: NextAvailableTime
    nameWithType: NextAvailableTime
    fullName: SuperOffice.CRM.Lists.NextAvailableTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of NextAvailableTime)
    nameWithType: ObjectExtensions.AssignByReflection(Of NextAvailableTime)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Lists.NextAvailableTime)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Lists.NextAvailableTime
    name: NextAvailableTime
    nameWithType: NextAvailableTime
    fullName: SuperOffice.CRM.Lists.NextAvailableTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.NextAvailableTime.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<NextAvailableTime>()
  nameWithType: ObjectExtensions.GraphCopy<NextAvailableTime>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Lists.NextAvailableTime>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of NextAvailableTime)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Lists.NextAvailableTime)()
  name.vb: GraphCopy(Of NextAvailableTime)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<NextAvailableTime>
    nameWithType: ObjectExtensions.GraphCopy<NextAvailableTime>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Lists.NextAvailableTime>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of NextAvailableTime)
    nameWithType: ObjectExtensions.GraphCopy(Of NextAvailableTime)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Lists.NextAvailableTime)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.NextAvailableTime.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<NextAvailableTime, To>()
  nameWithType: Converters.MapEnums<NextAvailableTime, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.NextAvailableTime, To>()
  nameWithType.vb: Converters.MapEnums(Of NextAvailableTime, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.NextAvailableTime, To)()
  name.vb: MapEnums(Of NextAvailableTime, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<NextAvailableTime, To>
    nameWithType: Converters.MapEnums<NextAvailableTime, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.NextAvailableTime, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of NextAvailableTime, To)
    nameWithType: Converters.MapEnums(Of NextAvailableTime, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.NextAvailableTime, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: Construct(String, String, Int32[], Boolean, String, Boolean)
  nameWithType: LiteralsOnlyBase.Construct(String, String, Int32[], Boolean, String, Boolean)
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String, System.String, System.Int32[], System.Boolean, System.String, System.Boolean)
  nameWithType.vb: LiteralsOnlyBase.Construct(String, String, Int32(), Boolean, String, Boolean)
  fullName.vb: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String, System.String, System.Int32(), System.Boolean, System.String, System.Boolean)
  name.vb: Construct(String, String, Int32(), Boolean, String, Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
    name: Construct
    nameWithType: LiteralsOnlyBase.Construct
    fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
    name: Construct
    nameWithType: LiteralsOnlyBase.Construct
    fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.NextAvailableTime.Construct*
  commentId: Overload:SuperOffice.CRM.Lists.NextAvailableTime.Construct
  isExternal: true
  name: Construct
  nameWithType: NextAvailableTime.Construct
  fullName: SuperOffice.CRM.Lists.NextAvailableTime.Construct
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
  commentId: M:SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: AddItems()
  nameWithType: LiteralsOnlyBase.AddItems()
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
    name: AddItems
    nameWithType: LiteralsOnlyBase.AddItems
    fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
    name: AddItems
    nameWithType: LiteralsOnlyBase.AddItems
    fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.NextAvailableTime.AddItems*
  commentId: Overload:SuperOffice.CRM.Lists.NextAvailableTime.AddItems
  isExternal: true
  name: AddItems
  nameWithType: NextAvailableTime.AddItems
  fullName: SuperOffice.CRM.Lists.NextAvailableTime.AddItems
- uid: SuperOffice.CRM.Lists.NextAvailableTime.#ctor*
  commentId: Overload:SuperOffice.CRM.Lists.NextAvailableTime.#ctor
  isExternal: true
  name: NextAvailableTime
  nameWithType: NextAvailableTime.NextAvailableTime
  fullName: SuperOffice.CRM.Lists.NextAvailableTime.NextAvailableTime
