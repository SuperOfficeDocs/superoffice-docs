### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo
  commentId: T:SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo
  id: DatabaseOperations.BulkImportInfo
  parent: SuperOffice.Data.Dialect
  children:
  - SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.#ctor
  - SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Data
  - SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Table
  langs:
  - csharp
  - vb
  name: DatabaseOperations.BulkImportInfo
  nameWithType: DatabaseOperations.BulkImportInfo
  fullName: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected class BulkImportInfo
    content.vb: Protected Class BulkImportInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.EnumUtil.MapEnums``2
  - SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo)
  - SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.#ctor
  commentId: M:SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.#ctor
  id: '#ctor'
  parent: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo
  langs:
  - csharp
  - vb
  name: BulkImportInfo()
  nameWithType: DatabaseOperations.BulkImportInfo.BulkImportInfo()
  fullName: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.BulkImportInfo()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: public BulkImportInfo()
    content.vb: Public Sub New
  overload: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Data
  commentId: P:SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Data
  id: Data
  parent: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: DatabaseOperations.BulkImportInfo.Data
  fullName: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Data
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: public DataTable Data { get; set; }
    parameters: []
    return:
      type: System.Data.DataTable
    content.vb: Public Property Data As DataTable
  overload: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Data*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Table
  commentId: P:SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Table
  id: Table
  parent: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo
  langs:
  - csharp
  - vb
  name: Table
  nameWithType: DatabaseOperations.BulkImportInfo.Table
  fullName: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Table
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: public SoTable Table { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.Dictionary.SoTable
    content.vb: Public Property Table As SoTable
  overload: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Table*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Data.Dialect
  commentId: N:SuperOffice.Data.Dialect
  isExternal: true
  name: SuperOffice.Data.Dialect
  nameWithType: SuperOffice.Data.Dialect
  fullName: SuperOffice.Data.Dialect
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<DatabaseOperations.BulkImportInfo, To>()
  nameWithType: EnumUtil.MapEnums<DatabaseOperations.BulkImportInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of DatabaseOperations.BulkImportInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo, To)()
  name.vb: MapEnums(Of DatabaseOperations.BulkImportInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<DatabaseOperations.BulkImportInfo, To>
    nameWithType: EnumUtil.MapEnums<DatabaseOperations.BulkImportInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of DatabaseOperations.BulkImportInfo, To)
    nameWithType: EnumUtil.MapEnums(Of DatabaseOperations.BulkImportInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<DatabaseOperations.BulkImportInfo>(DatabaseOperations.BulkImportInfo)
  nameWithType: ObjectExtensions.AssignByReflection<DatabaseOperations.BulkImportInfo>(DatabaseOperations.BulkImportInfo)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo>(SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of DatabaseOperations.BulkImportInfo)(DatabaseOperations.BulkImportInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo)(SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo)
  name.vb: AssignByReflection(Of DatabaseOperations.BulkImportInfo)(DatabaseOperations.BulkImportInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<DatabaseOperations.BulkImportInfo>
    nameWithType: ObjectExtensions.AssignByReflection<DatabaseOperations.BulkImportInfo>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo
    name: DatabaseOperations.BulkImportInfo
    nameWithType: DatabaseOperations.BulkImportInfo
    fullName: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of DatabaseOperations.BulkImportInfo)
    nameWithType: ObjectExtensions.AssignByReflection(Of DatabaseOperations.BulkImportInfo)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo
    name: DatabaseOperations.BulkImportInfo
    nameWithType: DatabaseOperations.BulkImportInfo
    fullName: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<DatabaseOperations.BulkImportInfo>()
  nameWithType: ObjectExtensions.GraphCopy<DatabaseOperations.BulkImportInfo>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of DatabaseOperations.BulkImportInfo)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo)()
  name.vb: GraphCopy(Of DatabaseOperations.BulkImportInfo)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<DatabaseOperations.BulkImportInfo>
    nameWithType: ObjectExtensions.GraphCopy<DatabaseOperations.BulkImportInfo>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of DatabaseOperations.BulkImportInfo)
    nameWithType: ObjectExtensions.GraphCopy(Of DatabaseOperations.BulkImportInfo)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<DatabaseOperations.BulkImportInfo, To>()
  nameWithType: Converters.MapEnums<DatabaseOperations.BulkImportInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of DatabaseOperations.BulkImportInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo, To)()
  name.vb: MapEnums(Of DatabaseOperations.BulkImportInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<DatabaseOperations.BulkImportInfo, To>
    nameWithType: Converters.MapEnums<DatabaseOperations.BulkImportInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of DatabaseOperations.BulkImportInfo, To)
    nameWithType: Converters.MapEnums(Of DatabaseOperations.BulkImportInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.#ctor*
  commentId: Overload:SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.#ctor
  isExternal: true
  name: BulkImportInfo
  nameWithType: DatabaseOperations.BulkImportInfo.BulkImportInfo
  fullName: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.BulkImportInfo
- uid: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Data*
  commentId: Overload:SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Data
  isExternal: true
  name: Data
  nameWithType: DatabaseOperations.BulkImportInfo.Data
  fullName: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Data
- uid: System.Data.DataTable
  isExternal: true
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Table*
  commentId: Overload:SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Table
  isExternal: true
  name: Table
  nameWithType: DatabaseOperations.BulkImportInfo.Table
  fullName: SuperOffice.Data.Dialect.DatabaseOperations.BulkImportInfo.Table
- uid: SuperOffice.Data.Dictionary.SoTable
  commentId: T:SuperOffice.Data.Dictionary.SoTable
  parent: SuperOffice.Data.Dictionary
  isExternal: true
  name: SoTable
  nameWithType: SoTable
  fullName: SuperOffice.Data.Dictionary.SoTable
- uid: SuperOffice.Data.Dictionary
  commentId: N:SuperOffice.Data.Dictionary
  isExternal: true
  name: SuperOffice.Data.Dictionary
  nameWithType: SuperOffice.Data.Dictionary
  fullName: SuperOffice.Data.Dictionary
