### YamlMime:ManagedReference
items:
- uid: SuperOffice.License.IBlockWelcomeMailPlugin
  commentId: T:SuperOffice.License.IBlockWelcomeMailPlugin
  id: IBlockWelcomeMailPlugin
  parent: SuperOffice.License
  children: []
  langs:
  - csharp
  - vb
  name: IBlockWelcomeMailPlugin
  nameWithType: IBlockWelcomeMailPlugin
  fullName: SuperOffice.License.IBlockWelcomeMailPlugin
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: "\nInterface implemented by Welcome mail blocker plugins.\n"
  remarks: "\nBy default does nothing, but Online override can block e-mail sending.\n"
  syntax:
    content: 'public interface IBlockWelcomeMailPlugin : IPlugin, IDisposable'
    content.vb: >-
      Public Interface IBlockWelcomeMailPlugin
          Inherits IPlugin, IDisposable
  extensionMethods:
  - SuperOffice.License.IBlockWelcomeMailPlugin.EnumUtil.MapEnums``2
  - SuperOffice.License.IBlockWelcomeMailPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: SuperOffice.License
  commentId: N:SuperOffice.License
  isExternal: true
  name: SuperOffice.License
  nameWithType: SuperOffice.License
  fullName: SuperOffice.License
- uid: SuperOffice.License.IBlockWelcomeMailPlugin.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IBlockWelcomeMailPlugin, To>()
  nameWithType: EnumUtil.MapEnums<IBlockWelcomeMailPlugin, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.License.IBlockWelcomeMailPlugin, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IBlockWelcomeMailPlugin, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.License.IBlockWelcomeMailPlugin, To)()
  name.vb: MapEnums(Of IBlockWelcomeMailPlugin, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IBlockWelcomeMailPlugin, To>
    nameWithType: EnumUtil.MapEnums<IBlockWelcomeMailPlugin, To>
    fullName: EnumUtil.MapEnums<SuperOffice.License.IBlockWelcomeMailPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IBlockWelcomeMailPlugin, To)
    nameWithType: EnumUtil.MapEnums(Of IBlockWelcomeMailPlugin, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.License.IBlockWelcomeMailPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.IBlockWelcomeMailPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IBlockWelcomeMailPlugin, To>()
  nameWithType: Converters.MapEnums<IBlockWelcomeMailPlugin, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.License.IBlockWelcomeMailPlugin, To>()
  nameWithType.vb: Converters.MapEnums(Of IBlockWelcomeMailPlugin, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.License.IBlockWelcomeMailPlugin, To)()
  name.vb: MapEnums(Of IBlockWelcomeMailPlugin, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IBlockWelcomeMailPlugin, To>
    nameWithType: Converters.MapEnums<IBlockWelcomeMailPlugin, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.License.IBlockWelcomeMailPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IBlockWelcomeMailPlugin, To)
    nameWithType: Converters.MapEnums(Of IBlockWelcomeMailPlugin, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.License.IBlockWelcomeMailPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
