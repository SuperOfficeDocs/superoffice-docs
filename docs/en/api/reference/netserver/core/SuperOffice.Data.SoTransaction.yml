### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SoTransaction
  commentId: T:SuperOffice.Data.SoTransaction
  id: SoTransaction
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.SoTransaction.Commit
  - SuperOffice.Data.SoTransaction.Dispose
  - SuperOffice.Data.SoTransaction.IsolationLevel
  - SuperOffice.Data.SoTransaction.Rollback
  langs:
  - csharp
  - vb
  name: SoTransaction
  nameWithType: SoTransaction
  fullName: SuperOffice.Data.SoTransaction
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nRepresents a transaction to be performed at a data source, and is implemented\nby .NET Framework data providers that access relational databases.\n"
  syntax:
    content: 'public sealed class SoTransaction : Object, IDbTransaction, IDisposable'
    content.vb: >-
      Public NotInheritable Class SoTransaction
          Inherits Object
          Implements IDbTransaction, IDisposable
  inheritance:
  - System.Object
  implements:
  - System.Data.IDbTransaction
  - System.IDisposable
  extensionMethods:
  - SuperOffice.Data.SoTransaction.EnumUtil.MapEnums``2
  - SuperOffice.Data.SoTransaction.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.Data.SoTransaction.Commit
  commentId: M:SuperOffice.Data.SoTransaction.Commit
  id: Commit
  parent: SuperOffice.Data.SoTransaction
  langs:
  - csharp
  - vb
  name: Commit()
  nameWithType: SoTransaction.Commit()
  fullName: SuperOffice.Data.SoTransaction.Commit()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nCommits the database transaction.\n"
  syntax:
    content: public void Commit()
    content.vb: Public Sub Commit
  overload: SuperOffice.Data.SoTransaction.Commit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The transaction has already been committed or rolled back.-or- The connection is broken. '
  - type: System.Exception
    commentId: T:System.Exception
    description: 'An error occurred while trying to commit the transaction. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoTransaction.Rollback
  commentId: M:SuperOffice.Data.SoTransaction.Rollback
  id: Rollback
  parent: SuperOffice.Data.SoTransaction
  langs:
  - csharp
  - vb
  name: Rollback()
  nameWithType: SoTransaction.Rollback()
  fullName: SuperOffice.Data.SoTransaction.Rollback()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nRolls back a transaction from a pending state.\n"
  syntax:
    content: public void Rollback()
    content.vb: Public Sub Rollback
  overload: SuperOffice.Data.SoTransaction.Rollback*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The transaction has already been committed or rolled back.-or- The connection is broken. '
  - type: System.Exception
    commentId: T:System.Exception
    description: 'An error occurred while trying to commit the transaction. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoTransaction.Dispose
  commentId: M:SuperOffice.Data.SoTransaction.Dispose
  id: Dispose
  parent: SuperOffice.Data.SoTransaction
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SoTransaction.Dispose()
  fullName: SuperOffice.Data.SoTransaction.Dispose()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nPerforms application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: SuperOffice.Data.SoTransaction.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoTransaction.IsolationLevel
  commentId: P:SuperOffice.Data.SoTransaction.IsolationLevel
  id: IsolationLevel
  parent: SuperOffice.Data.SoTransaction
  langs:
  - csharp
  - vb
  name: IsolationLevel
  nameWithType: SoTransaction.IsolationLevel
  fullName: SuperOffice.Data.SoTransaction.IsolationLevel
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nSpecifies the <xref href=\"System.Data.IsolationLevel\" data-throw-if-not-resolved=\"false\"></xref> for this transaction.\n"
  syntax:
    content: public IsolationLevel IsolationLevel { get; }
    parameters: []
    return:
      type: System.Data.IsolationLevel
    content.vb: Public ReadOnly Property IsolationLevel As IsolationLevel
  overload: SuperOffice.Data.SoTransaction.IsolationLevel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.IDbTransaction
  commentId: '!:System.Data.IDbTransaction'
  isExternal: true
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.Data.SoTransaction.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoTransaction, To>()
  nameWithType: EnumUtil.MapEnums<SoTransaction, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SoTransaction, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoTransaction, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SoTransaction, To)()
  name.vb: MapEnums(Of SoTransaction, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoTransaction, To>
    nameWithType: EnumUtil.MapEnums<SoTransaction, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.SoTransaction, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoTransaction, To)
    nameWithType: EnumUtil.MapEnums(Of SoTransaction, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.SoTransaction, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SoTransaction.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoTransaction, To>()
  nameWithType: Converters.MapEnums<SoTransaction, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SoTransaction, To>()
  nameWithType.vb: Converters.MapEnums(Of SoTransaction, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SoTransaction, To)()
  name.vb: MapEnums(Of SoTransaction, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoTransaction, To>
    nameWithType: Converters.MapEnums<SoTransaction, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SoTransaction, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoTransaction, To)
    nameWithType: Converters.MapEnums(Of SoTransaction, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SoTransaction, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.SoTransaction.Commit*
  commentId: Overload:SuperOffice.Data.SoTransaction.Commit
  isExternal: true
  name: Commit
  nameWithType: SoTransaction.Commit
  fullName: SuperOffice.Data.SoTransaction.Commit
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: SuperOffice.Data.SoTransaction.Rollback*
  commentId: Overload:SuperOffice.Data.SoTransaction.Rollback
  isExternal: true
  name: Rollback
  nameWithType: SoTransaction.Rollback
  fullName: SuperOffice.Data.SoTransaction.Rollback
- uid: SuperOffice.Data.SoTransaction.Dispose*
  commentId: Overload:SuperOffice.Data.SoTransaction.Dispose
  isExternal: true
  name: Dispose
  nameWithType: SoTransaction.Dispose
  fullName: SuperOffice.Data.SoTransaction.Dispose
- uid: SuperOffice.Data.SoTransaction.IsolationLevel*
  commentId: Overload:SuperOffice.Data.SoTransaction.IsolationLevel
  isExternal: true
  name: IsolationLevel
  nameWithType: SoTransaction.IsolationLevel
  fullName: SuperOffice.Data.SoTransaction.IsolationLevel
- uid: System.Data.IsolationLevel
  isExternal: true
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
