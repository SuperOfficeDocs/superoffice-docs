### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Principal.SoContextContainer
  commentId: T:SuperOffice.Security.Principal.SoContextContainer
  id: SoContextContainer
  parent: SuperOffice.Security.Principal
  children:
  - SuperOffice.Security.Principal.SoContextContainer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - SuperOffice.Security.Principal.SoContextContainer.ToString
  langs:
  - csharp
  - vb
  name: SoContextContainer
  nameWithType: SoContextContainer
  fullName: SuperOffice.Security.Principal.SoContextContainer
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: "\nContainer of NetServer context, managed by plug-in implementing \n<xref href=\"SuperOffice.Security.Principal.ISoContextProvider\" data-throw-if-not-resolved=\"false\"></xref> and declared with <see cref=\"!:SoContextProviderAttribute\"></see>\n"
  syntax:
    content: 'public sealed class SoContextContainer : Object, ISerializable'
    content.vb: >-
      Public NotInheritable Class SoContextContainer
          Inherits Object
          Implements ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  extensionMethods:
  - SuperOffice.Security.Principal.SoContextContainer.EnumUtil.MapEnums``2
  - SuperOffice.Security.Principal.SoContextContainer.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.Security.Principal.SoContextContainer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:SuperOffice.Security.Principal.SoContextContainer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: SuperOffice.Security.Principal.SoContextContainer
  langs:
  - csharp
  - vb
  name: SoContextContainer(SerializationInfo, StreamingContext)
  nameWithType: SoContextContainer.SoContextContainer(SerializationInfo, StreamingContext)
  fullName: SuperOffice.Security.Principal.SoContextContainer.SoContextContainer(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: "\nConstructor called by de-serializer.\n"
  syntax:
    content: public SoContextContainer(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: De-serialized informaiton
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Context for the serialization
    content.vb: Public Sub New(info As SerializationInfo, context As StreamingContext)
  overload: SuperOffice.Security.Principal.SoContextContainer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Security.Principal.SoContextContainer.ToString
  commentId: M:SuperOffice.Security.Principal.SoContextContainer.ToString
  id: ToString
  parent: SuperOffice.Security.Principal.SoContextContainer
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SoContextContainer.ToString()
  fullName: SuperOffice.Security.Principal.SoContextContainer.ToString()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: "\nIf there is a valid inner principal, return his ToString() - generally for debug purposes. An empty string\nis returned if there is no valid principal (inner principal returned null).\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: Current principal&apos;s ToString, or string.Empty if the inner principal is null
    content.vb: Public Overrides Function ToString As String
  overload: SuperOffice.Security.Principal.SoContextContainer.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.ISerializable
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: SuperOffice.Security.Principal.SoContextContainer.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoContextContainer, To>()
  nameWithType: EnumUtil.MapEnums<SoContextContainer, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.SoContextContainer, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoContextContainer, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.SoContextContainer, To)()
  name.vb: MapEnums(Of SoContextContainer, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoContextContainer, To>
    nameWithType: EnumUtil.MapEnums<SoContextContainer, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.SoContextContainer, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoContextContainer, To)
    nameWithType: EnumUtil.MapEnums(Of SoContextContainer, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.SoContextContainer, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.SoContextContainer.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoContextContainer, To>()
  nameWithType: Converters.MapEnums<SoContextContainer, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.SoContextContainer, To>()
  nameWithType.vb: Converters.MapEnums(Of SoContextContainer, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.SoContextContainer, To)()
  name.vb: MapEnums(Of SoContextContainer, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoContextContainer, To>
    nameWithType: Converters.MapEnums<SoContextContainer, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.SoContextContainer, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoContextContainer, To)
    nameWithType: Converters.MapEnums(Of SoContextContainer, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.SoContextContainer, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Security.Principal.SoContextContainer.#ctor*
  commentId: Overload:SuperOffice.Security.Principal.SoContextContainer.#ctor
  isExternal: true
  name: SoContextContainer
  nameWithType: SoContextContainer.SoContextContainer
  fullName: SuperOffice.Security.Principal.SoContextContainer.SoContextContainer
- uid: System.Runtime.Serialization.SerializationInfo
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: SuperOffice.Security.Principal.SoContextContainer.ToString*
  commentId: Overload:SuperOffice.Security.Principal.SoContextContainer.ToString
  isExternal: true
  name: ToString
  nameWithType: SoContextContainer.ToString
  fullName: SuperOffice.Security.Principal.SoContextContainer.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
