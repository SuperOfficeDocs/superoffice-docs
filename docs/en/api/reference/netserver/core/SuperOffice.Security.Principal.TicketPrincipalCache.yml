### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Principal.TicketPrincipalCache
  commentId: T:SuperOffice.Security.Principal.TicketPrincipalCache
  id: TicketPrincipalCache
  parent: SuperOffice.Security.Principal
  children:
  - SuperOffice.Security.Principal.TicketPrincipalCache.CachePrincipal(System.String,SuperOffice.Security.Principal.SoPrincipal)
  - SuperOffice.Security.Principal.TicketPrincipalCache.Flush
  - SuperOffice.Security.Principal.TicketPrincipalCache.GetCurrent
  - SuperOffice.Security.Principal.TicketPrincipalCache.TryGetCachedPrincipal(System.String,SuperOffice.Security.Principal.SoPrincipal@)
  langs:
  - csharp
  - vb
  name: TicketPrincipalCache
  nameWithType: TicketPrincipalCache
  fullName: SuperOffice.Security.Principal.TicketPrincipalCache
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: "\nInternal cache holding cahced principals\n"
  syntax:
    content: >-
      [SoInject("Database")]

      public class TicketPrincipalCache
    content.vb: >-
      <SoInject("Database")>

      Public Class TicketPrincipalCache
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Security.Principal.TicketPrincipalCache.EnumUtil.MapEnums``2
  - SuperOffice.Security.Principal.TicketPrincipalCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Factory.SoInjectAttribute
    ctor: SuperOffice.Factory.SoInjectAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Database
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Security.Principal.TicketPrincipalCache.GetCurrent
  commentId: M:SuperOffice.Security.Principal.TicketPrincipalCache.GetCurrent
  id: GetCurrent
  parent: SuperOffice.Security.Principal.TicketPrincipalCache
  langs:
  - csharp
  - vb
  name: GetCurrent()
  nameWithType: TicketPrincipalCache.GetCurrent()
  fullName: SuperOffice.Security.Principal.TicketPrincipalCache.GetCurrent()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static TicketPrincipalCache GetCurrent()
    return:
      type: SuperOffice.Security.Principal.TicketPrincipalCache
    content.vb: Public Shared Function GetCurrent As TicketPrincipalCache
  overload: SuperOffice.Security.Principal.TicketPrincipalCache.GetCurrent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Security.Principal.TicketPrincipalCache.Flush
  commentId: M:SuperOffice.Security.Principal.TicketPrincipalCache.Flush
  id: Flush
  parent: SuperOffice.Security.Principal.TicketPrincipalCache
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: TicketPrincipalCache.Flush()
  fullName: SuperOffice.Security.Principal.TicketPrincipalCache.Flush()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: "\nFlush the cache: the next call to GetCurrent will retrieve a newly-created and initialized instance,\ninstead of an existing cached one\n"
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  overload: SuperOffice.Security.Principal.TicketPrincipalCache.Flush*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Security.Principal.TicketPrincipalCache.CachePrincipal(System.String,SuperOffice.Security.Principal.SoPrincipal)
  commentId: M:SuperOffice.Security.Principal.TicketPrincipalCache.CachePrincipal(System.String,SuperOffice.Security.Principal.SoPrincipal)
  id: CachePrincipal(System.String,SuperOffice.Security.Principal.SoPrincipal)
  parent: SuperOffice.Security.Principal.TicketPrincipalCache
  langs:
  - csharp
  - vb
  name: CachePrincipal(String, SoPrincipal)
  nameWithType: TicketPrincipalCache.CachePrincipal(String, SoPrincipal)
  fullName: SuperOffice.Security.Principal.TicketPrincipalCache.CachePrincipal(System.String, SuperOffice.Security.Principal.SoPrincipal)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: "\nCahce a principal keyed on the ticket.\n"
  syntax:
    content: public void CachePrincipal(string ticket, SoPrincipal principal)
    parameters:
    - id: ticket
      type: System.String
      description: Ticket owning the principal
    - id: principal
      type: SuperOffice.Security.Principal.SoPrincipal
      description: Principal to cache
    content.vb: Public Sub CachePrincipal(ticket As String, principal As SoPrincipal)
  overload: SuperOffice.Security.Principal.TicketPrincipalCache.CachePrincipal*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Security.Principal.TicketPrincipalCache.TryGetCachedPrincipal(System.String,SuperOffice.Security.Principal.SoPrincipal@)
  commentId: M:SuperOffice.Security.Principal.TicketPrincipalCache.TryGetCachedPrincipal(System.String,SuperOffice.Security.Principal.SoPrincipal@)
  id: TryGetCachedPrincipal(System.String,SuperOffice.Security.Principal.SoPrincipal@)
  parent: SuperOffice.Security.Principal.TicketPrincipalCache
  langs:
  - csharp
  - vb
  name: TryGetCachedPrincipal(String, out SoPrincipal)
  nameWithType: TicketPrincipalCache.TryGetCachedPrincipal(String, out SoPrincipal)
  fullName: SuperOffice.Security.Principal.TicketPrincipalCache.TryGetCachedPrincipal(System.String, out SuperOffice.Security.Principal.SoPrincipal)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: "\nTry to obtain a cached principal from a ticket.\n"
  syntax:
    content: public bool TryGetCachedPrincipal(string ticket, out SoPrincipal principal)
    parameters:
    - id: ticket
      type: System.String
      description: Ticket used for authentication
    - id: principal
      type: SuperOffice.Security.Principal.SoPrincipal
      description: Principal that is cached
    return:
      type: System.Boolean
      description: True if a chached principal was obtained, otherwise false
    content.vb: Public Function TryGetCachedPrincipal(ticket As String, ByRef principal As SoPrincipal) As Boolean
  overload: SuperOffice.Security.Principal.TicketPrincipalCache.TryGetCachedPrincipal*
  nameWithType.vb: TicketPrincipalCache.TryGetCachedPrincipal(String, ByRef SoPrincipal)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Security.Principal.TicketPrincipalCache.TryGetCachedPrincipal(System.String, ByRef SuperOffice.Security.Principal.SoPrincipal)
  name.vb: TryGetCachedPrincipal(String, ByRef SoPrincipal)
references:
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.TicketPrincipalCache.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TicketPrincipalCache, To>()
  nameWithType: EnumUtil.MapEnums<TicketPrincipalCache, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.TicketPrincipalCache, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TicketPrincipalCache, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.TicketPrincipalCache, To)()
  name.vb: MapEnums(Of TicketPrincipalCache, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TicketPrincipalCache, To>
    nameWithType: EnumUtil.MapEnums<TicketPrincipalCache, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.TicketPrincipalCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TicketPrincipalCache, To)
    nameWithType: EnumUtil.MapEnums(Of TicketPrincipalCache, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.TicketPrincipalCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.TicketPrincipalCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TicketPrincipalCache, To>()
  nameWithType: Converters.MapEnums<TicketPrincipalCache, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.TicketPrincipalCache, To>()
  nameWithType.vb: Converters.MapEnums(Of TicketPrincipalCache, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.TicketPrincipalCache, To)()
  name.vb: MapEnums(Of TicketPrincipalCache, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TicketPrincipalCache, To>
    nameWithType: Converters.MapEnums<TicketPrincipalCache, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.TicketPrincipalCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TicketPrincipalCache, To)
    nameWithType: Converters.MapEnums(Of TicketPrincipalCache, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.TicketPrincipalCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Security.Principal.TicketPrincipalCache.GetCurrent*
  commentId: Overload:SuperOffice.Security.Principal.TicketPrincipalCache.GetCurrent
  isExternal: true
  name: GetCurrent
  nameWithType: TicketPrincipalCache.GetCurrent
  fullName: SuperOffice.Security.Principal.TicketPrincipalCache.GetCurrent
- uid: SuperOffice.Security.Principal.TicketPrincipalCache
  commentId: T:SuperOffice.Security.Principal.TicketPrincipalCache
  parent: SuperOffice.Security.Principal
  isExternal: true
  name: TicketPrincipalCache
  nameWithType: TicketPrincipalCache
  fullName: SuperOffice.Security.Principal.TicketPrincipalCache
- uid: SuperOffice.Security.Principal.TicketPrincipalCache.Flush*
  commentId: Overload:SuperOffice.Security.Principal.TicketPrincipalCache.Flush
  isExternal: true
  name: Flush
  nameWithType: TicketPrincipalCache.Flush
  fullName: SuperOffice.Security.Principal.TicketPrincipalCache.Flush
- uid: SuperOffice.Security.Principal.TicketPrincipalCache.CachePrincipal*
  commentId: Overload:SuperOffice.Security.Principal.TicketPrincipalCache.CachePrincipal
  isExternal: true
  name: CachePrincipal
  nameWithType: TicketPrincipalCache.CachePrincipal
  fullName: SuperOffice.Security.Principal.TicketPrincipalCache.CachePrincipal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Security.Principal.SoPrincipal
  commentId: T:SuperOffice.Security.Principal.SoPrincipal
  parent: SuperOffice.Security.Principal
  isExternal: true
  name: SoPrincipal
  nameWithType: SoPrincipal
  fullName: SuperOffice.Security.Principal.SoPrincipal
- uid: SuperOffice.Security.Principal.TicketPrincipalCache.TryGetCachedPrincipal*
  commentId: Overload:SuperOffice.Security.Principal.TicketPrincipalCache.TryGetCachedPrincipal
  isExternal: true
  name: TryGetCachedPrincipal
  nameWithType: TicketPrincipalCache.TryGetCachedPrincipal
  fullName: SuperOffice.Security.Principal.TicketPrincipalCache.TryGetCachedPrincipal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
