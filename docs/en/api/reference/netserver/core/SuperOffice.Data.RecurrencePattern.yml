### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.RecurrencePattern
  commentId: T:SuperOffice.Data.RecurrencePattern
  id: RecurrencePattern
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.RecurrencePattern.Custom
  - SuperOffice.Data.RecurrencePattern.Daily
  - SuperOffice.Data.RecurrencePattern.Monthly
  - SuperOffice.Data.RecurrencePattern.Unknown
  - SuperOffice.Data.RecurrencePattern.value__
  - SuperOffice.Data.RecurrencePattern.Weekly
  - SuperOffice.Data.RecurrencePattern.Yearly
  langs:
  - csharp
  - vb
  name: RecurrencePattern
  nameWithType: RecurrencePattern
  fullName: SuperOffice.Data.RecurrencePattern
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\nEnumerator describing the main pattern of recurrence.\nThis Enum is used by:  RecurrenceRule.pattern\n"
  syntax:
    content: 'public sealed class RecurrencePattern : Enum'
    content.vb: >-
      Public NotInheritable Class RecurrencePattern
          Inherits

           Enum
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.Data.RecurrencePattern.EnumUtil.MapEnums``2
  - SuperOffice.Data.RecurrencePattern.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.Data.RecurrencePattern.value__
  commentId: F:SuperOffice.Data.RecurrencePattern.value__
  id: value__
  parent: SuperOffice.Data.RecurrencePattern
  langs:
  - csharp
  - vb
  name: value__
  nameWithType: RecurrencePattern.value__
  fullName: SuperOffice.Data.RecurrencePattern.value__
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  syntax:
    content: public short value__
    return:
      type: System.Int16
    content.vb: Public value__ As Short
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.RecurrencePattern.Unknown
  commentId: F:SuperOffice.Data.RecurrencePattern.Unknown
  id: Unknown
  parent: SuperOffice.Data.RecurrencePattern
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: RecurrencePattern.Unknown
  fullName: SuperOffice.Data.RecurrencePattern.Unknown
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n0: 0: Unknown/undecided type\n"
  syntax:
    content: public const RecurrencePattern Unknown
    return:
      type: SuperOffice.Data.RecurrencePattern
    content.vb: Public Const Unknown As RecurrencePattern
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.RecurrencePattern.Daily
  commentId: F:SuperOffice.Data.RecurrencePattern.Daily
  id: Daily
  parent: SuperOffice.Data.RecurrencePattern
  langs:
  - csharp
  - vb
  name: Daily
  nameWithType: RecurrencePattern.Daily
  fullName: SuperOffice.Data.RecurrencePattern.Daily
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n1: Dayly recurrence.\n"
  syntax:
    content: public const RecurrencePattern Daily
    return:
      type: SuperOffice.Data.RecurrencePattern
    content.vb: Public Const Daily As RecurrencePattern
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.RecurrencePattern.Weekly
  commentId: F:SuperOffice.Data.RecurrencePattern.Weekly
  id: Weekly
  parent: SuperOffice.Data.RecurrencePattern
  langs:
  - csharp
  - vb
  name: Weekly
  nameWithType: RecurrencePattern.Weekly
  fullName: SuperOffice.Data.RecurrencePattern.Weekly
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n2: Weekly recurrence.\n"
  syntax:
    content: public const RecurrencePattern Weekly
    return:
      type: SuperOffice.Data.RecurrencePattern
    content.vb: Public Const Weekly As RecurrencePattern
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.RecurrencePattern.Monthly
  commentId: F:SuperOffice.Data.RecurrencePattern.Monthly
  id: Monthly
  parent: SuperOffice.Data.RecurrencePattern
  langs:
  - csharp
  - vb
  name: Monthly
  nameWithType: RecurrencePattern.Monthly
  fullName: SuperOffice.Data.RecurrencePattern.Monthly
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n3: Monthly recurrence.\n"
  syntax:
    content: public const RecurrencePattern Monthly
    return:
      type: SuperOffice.Data.RecurrencePattern
    content.vb: Public Const Monthly As RecurrencePattern
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.RecurrencePattern.Yearly
  commentId: F:SuperOffice.Data.RecurrencePattern.Yearly
  id: Yearly
  parent: SuperOffice.Data.RecurrencePattern
  langs:
  - csharp
  - vb
  name: Yearly
  nameWithType: RecurrencePattern.Yearly
  fullName: SuperOffice.Data.RecurrencePattern.Yearly
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n4: Yearly recurrence.\n"
  syntax:
    content: public const RecurrencePattern Yearly
    return:
      type: SuperOffice.Data.RecurrencePattern
    content.vb: Public Const Yearly As RecurrencePattern
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.RecurrencePattern.Custom
  commentId: F:SuperOffice.Data.RecurrencePattern.Custom
  id: Custom
  parent: SuperOffice.Data.RecurrencePattern
  langs:
  - csharp
  - vb
  name: Custom
  nameWithType: RecurrencePattern.Custom
  fullName: SuperOffice.Data.RecurrencePattern.Custom
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n5: Custom recurrence, only dates are specified.  See RecurrenceDayPattern for details\n"
  syntax:
    content: public const RecurrencePattern Custom
    return:
      type: SuperOffice.Data.RecurrencePattern
    content.vb: Public Const Custom As RecurrencePattern
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.RecurrencePattern.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<RecurrencePattern, To>()
  nameWithType: EnumUtil.MapEnums<RecurrencePattern, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.RecurrencePattern, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of RecurrencePattern, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.RecurrencePattern, To)()
  name.vb: MapEnums(Of RecurrencePattern, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<RecurrencePattern, To>
    nameWithType: EnumUtil.MapEnums<RecurrencePattern, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.RecurrencePattern, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of RecurrencePattern, To)
    nameWithType: EnumUtil.MapEnums(Of RecurrencePattern, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.RecurrencePattern, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.RecurrencePattern.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<RecurrencePattern, To>()
  nameWithType: Converters.MapEnums<RecurrencePattern, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.RecurrencePattern, To>()
  nameWithType.vb: Converters.MapEnums(Of RecurrencePattern, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.RecurrencePattern, To)()
  name.vb: MapEnums(Of RecurrencePattern, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<RecurrencePattern, To>
    nameWithType: Converters.MapEnums<RecurrencePattern, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.RecurrencePattern, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of RecurrencePattern, To)
    nameWithType: Converters.MapEnums(Of RecurrencePattern, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.RecurrencePattern, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: SuperOffice.Data.RecurrencePattern
  commentId: T:SuperOffice.Data.RecurrencePattern
  parent: SuperOffice.Data
  isExternal: true
  name: RecurrencePattern
  nameWithType: RecurrencePattern
  fullName: SuperOffice.Data.RecurrencePattern
