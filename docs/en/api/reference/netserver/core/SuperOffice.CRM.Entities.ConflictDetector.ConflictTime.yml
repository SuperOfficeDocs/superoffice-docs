### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime
  commentId: T:SuperOffice.CRM.Entities.ConflictDetector.ConflictTime
  id: ConflictDetector.ConflictTime
  parent: SuperOffice.CRM.Entities
  children:
  - SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.#ctor(System.DateTime,System.DateTime)
  - SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.EndTime
  - SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.StartTime
  - SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToShortDateTimeString
  - SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToString
  langs:
  - csharp
  - vb
  name: ConflictDetector.ConflictTime
  nameWithType: ConflictDetector.ConflictTime
  fullName: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nInformation about start and end time of an appointment to find conflicts for.\n"
  syntax:
    content: 'public class ConflictTime : Object'
    content.vb: >-
      Public Class ConflictTime
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.#ctor(System.DateTime,System.DateTime)
  commentId: M:SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.#ctor(System.DateTime,System.DateTime)
  id: '#ctor(System.DateTime,System.DateTime)'
  parent: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime
  langs:
  - csharp
  - vb
  name: ConflictTime(DateTime, DateTime)
  nameWithType: ConflictDetector.ConflictTime.ConflictTime(DateTime, DateTime)
  fullName: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ConflictTime(System.DateTime, System.DateTime)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nDefault constructor for a descriptor for the times to detect conflict for.\n"
  syntax:
    content: public ConflictTime(DateTime startTime, DateTime endTime)
    parameters:
    - id: startTime
      type: System.DateTime
      description: Start time (i.e. both date and time) for the appointment.
    - id: endTime
      type: System.DateTime
      description: End time (i.e. both date and time) for the appointment.
    content.vb: Public Sub New(startTime As DateTime, endTime As DateTime)
  overload: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToString
  commentId: M:SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToString
  id: ToString
  parent: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ConflictDetector.ConflictTime.ToString()
  fullName: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nToString method for debugging\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToShortDateTimeString
  commentId: M:SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToShortDateTimeString
  id: ToShortDateTimeString
  parent: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime
  langs:
  - csharp
  - vb
  name: ToShortDateTimeString()
  nameWithType: ConflictDetector.ConflictTime.ToShortDateTimeString()
  fullName: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToShortDateTimeString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public string ToShortDateTimeString()
    return:
      type: System.String
    content.vb: Public Function ToShortDateTimeString As String
  overload: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToShortDateTimeString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.StartTime
  commentId: P:SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.StartTime
  id: StartTime
  parent: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: ConflictDetector.ConflictTime.StartTime
  fullName: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.StartTime
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nGet start time (i.e. both date and time) for the appointment.\n"
  syntax:
    content: public DateTime StartTime { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property StartTime As DateTime
  overload: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.StartTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.EndTime
  commentId: P:SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.EndTime
  id: EndTime
  parent: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: ConflictDetector.ConflictTime.EndTime
  fullName: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.EndTime
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nGet end time (i.e. both date and time) for the appointment.\n"
  syntax:
    content: public DateTime EndTime { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property EndTime As DateTime
  overload: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.EndTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ConflictDetector.ConflictTime, To>()
  nameWithType: EnumUtil.MapEnums<ConflictDetector.ConflictTime, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Entities.ConflictDetector.ConflictTime, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ConflictDetector.ConflictTime, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Entities.ConflictDetector.ConflictTime, To)()
  name.vb: MapEnums(Of ConflictDetector.ConflictTime, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ConflictDetector.ConflictTime, To>
    nameWithType: EnumUtil.MapEnums<ConflictDetector.ConflictTime, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Entities.ConflictDetector.ConflictTime, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ConflictDetector.ConflictTime, To)
    nameWithType: EnumUtil.MapEnums(Of ConflictDetector.ConflictTime, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Entities.ConflictDetector.ConflictTime, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ConflictDetector.ConflictTime, To>()
  nameWithType: Converters.MapEnums<ConflictDetector.ConflictTime, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Entities.ConflictDetector.ConflictTime, To>()
  nameWithType.vb: Converters.MapEnums(Of ConflictDetector.ConflictTime, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Entities.ConflictDetector.ConflictTime, To)()
  name.vb: MapEnums(Of ConflictDetector.ConflictTime, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ConflictDetector.ConflictTime, To>
    nameWithType: Converters.MapEnums<ConflictDetector.ConflictTime, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Entities.ConflictDetector.ConflictTime, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ConflictDetector.ConflictTime, To)
    nameWithType: Converters.MapEnums(Of ConflictDetector.ConflictTime, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Entities.ConflictDetector.ConflictTime, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.#ctor*
  commentId: Overload:SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.#ctor
  isExternal: true
  name: ConflictTime
  nameWithType: ConflictDetector.ConflictTime.ConflictTime
  fullName: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ConflictTime
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToString*
  commentId: Overload:SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToString
  isExternal: true
  name: ToString
  nameWithType: ConflictDetector.ConflictTime.ToString
  fullName: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToShortDateTimeString*
  commentId: Overload:SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToShortDateTimeString
  isExternal: true
  name: ToShortDateTimeString
  nameWithType: ConflictDetector.ConflictTime.ToShortDateTimeString
  fullName: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.ToShortDateTimeString
- uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.StartTime*
  commentId: Overload:SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.StartTime
  isExternal: true
  name: StartTime
  nameWithType: ConflictDetector.ConflictTime.StartTime
  fullName: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.StartTime
- uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.EndTime*
  commentId: Overload:SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.EndTime
  isExternal: true
  name: EndTime
  nameWithType: ConflictDetector.ConflictTime.EndTime
  fullName: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.EndTime
