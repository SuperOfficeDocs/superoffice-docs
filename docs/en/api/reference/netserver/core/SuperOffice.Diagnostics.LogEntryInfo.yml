### YamlMime:ManagedReference
items:
- uid: SuperOffice.Diagnostics.LogEntryInfo
  commentId: T:SuperOffice.Diagnostics.LogEntryInfo
  id: LogEntryInfo
  parent: SuperOffice.Diagnostics
  children:
  - SuperOffice.Diagnostics.LogEntryInfo.#ctor
  - SuperOffice.Diagnostics.LogEntryInfo.#ctor(System.Diagnostics.EventLogEntryType)
  - SuperOffice.Diagnostics.LogEntryInfo.#ctor(System.Diagnostics.EventLogEntryType,SuperOffice.Exceptions.SoExceptionInfo)
  - SuperOffice.Diagnostics.LogEntryInfo.#ctor(System.Diagnostics.EventLogEntryType,System.Exception)
  - SuperOffice.Diagnostics.LogEntryInfo.AddElement(System.Type,System.String,System.String)
  - SuperOffice.Diagnostics.LogEntryInfo.EnvironmentInfo
  - SuperOffice.Diagnostics.LogEntryInfo.LogElement
  - SuperOffice.Diagnostics.LogEntryInfo.LogEntryType
  - SuperOffice.Diagnostics.LogEntryInfo.ToString
  langs:
  - csharp
  - vb
  name: LogEntryInfo
  nameWithType: LogEntryInfo
  fullName: SuperOffice.Diagnostics.LogEntryInfo
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: Class representing an issue that can be logged
  example:
  - >-
    Logging an exception:

    <pre><code class="lang-csharp">SoLogger.Logger.LogException(System.Diagnostics.EventLogEntryType.Warning, ex);</code></pre>
  syntax:
    content: public sealed class LogEntryInfo
    content.vb: Public NotInheritable Class LogEntryInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  extensionMethods:
  - SuperOffice.Diagnostics.LogEntryInfo.EnumUtil.MapEnums``2
  - SuperOffice.Diagnostics.LogEntryInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  - SuperOffice.Diagnostics.LogEntryInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Diagnostics.LogEntryInfo)
  - SuperOffice.Diagnostics.LogEntryInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
- uid: SuperOffice.Diagnostics.LogEntryInfo.#ctor
  commentId: M:SuperOffice.Diagnostics.LogEntryInfo.#ctor
  id: '#ctor'
  parent: SuperOffice.Diagnostics.LogEntryInfo
  langs:
  - csharp
  - vb
  name: LogEntryInfo()
  nameWithType: LogEntryInfo.LogEntryInfo()
  fullName: SuperOffice.Diagnostics.LogEntryInfo.LogEntryInfo()
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: This constructor is only to be used by the serializer!
  example: []
  syntax:
    content: public LogEntryInfo()
    content.vb: Public Sub New()
  overload: SuperOffice.Diagnostics.LogEntryInfo.#ctor*
  nameWithType.vb: LogEntryInfo.New()
  fullName.vb: SuperOffice.Diagnostics.LogEntryInfo.New()
  name.vb: New()
- uid: SuperOffice.Diagnostics.LogEntryInfo.#ctor(System.Diagnostics.EventLogEntryType)
  commentId: M:SuperOffice.Diagnostics.LogEntryInfo.#ctor(System.Diagnostics.EventLogEntryType)
  id: '#ctor(System.Diagnostics.EventLogEntryType)'
  parent: SuperOffice.Diagnostics.LogEntryInfo
  langs:
  - csharp
  - vb
  name: LogEntryInfo(EventLogEntryType)
  nameWithType: LogEntryInfo.LogEntryInfo(EventLogEntryType)
  fullName: SuperOffice.Diagnostics.LogEntryInfo.LogEntryInfo(System.Diagnostics.EventLogEntryType)
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: Default constructor.
  example: []
  syntax:
    content: public LogEntryInfo(EventLogEntryType logType)
    parameters:
    - id: logType
      type: System.Diagnostics.EventLogEntryType
      description: The level of severity for the information to be logged.
    content.vb: Public Sub New(logType As EventLogEntryType)
  overload: SuperOffice.Diagnostics.LogEntryInfo.#ctor*
  nameWithType.vb: LogEntryInfo.New(EventLogEntryType)
  fullName.vb: SuperOffice.Diagnostics.LogEntryInfo.New(System.Diagnostics.EventLogEntryType)
  name.vb: New(EventLogEntryType)
- uid: SuperOffice.Diagnostics.LogEntryInfo.#ctor(System.Diagnostics.EventLogEntryType,System.Exception)
  commentId: M:SuperOffice.Diagnostics.LogEntryInfo.#ctor(System.Diagnostics.EventLogEntryType,System.Exception)
  id: '#ctor(System.Diagnostics.EventLogEntryType,System.Exception)'
  parent: SuperOffice.Diagnostics.LogEntryInfo
  langs:
  - csharp
  - vb
  name: LogEntryInfo(EventLogEntryType, Exception)
  nameWithType: LogEntryInfo.LogEntryInfo(EventLogEntryType, Exception)
  fullName: SuperOffice.Diagnostics.LogEntryInfo.LogEntryInfo(System.Diagnostics.EventLogEntryType, System.Exception)
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: Default constructor.
  example: []
  syntax:
    content: public LogEntryInfo(EventLogEntryType logType, Exception exception)
    parameters:
    - id: logType
      type: System.Diagnostics.EventLogEntryType
      description: The level of severity for the information to be logged.
    - id: exception
      type: System.Exception
      description: Exception to be logged.
    content.vb: Public Sub New(logType As EventLogEntryType, exception As Exception)
  overload: SuperOffice.Diagnostics.LogEntryInfo.#ctor*
  nameWithType.vb: LogEntryInfo.New(EventLogEntryType, Exception)
  fullName.vb: SuperOffice.Diagnostics.LogEntryInfo.New(System.Diagnostics.EventLogEntryType, System.Exception)
  name.vb: New(EventLogEntryType, Exception)
- uid: SuperOffice.Diagnostics.LogEntryInfo.#ctor(System.Diagnostics.EventLogEntryType,SuperOffice.Exceptions.SoExceptionInfo)
  commentId: M:SuperOffice.Diagnostics.LogEntryInfo.#ctor(System.Diagnostics.EventLogEntryType,SuperOffice.Exceptions.SoExceptionInfo)
  id: '#ctor(System.Diagnostics.EventLogEntryType,SuperOffice.Exceptions.SoExceptionInfo)'
  parent: SuperOffice.Diagnostics.LogEntryInfo
  langs:
  - csharp
  - vb
  name: LogEntryInfo(EventLogEntryType, SoExceptionInfo)
  nameWithType: LogEntryInfo.LogEntryInfo(EventLogEntryType, SoExceptionInfo)
  fullName: SuperOffice.Diagnostics.LogEntryInfo.LogEntryInfo(System.Diagnostics.EventLogEntryType, SuperOffice.Exceptions.SoExceptionInfo)
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public LogEntryInfo(EventLogEntryType logType, SoExceptionInfo exception)
    parameters:
    - id: logType
      type: System.Diagnostics.EventLogEntryType
    - id: exception
      type: SuperOffice.Exceptions.SoExceptionInfo
    content.vb: Public Sub New(logType As EventLogEntryType, exception As SoExceptionInfo)
  overload: SuperOffice.Diagnostics.LogEntryInfo.#ctor*
  nameWithType.vb: LogEntryInfo.New(EventLogEntryType, SoExceptionInfo)
  fullName.vb: SuperOffice.Diagnostics.LogEntryInfo.New(System.Diagnostics.EventLogEntryType, SuperOffice.Exceptions.SoExceptionInfo)
  name.vb: New(EventLogEntryType, SoExceptionInfo)
- uid: SuperOffice.Diagnostics.LogEntryInfo.AddElement(System.Type,System.String,System.String)
  commentId: M:SuperOffice.Diagnostics.LogEntryInfo.AddElement(System.Type,System.String,System.String)
  id: AddElement(System.Type,System.String,System.String)
  parent: SuperOffice.Diagnostics.LogEntryInfo
  langs:
  - csharp
  - vb
  name: AddElement(Type, string, string)
  nameWithType: LogEntryInfo.AddElement(Type, string, string)
  fullName: SuperOffice.Diagnostics.LogEntryInfo.AddElement(System.Type, string, string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: Add information to the issue.
  example: []
  syntax:
    content: public void AddElement(Type sourceType, string message, string details)
    parameters:
    - id: sourceType
      type: System.Type
      description: A Type (e.g. Exception or current class) that is relevant.
    - id: message
      type: System.String
      description: Brief description.
    - id: details
      type: System.String
      description: >-
        Detailed description (e.g. this could be the StackTrace of the exception or other 

        detailed information.
    content.vb: Public Sub AddElement(sourceType As Type, message As String, details As String)
  overload: SuperOffice.Diagnostics.LogEntryInfo.AddElement*
  nameWithType.vb: LogEntryInfo.AddElement(Type, String, String)
  fullName.vb: SuperOffice.Diagnostics.LogEntryInfo.AddElement(System.Type, String, String)
  name.vb: AddElement(Type, String, String)
- uid: SuperOffice.Diagnostics.LogEntryInfo.ToString
  commentId: M:SuperOffice.Diagnostics.LogEntryInfo.ToString
  id: ToString
  parent: SuperOffice.Diagnostics.LogEntryInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LogEntryInfo.ToString()
  fullName: SuperOffice.Diagnostics.LogEntryInfo.ToString()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: Get a string containing the entire errormessage.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The entire error message.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SuperOffice.Diagnostics.LogEntryInfo.ToString*
- uid: SuperOffice.Diagnostics.LogEntryInfo.EnvironmentInfo
  commentId: P:SuperOffice.Diagnostics.LogEntryInfo.EnvironmentInfo
  id: EnvironmentInfo
  parent: SuperOffice.Diagnostics.LogEntryInfo
  langs:
  - csharp
  - vb
  name: EnvironmentInfo
  nameWithType: LogEntryInfo.EnvironmentInfo
  fullName: SuperOffice.Diagnostics.LogEntryInfo.EnvironmentInfo
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: >-
    Name and value pair collection holding a snapshot of information that can 

    relevant to the issue, taken at the moment immediately preceding the 

    occurrence of the issue.
  example: []
  syntax:
    content: public NameValueCollection EnvironmentInfo { get; }
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
    content.vb: Public ReadOnly Property EnvironmentInfo As NameValueCollection
  overload: SuperOffice.Diagnostics.LogEntryInfo.EnvironmentInfo*
- uid: SuperOffice.Diagnostics.LogEntryInfo.LogEntryType
  commentId: P:SuperOffice.Diagnostics.LogEntryInfo.LogEntryType
  id: LogEntryType
  parent: SuperOffice.Diagnostics.LogEntryInfo
  langs:
  - csharp
  - vb
  name: LogEntryType
  nameWithType: LogEntryInfo.LogEntryType
  fullName: SuperOffice.Diagnostics.LogEntryInfo.LogEntryType
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: Event type.
  example: []
  syntax:
    content: public EventLogEntryType LogEntryType { get; }
    parameters: []
    return:
      type: System.Diagnostics.EventLogEntryType
    content.vb: Public ReadOnly Property LogEntryType As EventLogEntryType
  overload: SuperOffice.Diagnostics.LogEntryInfo.LogEntryType*
- uid: SuperOffice.Diagnostics.LogEntryInfo.LogElement
  commentId: P:SuperOffice.Diagnostics.LogEntryInfo.LogElement
  id: LogElement
  parent: SuperOffice.Diagnostics.LogEntryInfo
  langs:
  - csharp
  - vb
  name: LogElement
  nameWithType: LogEntryInfo.LogElement
  fullName: SuperOffice.Diagnostics.LogEntryInfo.LogElement
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: Information about the issue
  example: []
  syntax:
    content: public LogElement LogElement { get; }
    parameters: []
    return:
      type: SuperOffice.Diagnostics.LogElement
    content.vb: Public ReadOnly Property LogElement As LogElement
  overload: SuperOffice.Diagnostics.LogEntryInfo.LogElement*
references:
- uid: SuperOffice.Diagnostics
  commentId: N:SuperOffice.Diagnostics
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Diagnostics
  nameWithType: SuperOffice.Diagnostics
  fullName: SuperOffice.Diagnostics
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Diagnostics
    name: Diagnostics
    isExternal: true
    href: SuperOffice.Diagnostics.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Diagnostics
    name: Diagnostics
    isExternal: true
    href: SuperOffice.Diagnostics.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: SuperOffice.Diagnostics.LogEntryInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<LogEntryInfo, To>(LogEntryInfo)
  nameWithType: EnumUtil.MapEnums<LogEntryInfo, To>(LogEntryInfo)
  fullName: EnumUtil.MapEnums<SuperOffice.Diagnostics.LogEntryInfo, To>(SuperOffice.Diagnostics.LogEntryInfo)
  nameWithType.vb: EnumUtil.MapEnums(Of LogEntryInfo, To)(LogEntryInfo)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Diagnostics.LogEntryInfo, To)(SuperOffice.Diagnostics.LogEntryInfo)
  name.vb: MapEnums(Of LogEntryInfo, To)(LogEntryInfo)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Diagnostics.LogEntryInfo)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Diagnostics.LogEntryInfo)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: )
- uid: SuperOffice.Diagnostics.LogEntryInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<LogEntryInfo, To>(LogEntryInfo)
  nameWithType: Converters.MapEnums<LogEntryInfo, To>(LogEntryInfo)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Diagnostics.LogEntryInfo, To>(SuperOffice.Diagnostics.LogEntryInfo)
  nameWithType.vb: Converters.MapEnums(Of LogEntryInfo, To)(LogEntryInfo)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Diagnostics.LogEntryInfo, To)(SuperOffice.Diagnostics.LogEntryInfo)
  name.vb: MapEnums(Of LogEntryInfo, To)(LogEntryInfo)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Diagnostics.LogEntryInfo)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Diagnostics.LogEntryInfo)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: )
- uid: SuperOffice.Diagnostics.LogEntryInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Diagnostics.LogEntryInfo)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<LogEntryInfo>(LogEntryInfo, LogEntryInfo)
  nameWithType: ObjectExtensions.AssignByReflection<LogEntryInfo>(LogEntryInfo, LogEntryInfo)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Diagnostics.LogEntryInfo>(SuperOffice.Diagnostics.LogEntryInfo, SuperOffice.Diagnostics.LogEntryInfo)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of LogEntryInfo)(LogEntryInfo, LogEntryInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Diagnostics.LogEntryInfo)(SuperOffice.Diagnostics.LogEntryInfo, SuperOffice.Diagnostics.LogEntryInfo)
  name.vb: AssignByReflection(Of LogEntryInfo)(LogEntryInfo, LogEntryInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Diagnostics.LogEntryInfo,SuperOffice.Diagnostics.LogEntryInfo)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: '>'
  - name: (
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Diagnostics.LogEntryInfo,SuperOffice.Diagnostics.LogEntryInfo)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: )
  - name: (
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: )
- uid: SuperOffice.Diagnostics.LogEntryInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<LogEntryInfo>(LogEntryInfo)
  nameWithType: ObjectExtensions.GraphCopy<LogEntryInfo>(LogEntryInfo)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Diagnostics.LogEntryInfo>(SuperOffice.Diagnostics.LogEntryInfo)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of LogEntryInfo)(LogEntryInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Diagnostics.LogEntryInfo)(SuperOffice.Diagnostics.LogEntryInfo)
  name.vb: GraphCopy(Of LogEntryInfo)(LogEntryInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.Diagnostics.LogEntryInfo)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: '>'
  - name: (
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.Diagnostics.LogEntryInfo)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: )
  - name: (
  - uid: SuperOffice.Diagnostics.LogEntryInfo
    name: LogEntryInfo
    isExternal: true
    href: SuperOffice.Diagnostics.LogEntryInfo.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: SuperOffice.Diagnostics.LogEntryInfo.#ctor*
  commentId: Overload:SuperOffice.Diagnostics.LogEntryInfo.#ctor
  isExternal: true
  href: SuperOffice.Diagnostics.LogEntryInfo.html#SuperOffice_Diagnostics_LogEntryInfo__ctor
  name: LogEntryInfo
  nameWithType: LogEntryInfo.LogEntryInfo
  fullName: SuperOffice.Diagnostics.LogEntryInfo.LogEntryInfo
  nameWithType.vb: LogEntryInfo.New
  fullName.vb: SuperOffice.Diagnostics.LogEntryInfo.New
  name.vb: New
- uid: System.Diagnostics.EventLogEntryType
  commentId: T:System.Diagnostics.EventLogEntryType
  parent: System.Diagnostics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.diagnostics.eventlogentrytype
  name: EventLogEntryType
  nameWithType: EventLogEntryType
  fullName: System.Diagnostics.EventLogEntryType
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Diagnostics
    name: Diagnostics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.diagnostics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Diagnostics
    name: Diagnostics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.diagnostics
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: SuperOffice.Exceptions.SoExceptionInfo
  commentId: T:SuperOffice.Exceptions.SoExceptionInfo
  parent: SuperOffice.Exceptions
  isExternal: true
  href: SuperOffice.Exceptions.SoExceptionInfo.html
  name: SoExceptionInfo
  nameWithType: SoExceptionInfo
  fullName: SuperOffice.Exceptions.SoExceptionInfo
- uid: SuperOffice.Exceptions
  commentId: N:SuperOffice.Exceptions
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Exceptions
  nameWithType: SuperOffice.Exceptions
  fullName: SuperOffice.Exceptions
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Exceptions
    name: Exceptions
    isExternal: true
    href: SuperOffice.Exceptions.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Exceptions
    name: Exceptions
    isExternal: true
    href: SuperOffice.Exceptions.html
- uid: SuperOffice.Diagnostics.LogEntryInfo.AddElement*
  commentId: Overload:SuperOffice.Diagnostics.LogEntryInfo.AddElement
  isExternal: true
  href: SuperOffice.Diagnostics.LogEntryInfo.html#SuperOffice_Diagnostics_LogEntryInfo_AddElement_System_Type_System_String_System_String_
  name: AddElement
  nameWithType: LogEntryInfo.AddElement
  fullName: SuperOffice.Diagnostics.LogEntryInfo.AddElement
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SuperOffice.Diagnostics.LogEntryInfo.ToString*
  commentId: Overload:SuperOffice.Diagnostics.LogEntryInfo.ToString
  isExternal: true
  href: SuperOffice.Diagnostics.LogEntryInfo.html#SuperOffice_Diagnostics_LogEntryInfo_ToString
  name: ToString
  nameWithType: LogEntryInfo.ToString
  fullName: SuperOffice.Diagnostics.LogEntryInfo.ToString
- uid: SuperOffice.Diagnostics.LogEntryInfo.EnvironmentInfo*
  commentId: Overload:SuperOffice.Diagnostics.LogEntryInfo.EnvironmentInfo
  isExternal: true
  href: SuperOffice.Diagnostics.LogEntryInfo.html#SuperOffice_Diagnostics_LogEntryInfo_EnvironmentInfo
  name: EnvironmentInfo
  nameWithType: LogEntryInfo.EnvironmentInfo
  fullName: SuperOffice.Diagnostics.LogEntryInfo.EnvironmentInfo
- uid: System.Collections.Specialized.NameValueCollection
  commentId: T:System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.namevaluecollection
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
- uid: SuperOffice.Diagnostics.LogEntryInfo.LogEntryType*
  commentId: Overload:SuperOffice.Diagnostics.LogEntryInfo.LogEntryType
  isExternal: true
  href: SuperOffice.Diagnostics.LogEntryInfo.html#SuperOffice_Diagnostics_LogEntryInfo_LogEntryType
  name: LogEntryType
  nameWithType: LogEntryInfo.LogEntryType
  fullName: SuperOffice.Diagnostics.LogEntryInfo.LogEntryType
- uid: SuperOffice.Diagnostics.LogEntryInfo.LogElement*
  commentId: Overload:SuperOffice.Diagnostics.LogEntryInfo.LogElement
  isExternal: true
  href: SuperOffice.Diagnostics.LogEntryInfo.html#SuperOffice_Diagnostics_LogEntryInfo_LogElement
  name: LogElement
  nameWithType: LogEntryInfo.LogElement
  fullName: SuperOffice.Diagnostics.LogEntryInfo.LogElement
- uid: SuperOffice.Diagnostics.LogElement
  commentId: T:SuperOffice.Diagnostics.LogElement
  parent: SuperOffice.Diagnostics
  isExternal: true
  href: SuperOffice.Diagnostics.LogElement.html
  name: LogElement
  nameWithType: LogElement
  fullName: SuperOffice.Diagnostics.LogElement
