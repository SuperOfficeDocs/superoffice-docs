### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.DatabaseStepAttribute
  commentId: T:SuperOffice.Data.DatabaseStepAttribute
  id: DatabaseStepAttribute
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.DatabaseStepAttribute.#ctor(System.String,System.Int32,SuperOffice.CD.DSL.V1.StepModel.ReleaseState)
  - SuperOffice.Data.DatabaseStepAttribute.StepInfo
  - SuperOffice.Data.DatabaseStepAttribute.TypeId
  langs:
  - csharp
  - vb
  name: DatabaseStepAttribute
  nameWithType: DatabaseStepAttribute
  fullName: SuperOffice.Data.DatabaseStepAttribute
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nA class decorated with this attribute represents a factory (possibly one of many) of <xref href=\"SuperOffice.Data.SQL.TableInfo\" data-throw-if-not-resolved=\"false\"></xref> objects,\nand this attribute contains info about the dictionary steps the factory was generated for. \nOnly the highest numbered step for each name is flagged\n"
  syntax:
    content: 'public class DatabaseStepAttribute : Attribute'
    content.vb: >-
      Public Class DatabaseStepAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.Data.DatabaseStepAttribute.EnumUtil.MapEnums``2
  - SuperOffice.Data.DatabaseStepAttribute.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Data.DatabaseStepAttribute.#ctor(System.String,System.Int32,SuperOffice.CD.DSL.V1.StepModel.ReleaseState)
  commentId: M:SuperOffice.Data.DatabaseStepAttribute.#ctor(System.String,System.Int32,SuperOffice.CD.DSL.V1.StepModel.ReleaseState)
  id: '#ctor(System.String,System.Int32,SuperOffice.CD.DSL.V1.StepModel.ReleaseState)'
  parent: SuperOffice.Data.DatabaseStepAttribute
  langs:
  - csharp
  - vb
  name: DatabaseStepAttribute(String, Int32, ReleaseState)
  nameWithType: DatabaseStepAttribute.DatabaseStepAttribute(String, Int32, ReleaseState)
  fullName: SuperOffice.Data.DatabaseStepAttribute.DatabaseStepAttribute(System.String, System.Int32, SuperOffice.CD.DSL.V1.StepModel.ReleaseState)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public DatabaseStepAttribute(string stepName, int stepNumber, ReleaseState stepState)
    parameters:
    - id: stepName
      type: System.String
    - id: stepNumber
      type: System.Int32
    - id: stepState
      type: SuperOffice.CD.DSL.V1.StepModel.ReleaseState
    content.vb: Public Sub New(stepName As String, stepNumber As Integer, stepState As ReleaseState)
  overload: SuperOffice.Data.DatabaseStepAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.DatabaseStepAttribute.StepInfo
  commentId: P:SuperOffice.Data.DatabaseStepAttribute.StepInfo
  id: StepInfo
  parent: SuperOffice.Data.DatabaseStepAttribute
  langs:
  - csharp
  - vb
  name: StepInfo
  nameWithType: DatabaseStepAttribute.StepInfo
  fullName: SuperOffice.Data.DatabaseStepAttribute.StepInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public DictionaryStepInfo StepInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CD.DSL.V1.DatabaseModel.DictionaryStepInfo
    content.vb: Public ReadOnly Property StepInfo As DictionaryStepInfo
  overload: SuperOffice.Data.DatabaseStepAttribute.StepInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.Data.DatabaseStepAttribute.TypeId
  commentId: P:SuperOffice.Data.DatabaseStepAttribute.TypeId
  id: TypeId
  parent: SuperOffice.Data.DatabaseStepAttribute
  langs:
  - csharp
  - vb
  name: TypeId
  nameWithType: DatabaseStepAttribute.TypeId
  fullName: SuperOffice.Data.DatabaseStepAttribute.TypeId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public override object TypeId { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Overrides ReadOnly Property TypeId As Object
  overload: SuperOffice.Data.DatabaseStepAttribute.TypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.DatabaseStepAttribute.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<DatabaseStepAttribute, To>()
  nameWithType: EnumUtil.MapEnums<DatabaseStepAttribute, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.DatabaseStepAttribute, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of DatabaseStepAttribute, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.DatabaseStepAttribute, To)()
  name.vb: MapEnums(Of DatabaseStepAttribute, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<DatabaseStepAttribute, To>
    nameWithType: EnumUtil.MapEnums<DatabaseStepAttribute, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.DatabaseStepAttribute, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of DatabaseStepAttribute, To)
    nameWithType: EnumUtil.MapEnums(Of DatabaseStepAttribute, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.DatabaseStepAttribute, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.DatabaseStepAttribute.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<DatabaseStepAttribute, To>()
  nameWithType: Converters.MapEnums<DatabaseStepAttribute, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.DatabaseStepAttribute, To>()
  nameWithType.vb: Converters.MapEnums(Of DatabaseStepAttribute, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.DatabaseStepAttribute, To)()
  name.vb: MapEnums(Of DatabaseStepAttribute, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<DatabaseStepAttribute, To>
    nameWithType: Converters.MapEnums<DatabaseStepAttribute, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.DatabaseStepAttribute, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of DatabaseStepAttribute, To)
    nameWithType: Converters.MapEnums(Of DatabaseStepAttribute, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.DatabaseStepAttribute, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.DatabaseStepAttribute.#ctor*
  commentId: Overload:SuperOffice.Data.DatabaseStepAttribute.#ctor
  isExternal: true
  name: DatabaseStepAttribute
  nameWithType: DatabaseStepAttribute.DatabaseStepAttribute
  fullName: SuperOffice.Data.DatabaseStepAttribute.DatabaseStepAttribute
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CD.DSL.V1.StepModel.ReleaseState
  commentId: '!:SuperOffice.CD.DSL.V1.StepModel.ReleaseState'
  isExternal: true
  name: ReleaseState
  nameWithType: ReleaseState
  fullName: SuperOffice.CD.DSL.V1.StepModel.ReleaseState
- uid: SuperOffice.Data.DatabaseStepAttribute.StepInfo*
  commentId: Overload:SuperOffice.Data.DatabaseStepAttribute.StepInfo
  isExternal: true
  name: StepInfo
  nameWithType: DatabaseStepAttribute.StepInfo
  fullName: SuperOffice.Data.DatabaseStepAttribute.StepInfo
- uid: SuperOffice.CD.DSL.V1.DatabaseModel.DictionaryStepInfo
  commentId: '!:SuperOffice.CD.DSL.V1.DatabaseModel.DictionaryStepInfo'
  isExternal: true
  name: DictionaryStepInfo
  nameWithType: DictionaryStepInfo
  fullName: SuperOffice.CD.DSL.V1.DatabaseModel.DictionaryStepInfo
- uid: SuperOffice.Data.DatabaseStepAttribute.TypeId*
  commentId: Overload:SuperOffice.Data.DatabaseStepAttribute.TypeId
  isExternal: true
  name: TypeId
  nameWithType: DatabaseStepAttribute.TypeId
  fullName: SuperOffice.Data.DatabaseStepAttribute.TypeId
