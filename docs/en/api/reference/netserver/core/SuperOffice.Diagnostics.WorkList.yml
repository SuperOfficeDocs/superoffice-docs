### YamlMime:ManagedReference
items:
- uid: SuperOffice.Diagnostics.WorkList
  commentId: T:SuperOffice.Diagnostics.WorkList
  id: WorkList
  parent: SuperOffice.Diagnostics
  children:
  - SuperOffice.Diagnostics.WorkList.#ctor
  - SuperOffice.Diagnostics.WorkList.ColumnNames
  - SuperOffice.Diagnostics.WorkList.ColumnTypes
  - SuperOffice.Diagnostics.WorkList.ListName
  - SuperOffice.Diagnostics.WorkList.Rows
  langs:
  - csharp
  - vb
  name: WorkList
  nameWithType: WorkList
  fullName: SuperOffice.Diagnostics.WorkList
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public class WorkList
    content.vb: Public Class WorkList
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Diagnostics.WorkList.EnumUtil.MapEnums``2
  - SuperOffice.Diagnostics.WorkList.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  - SuperOffice.Diagnostics.WorkList.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Diagnostics.WorkList)
  - SuperOffice.Diagnostics.WorkList.SuperOffice.Util.ObjectExtensions.GraphCopy``1
- uid: SuperOffice.Diagnostics.WorkList.#ctor
  commentId: M:SuperOffice.Diagnostics.WorkList.#ctor
  id: '#ctor'
  parent: SuperOffice.Diagnostics.WorkList
  langs:
  - csharp
  - vb
  name: WorkList()
  nameWithType: WorkList.WorkList()
  fullName: SuperOffice.Diagnostics.WorkList.WorkList()
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public WorkList()
    content.vb: Public Sub New()
  overload: SuperOffice.Diagnostics.WorkList.#ctor*
  nameWithType.vb: WorkList.New()
  fullName.vb: SuperOffice.Diagnostics.WorkList.New()
  name.vb: New()
- uid: SuperOffice.Diagnostics.WorkList.ListName
  commentId: P:SuperOffice.Diagnostics.WorkList.ListName
  id: ListName
  parent: SuperOffice.Diagnostics.WorkList
  langs:
  - csharp
  - vb
  name: ListName
  nameWithType: WorkList.ListName
  fullName: SuperOffice.Diagnostics.WorkList.ListName
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public string ListName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ListName As String
  overload: SuperOffice.Diagnostics.WorkList.ListName*
- uid: SuperOffice.Diagnostics.WorkList.ColumnNames
  commentId: P:SuperOffice.Diagnostics.WorkList.ColumnNames
  id: ColumnNames
  parent: SuperOffice.Diagnostics.WorkList
  langs:
  - csharp
  - vb
  name: ColumnNames
  nameWithType: WorkList.ColumnNames
  fullName: SuperOffice.Diagnostics.WorkList.ColumnNames
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public List<string> ColumnNames { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property ColumnNames As List(Of String)
  overload: SuperOffice.Diagnostics.WorkList.ColumnNames*
- uid: SuperOffice.Diagnostics.WorkList.ColumnTypes
  commentId: P:SuperOffice.Diagnostics.WorkList.ColumnTypes
  id: ColumnTypes
  parent: SuperOffice.Diagnostics.WorkList
  langs:
  - csharp
  - vb
  name: ColumnTypes
  nameWithType: WorkList.ColumnTypes
  fullName: SuperOffice.Diagnostics.WorkList.ColumnTypes
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public List<string> ColumnTypes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property ColumnTypes As List(Of String)
  overload: SuperOffice.Diagnostics.WorkList.ColumnTypes*
- uid: SuperOffice.Diagnostics.WorkList.Rows
  commentId: P:SuperOffice.Diagnostics.WorkList.Rows
  id: Rows
  parent: SuperOffice.Diagnostics.WorkList
  langs:
  - csharp
  - vb
  name: Rows
  nameWithType: WorkList.Rows
  fullName: SuperOffice.Diagnostics.WorkList.Rows
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public List<WorkRow> Rows { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SuperOffice.Diagnostics.WorkRow}
    content.vb: Public Property Rows As List(Of WorkRow)
  overload: SuperOffice.Diagnostics.WorkList.Rows*
references:
- uid: SuperOffice.Diagnostics
  commentId: N:SuperOffice.Diagnostics
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Diagnostics
  nameWithType: SuperOffice.Diagnostics
  fullName: SuperOffice.Diagnostics
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Diagnostics
    name: Diagnostics
    isExternal: true
    href: SuperOffice.Diagnostics.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Diagnostics
    name: Diagnostics
    isExternal: true
    href: SuperOffice.Diagnostics.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.Diagnostics.WorkList.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<WorkList, To>(WorkList)
  nameWithType: EnumUtil.MapEnums<WorkList, To>(WorkList)
  fullName: EnumUtil.MapEnums<SuperOffice.Diagnostics.WorkList, To>(SuperOffice.Diagnostics.WorkList)
  nameWithType.vb: EnumUtil.MapEnums(Of WorkList, To)(WorkList)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Diagnostics.WorkList, To)(SuperOffice.Diagnostics.WorkList)
  name.vb: MapEnums(Of WorkList, To)(WorkList)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Diagnostics.WorkList)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Diagnostics.WorkList)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: )
- uid: SuperOffice.Diagnostics.WorkList.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<WorkList, To>(WorkList)
  nameWithType: Converters.MapEnums<WorkList, To>(WorkList)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Diagnostics.WorkList, To>(SuperOffice.Diagnostics.WorkList)
  nameWithType.vb: Converters.MapEnums(Of WorkList, To)(WorkList)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Diagnostics.WorkList, To)(SuperOffice.Diagnostics.WorkList)
  name.vb: MapEnums(Of WorkList, To)(WorkList)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Diagnostics.WorkList)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Diagnostics.WorkList)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: )
- uid: SuperOffice.Diagnostics.WorkList.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Diagnostics.WorkList)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<WorkList>(WorkList, WorkList)
  nameWithType: ObjectExtensions.AssignByReflection<WorkList>(WorkList, WorkList)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Diagnostics.WorkList>(SuperOffice.Diagnostics.WorkList, SuperOffice.Diagnostics.WorkList)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of WorkList)(WorkList, WorkList)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Diagnostics.WorkList)(SuperOffice.Diagnostics.WorkList, SuperOffice.Diagnostics.WorkList)
  name.vb: AssignByReflection(Of WorkList)(WorkList, WorkList)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Diagnostics.WorkList,SuperOffice.Diagnostics.WorkList)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: '>'
  - name: (
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Diagnostics.WorkList,SuperOffice.Diagnostics.WorkList)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: )
  - name: (
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: )
- uid: SuperOffice.Diagnostics.WorkList.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<WorkList>(WorkList)
  nameWithType: ObjectExtensions.GraphCopy<WorkList>(WorkList)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Diagnostics.WorkList>(SuperOffice.Diagnostics.WorkList)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of WorkList)(WorkList)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Diagnostics.WorkList)(SuperOffice.Diagnostics.WorkList)
  name.vb: GraphCopy(Of WorkList)(WorkList)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.Diagnostics.WorkList)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: '>'
  - name: (
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.Diagnostics.WorkList)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: )
  - name: (
  - uid: SuperOffice.Diagnostics.WorkList
    name: WorkList
    isExternal: true
    href: SuperOffice.Diagnostics.WorkList.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: SuperOffice.Diagnostics.WorkList.#ctor*
  commentId: Overload:SuperOffice.Diagnostics.WorkList.#ctor
  isExternal: true
  href: SuperOffice.Diagnostics.WorkList.html#SuperOffice_Diagnostics_WorkList__ctor
  name: WorkList
  nameWithType: WorkList.WorkList
  fullName: SuperOffice.Diagnostics.WorkList.WorkList
  nameWithType.vb: WorkList.New
  fullName.vb: SuperOffice.Diagnostics.WorkList.New
  name.vb: New
- uid: SuperOffice.Diagnostics.WorkList.ListName*
  commentId: Overload:SuperOffice.Diagnostics.WorkList.ListName
  isExternal: true
  href: SuperOffice.Diagnostics.WorkList.html#SuperOffice_Diagnostics_WorkList_ListName
  name: ListName
  nameWithType: WorkList.ListName
  fullName: SuperOffice.Diagnostics.WorkList.ListName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Diagnostics.WorkList.ColumnNames*
  commentId: Overload:SuperOffice.Diagnostics.WorkList.ColumnNames
  isExternal: true
  href: SuperOffice.Diagnostics.WorkList.html#SuperOffice_Diagnostics_WorkList_ColumnNames
  name: ColumnNames
  nameWithType: WorkList.ColumnNames
  fullName: SuperOffice.Diagnostics.WorkList.ColumnNames
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SuperOffice.Diagnostics.WorkList.ColumnTypes*
  commentId: Overload:SuperOffice.Diagnostics.WorkList.ColumnTypes
  isExternal: true
  href: SuperOffice.Diagnostics.WorkList.html#SuperOffice_Diagnostics_WorkList_ColumnTypes
  name: ColumnTypes
  nameWithType: WorkList.ColumnTypes
  fullName: SuperOffice.Diagnostics.WorkList.ColumnTypes
- uid: SuperOffice.Diagnostics.WorkList.Rows*
  commentId: Overload:SuperOffice.Diagnostics.WorkList.Rows
  isExternal: true
  href: SuperOffice.Diagnostics.WorkList.html#SuperOffice_Diagnostics_WorkList_Rows
  name: Rows
  nameWithType: WorkList.Rows
  fullName: SuperOffice.Diagnostics.WorkList.Rows
- uid: System.Collections.Generic.List{SuperOffice.Diagnostics.WorkRow}
  commentId: T:System.Collections.Generic.List{SuperOffice.Diagnostics.WorkRow}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<WorkRow>
  nameWithType: List<WorkRow>
  fullName: System.Collections.Generic.List<SuperOffice.Diagnostics.WorkRow>
  nameWithType.vb: List(Of WorkRow)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.Diagnostics.WorkRow)
  name.vb: List(Of WorkRow)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: SuperOffice.Diagnostics.WorkRow
    name: WorkRow
    isExternal: true
    href: SuperOffice.Diagnostics.WorkRow.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Diagnostics.WorkRow
    name: WorkRow
    isExternal: true
    href: SuperOffice.Diagnostics.WorkRow.html
  - name: )
