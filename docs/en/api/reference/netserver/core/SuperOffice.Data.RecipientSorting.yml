### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.RecipientSorting
  commentId: T:SuperOffice.Data.RecipientSorting
  id: RecipientSorting
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.RecipientSorting.CompanyName
  - SuperOffice.Data.RecipientSorting.CompanyNumber
  - SuperOffice.Data.RecipientSorting.CountryZipCode
  - SuperOffice.Data.RecipientSorting.None
  - SuperOffice.Data.RecipientSorting.PersonLastname
  langs:
  - csharp
  - vb
  name: RecipientSorting
  nameWithType: RecipientSorting
  fullName: SuperOffice.Data.RecipientSorting
  type: Enum
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\nThe different types of recipient sorting available\nThis Enum is used by:  s_shipment.sorting\n"
  syntax:
    content: 'public enum RecipientSorting : short'
    content.vb: Public Enum RecipientSorting As Short
  extensionMethods:
  - SuperOffice.Data.RecipientSorting.EnumUtil.MapEnums``2
  - SuperOffice.Data.RecipientSorting.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.RecipientSorting)
  - SuperOffice.Data.RecipientSorting.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.RecipientSorting.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: SuperOffice.Data.RecipientSorting.None
  commentId: F:SuperOffice.Data.RecipientSorting.None
  id: None
  parent: SuperOffice.Data.RecipientSorting
  langs:
  - csharp
  - vb
  name: None
  nameWithType: RecipientSorting.None
  fullName: SuperOffice.Data.RecipientSorting.None
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n0: No sorting\n"
  syntax:
    content: None = 0
    return:
      type: SuperOffice.Data.RecipientSorting
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.RecipientSorting.CountryZipCode
  commentId: F:SuperOffice.Data.RecipientSorting.CountryZipCode
  id: CountryZipCode
  parent: SuperOffice.Data.RecipientSorting
  langs:
  - csharp
  - vb
  name: CountryZipCode
  nameWithType: RecipientSorting.CountryZipCode
  fullName: SuperOffice.Data.RecipientSorting.CountryZipCode
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n1: Sort by country and zip code\n"
  syntax:
    content: CountryZipCode = 1
    return:
      type: SuperOffice.Data.RecipientSorting
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.RecipientSorting.CompanyName
  commentId: F:SuperOffice.Data.RecipientSorting.CompanyName
  id: CompanyName
  parent: SuperOffice.Data.RecipientSorting
  langs:
  - csharp
  - vb
  name: CompanyName
  nameWithType: RecipientSorting.CompanyName
  fullName: SuperOffice.Data.RecipientSorting.CompanyName
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n2: Sort by company name\n"
  syntax:
    content: CompanyName = 2
    return:
      type: SuperOffice.Data.RecipientSorting
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.RecipientSorting.CompanyNumber
  commentId: F:SuperOffice.Data.RecipientSorting.CompanyNumber
  id: CompanyNumber
  parent: SuperOffice.Data.RecipientSorting
  langs:
  - csharp
  - vb
  name: CompanyNumber
  nameWithType: RecipientSorting.CompanyNumber
  fullName: SuperOffice.Data.RecipientSorting.CompanyNumber
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n3: Sort by company number\n"
  syntax:
    content: CompanyNumber = 3
    return:
      type: SuperOffice.Data.RecipientSorting
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.RecipientSorting.PersonLastname
  commentId: F:SuperOffice.Data.RecipientSorting.PersonLastname
  id: PersonLastname
  parent: SuperOffice.Data.RecipientSorting
  langs:
  - csharp
  - vb
  name: PersonLastname
  nameWithType: RecipientSorting.PersonLastname
  fullName: SuperOffice.Data.RecipientSorting.PersonLastname
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n4: Sort by person last name\n"
  syntax:
    content: PersonLastname = 4
    return:
      type: SuperOffice.Data.RecipientSorting
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Data.RecipientSorting.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<RecipientSorting, To>()
  nameWithType: EnumUtil.MapEnums<RecipientSorting, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.RecipientSorting, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of RecipientSorting, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.RecipientSorting, To)()
  name.vb: MapEnums(Of RecipientSorting, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<RecipientSorting, To>
    nameWithType: EnumUtil.MapEnums<RecipientSorting, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.RecipientSorting, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of RecipientSorting, To)
    nameWithType: EnumUtil.MapEnums(Of RecipientSorting, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.RecipientSorting, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.RecipientSorting.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.RecipientSorting)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<RecipientSorting>(RecipientSorting)
  nameWithType: ObjectExtensions.AssignByReflection<RecipientSorting>(RecipientSorting)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.RecipientSorting>(SuperOffice.Data.RecipientSorting)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of RecipientSorting)(RecipientSorting)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.RecipientSorting)(SuperOffice.Data.RecipientSorting)
  name.vb: AssignByReflection(Of RecipientSorting)(RecipientSorting)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<RecipientSorting>
    nameWithType: ObjectExtensions.AssignByReflection<RecipientSorting>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.RecipientSorting>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.RecipientSorting
    name: RecipientSorting
    nameWithType: RecipientSorting
    fullName: SuperOffice.Data.RecipientSorting
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of RecipientSorting)
    nameWithType: ObjectExtensions.AssignByReflection(Of RecipientSorting)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.RecipientSorting)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.RecipientSorting
    name: RecipientSorting
    nameWithType: RecipientSorting
    fullName: SuperOffice.Data.RecipientSorting
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.RecipientSorting.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<RecipientSorting>()
  nameWithType: ObjectExtensions.GraphCopy<RecipientSorting>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.RecipientSorting>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of RecipientSorting)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.RecipientSorting)()
  name.vb: GraphCopy(Of RecipientSorting)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<RecipientSorting>
    nameWithType: ObjectExtensions.GraphCopy<RecipientSorting>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.RecipientSorting>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of RecipientSorting)
    nameWithType: ObjectExtensions.GraphCopy(Of RecipientSorting)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.RecipientSorting)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.RecipientSorting.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<RecipientSorting, To>()
  nameWithType: Converters.MapEnums<RecipientSorting, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.RecipientSorting, To>()
  nameWithType.vb: Converters.MapEnums(Of RecipientSorting, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.RecipientSorting, To)()
  name.vb: MapEnums(Of RecipientSorting, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<RecipientSorting, To>
    nameWithType: Converters.MapEnums<RecipientSorting, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.RecipientSorting, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of RecipientSorting, To)
    nameWithType: Converters.MapEnums(Of RecipientSorting, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.RecipientSorting, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.RecipientSorting
  commentId: T:SuperOffice.Data.RecipientSorting
  parent: SuperOffice.Data
  isExternal: true
  name: RecipientSorting
  nameWithType: RecipientSorting
  fullName: SuperOffice.Data.RecipientSorting
