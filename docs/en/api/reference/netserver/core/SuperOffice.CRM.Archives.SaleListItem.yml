### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Archives.SaleListItem
  commentId: T:SuperOffice.CRM.Archives.SaleListItem
  id: SaleListItem
  parent: SuperOffice.CRM.Archives
  children:
  - SuperOffice.CRM.Archives.SaleListItem.#ctor(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader)
  - SuperOffice.CRM.Archives.SaleListItem.Amount
  - SuperOffice.CRM.Archives.SaleListItem.AssociateFullName
  - SuperOffice.CRM.Archives.SaleListItem.AssociateId
  - SuperOffice.CRM.Archives.SaleListItem.Completed
  - SuperOffice.CRM.Archives.SaleListItem.Contact
  - SuperOffice.CRM.Archives.SaleListItem.ContactId
  - SuperOffice.CRM.Archives.SaleListItem.Currency
  - SuperOffice.CRM.Archives.SaleListItem.Description
  - SuperOffice.CRM.Archives.SaleListItem.Earning
  - SuperOffice.CRM.Archives.SaleListItem.EarningPercent
  - SuperOffice.CRM.Archives.SaleListItem.GetSaleListItem(System.Int32)
  - SuperOffice.CRM.Archives.SaleListItem.Initialize
  - SuperOffice.CRM.Archives.SaleListItem.Load(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader)
  - SuperOffice.CRM.Archives.SaleListItem.Number
  - SuperOffice.CRM.Archives.SaleListItem.PersonFullName
  - SuperOffice.CRM.Archives.SaleListItem.PersonId
  - SuperOffice.CRM.Archives.SaleListItem.Probability
  - SuperOffice.CRM.Archives.SaleListItem.Project
  - SuperOffice.CRM.Archives.SaleListItem.ProjectId
  - SuperOffice.CRM.Archives.SaleListItem.SaleDate
  - SuperOffice.CRM.Archives.SaleListItem.SaleId
  - SuperOffice.CRM.Archives.SaleListItem.SaleTypeId
  - SuperOffice.CRM.Archives.SaleListItem.SaleTypeName
  - SuperOffice.CRM.Archives.SaleListItem.Status
  - SuperOffice.CRM.Archives.SaleListItem.Title
  - SuperOffice.CRM.Archives.SaleListItem.WeightedAmount
  langs:
  - csharp
  - vb
  name: SaleListItem
  nameWithType: SaleListItem
  fullName: SuperOffice.CRM.Archives.SaleListItem
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nPersonListItem contains the attributes for the person list item used in PersonList.\n"
  syntax:
    content: 'public sealed class SaleListItem : ListItemBase<SaleList.SaleListQuery>'
    content.vb: >-
      Public NotInheritable Class SaleListItem
          Inherits ListItemBase(Of SaleList.SaleListQuery)
  inheritance:
  - System.Object
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}
  inheritedMembers:
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,{T}@,System.String)
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.TableRight
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.FieldProperties
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Archives.SaleListItem.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Archives.SaleListItem.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.Archives.SaleListItem.#ctor(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Archives.SaleListItem.#ctor(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader)
  id: '#ctor(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader)'
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: SaleListItem(SaleList.SaleListQuery, SoDataReader)
  nameWithType: SaleListItem.SaleListItem(SaleList.SaleListQuery, SoDataReader)
  fullName: SuperOffice.CRM.Archives.SaleListItem.SaleListItem(SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.Data.SoDataReader)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nDefault constructor\n"
  syntax:
    content: public SaleListItem(SaleList.SaleListQuery query, SoDataReader reader)
    parameters:
    - id: query
      type: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    - id: reader
      type: SuperOffice.Data.SoDataReader
    content.vb: Public Sub New(query As SaleList.SaleListQuery, reader As SoDataReader)
  overload: SuperOffice.CRM.Archives.SaleListItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Archives.SaleListItem.GetSaleListItem(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.SaleListItem.GetSaleListItem(System.Int32)
  id: GetSaleListItem(System.Int32)
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: GetSaleListItem(Int32)
  nameWithType: SaleListItem.GetSaleListItem(Int32)
  fullName: SuperOffice.CRM.Archives.SaleListItem.GetSaleListItem(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public static SaleListItem GetSaleListItem(int saleId)
    parameters:
    - id: saleId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Archives.SaleListItem
    content.vb: Public Shared Function GetSaleListItem(saleId As Integer) As SaleListItem
  overload: SuperOffice.CRM.Archives.SaleListItem.GetSaleListItem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Archives.SaleListItem.Initialize
  commentId: M:SuperOffice.CRM.Archives.SaleListItem.Initialize
  id: Initialize
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: SaleListItem.Initialize()
  fullName: SuperOffice.CRM.Archives.SaleListItem.Initialize()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nInitializes all class-members.\n"
  syntax:
    content: protected override void Initialize()
    content.vb: Protected Overrides Sub Initialize
  overridden: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.Initialize
  overload: SuperOffice.CRM.Archives.SaleListItem.Initialize*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Archives.SaleListItem.Load(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Archives.SaleListItem.Load(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader)
  id: Load(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: Load(SaleList.SaleListQuery, SoDataReader)
  nameWithType: SaleListItem.Load(SaleList.SaleListQuery, SoDataReader)
  fullName: SuperOffice.CRM.Archives.SaleListItem.Load(SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.Data.SoDataReader)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nResponsible for reading the current row in the data reader and insert the value in the right part ob the object.\n"
  syntax:
    content: protected override void Load(SaleList.SaleListQuery query, SoDataReader reader)
    parameters:
    - id: query
      type: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: The reader contains the items data.
    content.vb: Protected Overrides Sub Load(query As SaleList.SaleListQuery, reader As SoDataReader)
  overridden: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.Load(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader)
  overload: SuperOffice.CRM.Archives.SaleListItem.Load*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Archives.SaleListItem.SaleId
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.SaleId
  id: SaleId
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: SaleId
  nameWithType: SaleListItem.SaleId
  fullName: SuperOffice.CRM.Archives.SaleListItem.SaleId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe unique identifier for the contact\n"
  syntax:
    content: public int SaleId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SaleId As Integer
  overload: SuperOffice.CRM.Archives.SaleListItem.SaleId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.Description
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.Description
  id: Description
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: SaleListItem.Description
  fullName: SuperOffice.CRM.Archives.SaleListItem.Description
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe name of the contact\n"
  syntax:
    content: public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Description As String
  overload: SuperOffice.CRM.Archives.SaleListItem.Description*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.Contact
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.Contact
  id: Contact
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: Contact
  nameWithType: SaleListItem.Contact
  fullName: SuperOffice.CRM.Archives.SaleListItem.Contact
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe contact&apos;s department\n"
  syntax:
    content: public string Contact { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Contact As String
  overload: SuperOffice.CRM.Archives.SaleListItem.Contact*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.PersonId
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.PersonId
  id: PersonId
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: PersonId
  nameWithType: SaleListItem.PersonId
  fullName: SuperOffice.CRM.Archives.SaleListItem.PersonId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nId of the sale person\n"
  syntax:
    content: public int PersonId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PersonId As Integer
  overload: SuperOffice.CRM.Archives.SaleListItem.PersonId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.PersonFullName
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.PersonFullName
  id: PersonFullName
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: PersonFullName
  nameWithType: SaleListItem.PersonFullName
  fullName: SuperOffice.CRM.Archives.SaleListItem.PersonFullName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe person&apos;s fullname (firsname, middlename, lastname) culture formatted\n"
  syntax:
    content: public string PersonFullName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PersonFullName As String
  overload: SuperOffice.CRM.Archives.SaleListItem.PersonFullName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.AssociateId
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.AssociateId
  id: AssociateId
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: AssociateId
  nameWithType: SaleListItem.AssociateId
  fullName: SuperOffice.CRM.Archives.SaleListItem.AssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe associate id\n"
  syntax:
    content: public int AssociateId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property AssociateId As Integer
  overload: SuperOffice.CRM.Archives.SaleListItem.AssociateId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.AssociateFullName
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.AssociateFullName
  id: AssociateFullName
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: AssociateFullName
  nameWithType: SaleListItem.AssociateFullName
  fullName: SuperOffice.CRM.Archives.SaleListItem.AssociateFullName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe associates&apos;s fullname (firsname, middlename, lastname) culture formatted\n"
  syntax:
    content: public string AssociateFullName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property AssociateFullName As String
  overload: SuperOffice.CRM.Archives.SaleListItem.AssociateFullName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.Amount
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.Amount
  id: Amount
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: SaleListItem.Amount
  fullName: SuperOffice.CRM.Archives.SaleListItem.Amount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe amount\n"
  syntax:
    content: public double Amount { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Amount As Double
  overload: SuperOffice.CRM.Archives.SaleListItem.Amount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.Currency
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.Currency
  id: Currency
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: Currency
  nameWithType: SaleListItem.Currency
  fullName: SuperOffice.CRM.Archives.SaleListItem.Currency
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe currency\n"
  syntax:
    content: public string Currency { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Currency As String
  overload: SuperOffice.CRM.Archives.SaleListItem.Currency*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.Probability
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.Probability
  id: Probability
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: Probability
  nameWithType: SaleListItem.Probability
  fullName: SuperOffice.CRM.Archives.SaleListItem.Probability
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe Probability\n"
  syntax:
    content: public short Probability { get; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public ReadOnly Property Probability As Short
  overload: SuperOffice.CRM.Archives.SaleListItem.Probability*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.Project
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.Project
  id: Project
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: Project
  nameWithType: SaleListItem.Project
  fullName: SuperOffice.CRM.Archives.SaleListItem.Project
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe project\n"
  syntax:
    content: public string Project { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Project As String
  overload: SuperOffice.CRM.Archives.SaleListItem.Project*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.SaleDate
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.SaleDate
  id: SaleDate
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: SaleDate
  nameWithType: SaleListItem.SaleDate
  fullName: SuperOffice.CRM.Archives.SaleListItem.SaleDate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe Saledate\n"
  syntax:
    content: public DateTime SaleDate { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property SaleDate As Date
  overload: SuperOffice.CRM.Archives.SaleListItem.SaleDate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.Status
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.Status
  id: Status
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: SaleListItem.Status
  fullName: SuperOffice.CRM.Archives.SaleListItem.Status
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe status\n"
  syntax:
    content: public SaleStatus Status { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SaleStatus
    content.vb: Public ReadOnly Property Status As SaleStatus
  overload: SuperOffice.CRM.Archives.SaleListItem.Status*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.Title
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.Title
  id: Title
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: SaleListItem.Title
  fullName: SuperOffice.CRM.Archives.SaleListItem.Title
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe title\n"
  syntax:
    content: public string Title { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Title As String
  overload: SuperOffice.CRM.Archives.SaleListItem.Title*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.WeightedAmount
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.WeightedAmount
  id: WeightedAmount
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: WeightedAmount
  nameWithType: SaleListItem.WeightedAmount
  fullName: SuperOffice.CRM.Archives.SaleListItem.WeightedAmount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe weighted amount\n"
  syntax:
    content: public double WeightedAmount { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property WeightedAmount As Double
  overload: SuperOffice.CRM.Archives.SaleListItem.WeightedAmount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.ContactId
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.ContactId
  id: ContactId
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: ContactId
  nameWithType: SaleListItem.ContactId
  fullName: SuperOffice.CRM.Archives.SaleListItem.ContactId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe contact id\n"
  syntax:
    content: public int ContactId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ContactId As Integer
  overload: SuperOffice.CRM.Archives.SaleListItem.ContactId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.ProjectId
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.ProjectId
  id: ProjectId
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: SaleListItem.ProjectId
  fullName: SuperOffice.CRM.Archives.SaleListItem.ProjectId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe project id\n"
  syntax:
    content: public int ProjectId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ProjectId As Integer
  overload: SuperOffice.CRM.Archives.SaleListItem.ProjectId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.Earning
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.Earning
  id: Earning
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: Earning
  nameWithType: SaleListItem.Earning
  fullName: SuperOffice.CRM.Archives.SaleListItem.Earning
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe earning\n"
  syntax:
    content: public double Earning { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Earning As Double
  overload: SuperOffice.CRM.Archives.SaleListItem.Earning*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.EarningPercent
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.EarningPercent
  id: EarningPercent
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: EarningPercent
  nameWithType: SaleListItem.EarningPercent
  fullName: SuperOffice.CRM.Archives.SaleListItem.EarningPercent
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe earning in percent\n"
  syntax:
    content: public double EarningPercent { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property EarningPercent As Double
  overload: SuperOffice.CRM.Archives.SaleListItem.EarningPercent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.SaleTypeId
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.SaleTypeId
  id: SaleTypeId
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: SaleTypeId
  nameWithType: SaleListItem.SaleTypeId
  fullName: SuperOffice.CRM.Archives.SaleListItem.SaleTypeId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe saletype id\n"
  syntax:
    content: public int SaleTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SaleTypeId As Integer
  overload: SuperOffice.CRM.Archives.SaleListItem.SaleTypeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.SaleTypeName
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.SaleTypeName
  id: SaleTypeName
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: SaleTypeName
  nameWithType: SaleListItem.SaleTypeName
  fullName: SuperOffice.CRM.Archives.SaleListItem.SaleTypeName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe saletype id\n"
  syntax:
    content: public string SaleTypeName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SaleTypeName As String
  overload: SuperOffice.CRM.Archives.SaleListItem.SaleTypeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.Completed
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.Completed
  id: Completed
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: Completed
  nameWithType: SaleListItem.Completed
  fullName: SuperOffice.CRM.Archives.SaleListItem.Completed
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nThe saletype id\n"
  syntax:
    content: public short Completed { get; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public ReadOnly Property Completed As Short
  overload: SuperOffice.CRM.Archives.SaleListItem.Completed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.SaleListItem.Number
  commentId: P:SuperOffice.CRM.Archives.SaleListItem.Number
  id: Number
  parent: SuperOffice.CRM.Archives.SaleListItem
  langs:
  - csharp
  - vb
  name: Number
  nameWithType: SaleListItem.Number
  fullName: SuperOffice.CRM.Archives.SaleListItem.Number
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public string Number { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Number As String
  overload: SuperOffice.CRM.Archives.SaleListItem.Number*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Archives
  commentId: N:SuperOffice.CRM.Archives
  isExternal: true
  name: SuperOffice.CRM.Archives
  nameWithType: SuperOffice.CRM.Archives
  fullName: SuperOffice.CRM.Archives
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}
  commentId: T:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}
  parent: SuperOffice.CRM.Lists
  definition: SuperOffice.CRM.Lists.ListItemBase`1
  name: ListItemBase<SaleList.SaleListQuery>
  nameWithType: ListItemBase<SaleList.SaleListQuery>
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>
  nameWithType.vb: ListItemBase(Of SaleList.SaleListQuery)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery)
  name.vb: ListItemBase(Of SaleList.SaleListQuery)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1
    name: ListItemBase
    nameWithType: ListItemBase
    fullName: SuperOffice.CRM.Lists.ListItemBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    name: SaleList.SaleListQuery
    nameWithType: SaleList.SaleListQuery
    fullName: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1
    name: ListItemBase
    nameWithType: ListItemBase
    fullName: SuperOffice.CRM.Lists.ListItemBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    name: SaleList.SaleListQuery
    nameWithType: SaleList.SaleListQuery
    fullName: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
  name: AddFieldProperty(String, FieldProperty)
  nameWithType: ListItemBase<SaleList.SaleListQuery>.AddFieldProperty(String, FieldProperty)
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.AddFieldProperty(System.String, SuperOffice.CRM.Security.FieldProperty)
  nameWithType.vb: ListItemBase(Of SaleList.SaleListQuery).AddFieldProperty(String, FieldProperty)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).AddFieldProperty(System.String, SuperOffice.CRM.Security.FieldProperty)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
    name: AddFieldProperty
    nameWithType: ListItemBase<SaleList.SaleListQuery>.AddFieldProperty
    fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.AddFieldProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.FieldProperty
    name: FieldProperty
    nameWithType: FieldProperty
    fullName: SuperOffice.CRM.Security.FieldProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
    name: AddFieldProperty
    nameWithType: ListItemBase(Of SaleList.SaleListQuery).AddFieldProperty
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).AddFieldProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.FieldProperty
    name: FieldProperty
    nameWithType: FieldProperty
    fullName: SuperOffice.CRM.Security.FieldProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
  name: HandleFieldRights(String, SentryCollection, FieldInfo, Type, EFieldRight, Boolean)
  nameWithType: ListItemBase<SaleList.SaleListQuery>.HandleFieldRights(String, SentryCollection, FieldInfo, Type, EFieldRight, Boolean)
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.HandleFieldRights(System.String, SuperOffice.CRM.Security.SentryCollection, SuperOffice.Data.SQL.FieldInfo, System.Type, SuperOffice.Data.EFieldRight, System.Boolean)
  nameWithType.vb: ListItemBase(Of SaleList.SaleListQuery).HandleFieldRights(String, SentryCollection, FieldInfo, Type, EFieldRight, Boolean)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).HandleFieldRights(System.String, SuperOffice.CRM.Security.SentryCollection, SuperOffice.Data.SQL.FieldInfo, System.Type, SuperOffice.Data.EFieldRight, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
    name: HandleFieldRights
    nameWithType: ListItemBase<SaleList.SaleListQuery>.HandleFieldRights
    fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.HandleFieldRights
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.SentryCollection
    name: SentryCollection
    nameWithType: SentryCollection
    fullName: SuperOffice.CRM.Security.SentryCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.EFieldRight
    name: EFieldRight
    nameWithType: EFieldRight
    fullName: SuperOffice.Data.EFieldRight
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
    name: HandleFieldRights
    nameWithType: ListItemBase(Of SaleList.SaleListQuery).HandleFieldRights
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).HandleFieldRights
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.SentryCollection
    name: SentryCollection
    nameWithType: SentryCollection
    fullName: SuperOffice.CRM.Security.SentryCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.EFieldRight
    name: EFieldRight
    nameWithType: EFieldRight
    fullName: SuperOffice.Data.EFieldRight
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
  name: AssignFromReader(SoDataReader, FieldInfo, Int32, String)
  nameWithType: ListItemBase<SaleList.SaleListQuery>.AssignFromReader(SoDataReader, FieldInfo, Int32, String)
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.Int32, System.String)
  nameWithType.vb: ListItemBase(Of SaleList.SaleListQuery).AssignFromReader(SoDataReader, FieldInfo, Int32, String)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.Int32, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase<SaleList.SaleListQuery>.AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase(Of SaleList.SaleListQuery).AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
  name: AssignFromReader(SoDataReader, FieldInfo, String, String)
  nameWithType: ListItemBase<SaleList.SaleListQuery>.AssignFromReader(SoDataReader, FieldInfo, String, String)
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.String, System.String)
  nameWithType.vb: ListItemBase(Of SaleList.SaleListQuery).AssignFromReader(SoDataReader, FieldInfo, String, String)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.String, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase<SaleList.SaleListQuery>.AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase(Of SaleList.SaleListQuery).AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,{T}@,System.String)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
  name: AssignFromReader<T>(SoDataReader, FieldInfo, T, String)
  nameWithType: ListItemBase<SaleList.SaleListQuery>.AssignFromReader<T>(SoDataReader, FieldInfo, T, String)
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.AssignFromReader<T>(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, T, System.String)
  nameWithType.vb: ListItemBase(Of SaleList.SaleListQuery).AssignFromReader(Of T)(SoDataReader, FieldInfo, T, String)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).AssignFromReader(Of T)(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, T, System.String)
  name.vb: AssignFromReader(Of T)(SoDataReader, FieldInfo, T, String)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
    name: AssignFromReader<T>
    nameWithType: ListItemBase<SaleList.SaleListQuery>.AssignFromReader<T>
    fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.AssignFromReader<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
    name: AssignFromReader(Of T)
    nameWithType: ListItemBase(Of SaleList.SaleListQuery).AssignFromReader(Of T)
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).AssignFromReader(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.TableRight
  commentId: P:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.TableRight
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.TableRight
  name: TableRight
  nameWithType: ListItemBase<SaleList.SaleListQuery>.TableRight
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.TableRight
  nameWithType.vb: ListItemBase(Of SaleList.SaleListQuery).TableRight
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).TableRight
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.FieldProperties
  commentId: P:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.FieldProperties
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.FieldProperties
  name: FieldProperties
  nameWithType: ListItemBase<SaleList.SaleListQuery>.FieldProperties
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.FieldProperties
  nameWithType.vb: ListItemBase(Of SaleList.SaleListQuery).FieldProperties
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).FieldProperties
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Archives.SaleListItem.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SaleListItem, To>()
  nameWithType: EnumUtil.MapEnums<SaleListItem, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Archives.SaleListItem, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SaleListItem, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Archives.SaleListItem, To)()
  name.vb: MapEnums(Of SaleListItem, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SaleListItem, To>
    nameWithType: EnumUtil.MapEnums<SaleListItem, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Archives.SaleListItem, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SaleListItem, To)
    nameWithType: EnumUtil.MapEnums(Of SaleListItem, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Archives.SaleListItem, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Archives.SaleListItem.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SaleListItem, To>()
  nameWithType: Converters.MapEnums<SaleListItem, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Archives.SaleListItem, To>()
  nameWithType.vb: Converters.MapEnums(Of SaleListItem, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Archives.SaleListItem, To)()
  name.vb: MapEnums(Of SaleListItem, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SaleListItem, To>
    nameWithType: Converters.MapEnums<SaleListItem, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Archives.SaleListItem, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SaleListItem, To)
    nameWithType: Converters.MapEnums(Of SaleListItem, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Archives.SaleListItem, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Lists.ListItemBase`1
  commentId: T:SuperOffice.CRM.Lists.ListItemBase`1
  isExternal: true
  name: ListItemBase<TListSelect>
  nameWithType: ListItemBase<TListSelect>
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>
  nameWithType.vb: ListItemBase(Of TListSelect)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect)
  name.vb: ListItemBase(Of TListSelect)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1
    name: ListItemBase
    nameWithType: ListItemBase
    fullName: SuperOffice.CRM.Lists.ListItemBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1
    name: ListItemBase
    nameWithType: ListItemBase
    fullName: SuperOffice.CRM.Lists.ListItemBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists
  commentId: N:SuperOffice.CRM.Lists
  isExternal: true
  name: SuperOffice.CRM.Lists
  nameWithType: SuperOffice.CRM.Lists
  fullName: SuperOffice.CRM.Lists
- uid: SuperOffice.CRM.Lists.ListItemBase`1.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase`1.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
  isExternal: true
  name: AddFieldProperty(String, FieldProperty)
  nameWithType: ListItemBase<TListSelect>.AddFieldProperty(String, FieldProperty)
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AddFieldProperty(System.String, SuperOffice.CRM.Security.FieldProperty)
  nameWithType.vb: ListItemBase(Of TListSelect).AddFieldProperty(String, FieldProperty)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AddFieldProperty(System.String, SuperOffice.CRM.Security.FieldProperty)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
    name: AddFieldProperty
    nameWithType: ListItemBase<TListSelect>.AddFieldProperty
    fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AddFieldProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.FieldProperty
    name: FieldProperty
    nameWithType: FieldProperty
    fullName: SuperOffice.CRM.Security.FieldProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
    name: AddFieldProperty
    nameWithType: ListItemBase(Of TListSelect).AddFieldProperty
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AddFieldProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.FieldProperty
    name: FieldProperty
    nameWithType: FieldProperty
    fullName: SuperOffice.CRM.Security.FieldProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase`1.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase`1.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
  isExternal: true
  name: HandleFieldRights(String, SentryCollection, FieldInfo, Type, EFieldRight, Boolean)
  nameWithType: ListItemBase<TListSelect>.HandleFieldRights(String, SentryCollection, FieldInfo, Type, EFieldRight, Boolean)
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.HandleFieldRights(System.String, SuperOffice.CRM.Security.SentryCollection, SuperOffice.Data.SQL.FieldInfo, System.Type, SuperOffice.Data.EFieldRight, System.Boolean)
  nameWithType.vb: ListItemBase(Of TListSelect).HandleFieldRights(String, SentryCollection, FieldInfo, Type, EFieldRight, Boolean)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).HandleFieldRights(System.String, SuperOffice.CRM.Security.SentryCollection, SuperOffice.Data.SQL.FieldInfo, System.Type, SuperOffice.Data.EFieldRight, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
    name: HandleFieldRights
    nameWithType: ListItemBase<TListSelect>.HandleFieldRights
    fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.HandleFieldRights
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.SentryCollection
    name: SentryCollection
    nameWithType: SentryCollection
    fullName: SuperOffice.CRM.Security.SentryCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.EFieldRight
    name: EFieldRight
    nameWithType: EFieldRight
    fullName: SuperOffice.Data.EFieldRight
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
    name: HandleFieldRights
    nameWithType: ListItemBase(Of TListSelect).HandleFieldRights
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).HandleFieldRights
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.SentryCollection
    name: SentryCollection
    nameWithType: SentryCollection
    fullName: SuperOffice.CRM.Security.SentryCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.EFieldRight
    name: EFieldRight
    nameWithType: EFieldRight
    fullName: SuperOffice.Data.EFieldRight
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
  isExternal: true
  name: AssignFromReader(SoDataReader, FieldInfo, Int32, String)
  nameWithType: ListItemBase<TListSelect>.AssignFromReader(SoDataReader, FieldInfo, Int32, String)
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.Int32, System.String)
  nameWithType.vb: ListItemBase(Of TListSelect).AssignFromReader(SoDataReader, FieldInfo, Int32, String)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.Int32, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase<TListSelect>.AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase(Of TListSelect).AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
  isExternal: true
  name: AssignFromReader(SoDataReader, FieldInfo, String, String)
  nameWithType: ListItemBase<TListSelect>.AssignFromReader(SoDataReader, FieldInfo, String, String)
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.String, System.String)
  nameWithType.vb: ListItemBase(Of TListSelect).AssignFromReader(SoDataReader, FieldInfo, String, String)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.String, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase<TListSelect>.AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase(Of TListSelect).AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
  isExternal: true
  name: AssignFromReader<T>(SoDataReader, FieldInfo, T, String)
  nameWithType: ListItemBase<TListSelect>.AssignFromReader<T>(SoDataReader, FieldInfo, T, String)
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AssignFromReader<T>(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, T, System.String)
  nameWithType.vb: ListItemBase(Of TListSelect).AssignFromReader(Of T)(SoDataReader, FieldInfo, T, String)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AssignFromReader(Of T)(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, T, System.String)
  name.vb: AssignFromReader(Of T)(SoDataReader, FieldInfo, T, String)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
    name: AssignFromReader<T>
    nameWithType: ListItemBase<TListSelect>.AssignFromReader<T>
    fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AssignFromReader<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
    name: AssignFromReader(Of T)
    nameWithType: ListItemBase(Of TListSelect).AssignFromReader(Of T)
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AssignFromReader(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase`1.TableRight
  commentId: P:SuperOffice.CRM.Lists.ListItemBase`1.TableRight
  isExternal: true
  name: TableRight
  nameWithType: ListItemBase<TListSelect>.TableRight
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.TableRight
  nameWithType.vb: ListItemBase(Of TListSelect).TableRight
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).TableRight
- uid: SuperOffice.CRM.Lists.ListItemBase`1.FieldProperties
  commentId: P:SuperOffice.CRM.Lists.ListItemBase`1.FieldProperties
  isExternal: true
  name: FieldProperties
  nameWithType: ListItemBase<TListSelect>.FieldProperties
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.FieldProperties
  nameWithType.vb: ListItemBase(Of TListSelect).FieldProperties
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).FieldProperties
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Archives.SaleListItem.#ctor*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.#ctor
  isExternal: true
  name: SaleListItem
  nameWithType: SaleListItem.SaleListItem
  fullName: SuperOffice.CRM.Archives.SaleListItem.SaleListItem
- uid: SuperOffice.CRM.Archives.SaleList.SaleListQuery
  commentId: T:SuperOffice.CRM.Archives.SaleList.SaleListQuery
  parent: SuperOffice.CRM.Archives
  isExternal: true
  name: SaleList.SaleListQuery
  nameWithType: SaleList.SaleListQuery
  fullName: SuperOffice.CRM.Archives.SaleList.SaleListQuery
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Archives.SaleListItem.GetSaleListItem*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.GetSaleListItem
  isExternal: true
  name: GetSaleListItem
  nameWithType: SaleListItem.GetSaleListItem
  fullName: SuperOffice.CRM.Archives.SaleListItem.GetSaleListItem
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Archives.SaleListItem
  commentId: T:SuperOffice.CRM.Archives.SaleListItem
  parent: SuperOffice.CRM.Archives
  isExternal: true
  name: SaleListItem
  nameWithType: SaleListItem
  fullName: SuperOffice.CRM.Archives.SaleListItem
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.Initialize
  commentId: M:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.Initialize
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.Initialize
  name: Initialize()
  nameWithType: ListItemBase<SaleList.SaleListQuery>.Initialize()
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.Initialize()
  nameWithType.vb: ListItemBase(Of SaleList.SaleListQuery).Initialize()
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).Initialize()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Initialize
    name: Initialize
    nameWithType: ListItemBase<SaleList.SaleListQuery>.Initialize
    fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Initialize
    name: Initialize
    nameWithType: ListItemBase(Of SaleList.SaleListQuery).Initialize
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Archives.SaleListItem.Initialize*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.Initialize
  isExternal: true
  name: Initialize
  nameWithType: SaleListItem.Initialize
  fullName: SuperOffice.CRM.Archives.SaleListItem.Initialize
- uid: SuperOffice.CRM.Lists.ListItemBase`1.Initialize
  commentId: M:SuperOffice.CRM.Lists.ListItemBase`1.Initialize
  isExternal: true
  name: Initialize()
  nameWithType: ListItemBase<TListSelect>.Initialize()
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.Initialize()
  nameWithType.vb: ListItemBase(Of TListSelect).Initialize()
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).Initialize()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Initialize
    name: Initialize
    nameWithType: ListItemBase<TListSelect>.Initialize
    fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Initialize
    name: Initialize
    nameWithType: ListItemBase(Of TListSelect).Initialize
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.Load(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}.Load(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.Load(`0,SuperOffice.Data.SoDataReader)
  name: Load(SaleList.SaleListQuery, SoDataReader)
  nameWithType: ListItemBase<SaleList.SaleListQuery>.Load(SaleList.SaleListQuery, SoDataReader)
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.Load(SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.Data.SoDataReader)
  nameWithType.vb: ListItemBase(Of SaleList.SaleListQuery).Load(SaleList.SaleListQuery, SoDataReader)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).Load(SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.Data.SoDataReader)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Load(`0,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: ListItemBase<SaleList.SaleListQuery>.Load
    fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery>.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    name: SaleList.SaleListQuery
    nameWithType: SaleList.SaleListQuery
    fullName: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Load(`0,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: ListItemBase(Of SaleList.SaleListQuery).Load
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery).Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    name: SaleList.SaleListQuery
    nameWithType: SaleList.SaleListQuery
    fullName: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Archives.SaleListItem.Load*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.Load
  isExternal: true
  name: Load
  nameWithType: SaleListItem.Load
  fullName: SuperOffice.CRM.Archives.SaleListItem.Load
- uid: SuperOffice.CRM.Lists.ListItemBase`1.Load(`0,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase`1.Load(`0,SuperOffice.Data.SoDataReader)
  isExternal: true
  name: Load(TListSelect, SoDataReader)
  nameWithType: ListItemBase<TListSelect>.Load(TListSelect, SoDataReader)
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.Load(TListSelect, SuperOffice.Data.SoDataReader)
  nameWithType.vb: ListItemBase(Of TListSelect).Load(TListSelect, SoDataReader)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).Load(TListSelect, SuperOffice.Data.SoDataReader)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Load(`0,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: ListItemBase<TListSelect>.Load
    fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Load(`0,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: ListItemBase(Of TListSelect).Load
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Archives.SaleListItem.SaleId*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.SaleId
  isExternal: true
  name: SaleId
  nameWithType: SaleListItem.SaleId
  fullName: SuperOffice.CRM.Archives.SaleListItem.SaleId
- uid: SuperOffice.CRM.Archives.SaleListItem.Description*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.Description
  isExternal: true
  name: Description
  nameWithType: SaleListItem.Description
  fullName: SuperOffice.CRM.Archives.SaleListItem.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Archives.SaleListItem.Contact*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.Contact
  isExternal: true
  name: Contact
  nameWithType: SaleListItem.Contact
  fullName: SuperOffice.CRM.Archives.SaleListItem.Contact
- uid: SuperOffice.CRM.Archives.SaleListItem.PersonId*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.PersonId
  isExternal: true
  name: PersonId
  nameWithType: SaleListItem.PersonId
  fullName: SuperOffice.CRM.Archives.SaleListItem.PersonId
- uid: SuperOffice.CRM.Archives.SaleListItem.PersonFullName*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.PersonFullName
  isExternal: true
  name: PersonFullName
  nameWithType: SaleListItem.PersonFullName
  fullName: SuperOffice.CRM.Archives.SaleListItem.PersonFullName
- uid: SuperOffice.CRM.Archives.SaleListItem.AssociateId*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.AssociateId
  isExternal: true
  name: AssociateId
  nameWithType: SaleListItem.AssociateId
  fullName: SuperOffice.CRM.Archives.SaleListItem.AssociateId
- uid: SuperOffice.CRM.Archives.SaleListItem.AssociateFullName*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.AssociateFullName
  isExternal: true
  name: AssociateFullName
  nameWithType: SaleListItem.AssociateFullName
  fullName: SuperOffice.CRM.Archives.SaleListItem.AssociateFullName
- uid: SuperOffice.CRM.Archives.SaleListItem.Amount*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.Amount
  isExternal: true
  name: Amount
  nameWithType: SaleListItem.Amount
  fullName: SuperOffice.CRM.Archives.SaleListItem.Amount
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: SuperOffice.CRM.Archives.SaleListItem.Currency*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.Currency
  isExternal: true
  name: Currency
  nameWithType: SaleListItem.Currency
  fullName: SuperOffice.CRM.Archives.SaleListItem.Currency
- uid: SuperOffice.CRM.Archives.SaleListItem.Probability*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.Probability
  isExternal: true
  name: Probability
  nameWithType: SaleListItem.Probability
  fullName: SuperOffice.CRM.Archives.SaleListItem.Probability
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: SuperOffice.CRM.Archives.SaleListItem.Project*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.Project
  isExternal: true
  name: Project
  nameWithType: SaleListItem.Project
  fullName: SuperOffice.CRM.Archives.SaleListItem.Project
- uid: SuperOffice.CRM.Archives.SaleListItem.SaleDate*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.SaleDate
  isExternal: true
  name: SaleDate
  nameWithType: SaleListItem.SaleDate
  fullName: SuperOffice.CRM.Archives.SaleListItem.SaleDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Archives.SaleListItem.Status*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.Status
  isExternal: true
  name: Status
  nameWithType: SaleListItem.Status
  fullName: SuperOffice.CRM.Archives.SaleListItem.Status
- uid: SuperOffice.Data.SaleStatus
  commentId: T:SuperOffice.Data.SaleStatus
  parent: SuperOffice.Data
  isExternal: true
  name: SaleStatus
  nameWithType: SaleStatus
  fullName: SuperOffice.Data.SaleStatus
- uid: SuperOffice.CRM.Archives.SaleListItem.Title*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.Title
  isExternal: true
  name: Title
  nameWithType: SaleListItem.Title
  fullName: SuperOffice.CRM.Archives.SaleListItem.Title
- uid: SuperOffice.CRM.Archives.SaleListItem.WeightedAmount*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.WeightedAmount
  isExternal: true
  name: WeightedAmount
  nameWithType: SaleListItem.WeightedAmount
  fullName: SuperOffice.CRM.Archives.SaleListItem.WeightedAmount
- uid: SuperOffice.CRM.Archives.SaleListItem.ContactId*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.ContactId
  isExternal: true
  name: ContactId
  nameWithType: SaleListItem.ContactId
  fullName: SuperOffice.CRM.Archives.SaleListItem.ContactId
- uid: SuperOffice.CRM.Archives.SaleListItem.ProjectId*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.ProjectId
  isExternal: true
  name: ProjectId
  nameWithType: SaleListItem.ProjectId
  fullName: SuperOffice.CRM.Archives.SaleListItem.ProjectId
- uid: SuperOffice.CRM.Archives.SaleListItem.Earning*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.Earning
  isExternal: true
  name: Earning
  nameWithType: SaleListItem.Earning
  fullName: SuperOffice.CRM.Archives.SaleListItem.Earning
- uid: SuperOffice.CRM.Archives.SaleListItem.EarningPercent*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.EarningPercent
  isExternal: true
  name: EarningPercent
  nameWithType: SaleListItem.EarningPercent
  fullName: SuperOffice.CRM.Archives.SaleListItem.EarningPercent
- uid: SuperOffice.CRM.Archives.SaleListItem.SaleTypeId*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.SaleTypeId
  isExternal: true
  name: SaleTypeId
  nameWithType: SaleListItem.SaleTypeId
  fullName: SuperOffice.CRM.Archives.SaleListItem.SaleTypeId
- uid: SuperOffice.CRM.Archives.SaleListItem.SaleTypeName*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.SaleTypeName
  isExternal: true
  name: SaleTypeName
  nameWithType: SaleListItem.SaleTypeName
  fullName: SuperOffice.CRM.Archives.SaleListItem.SaleTypeName
- uid: SuperOffice.CRM.Archives.SaleListItem.Completed*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.Completed
  isExternal: true
  name: Completed
  nameWithType: SaleListItem.Completed
  fullName: SuperOffice.CRM.Archives.SaleListItem.Completed
- uid: SuperOffice.CRM.Archives.SaleListItem.Number*
  commentId: Overload:SuperOffice.CRM.Archives.SaleListItem.Number
  isExternal: true
  name: Number
  nameWithType: SaleListItem.Number
  fullName: SuperOffice.CRM.Archives.SaleListItem.Number
