### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData
  commentId: T:SuperOffice.CRM.Rows.AiChatTurnRecordData
  id: AiChatTurnRecordData
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.AiChatTurnRecordData.#ctor
  - SuperOffice.CRM.Rows.AiChatTurnRecordData.AiChatTurnId
  - SuperOffice.CRM.Rows.AiChatTurnRecordData.AssociateId
  - SuperOffice.CRM.Rows.AiChatTurnRecordData.Attachments
  - SuperOffice.CRM.Rows.AiChatTurnRecordData.BotActions
  - SuperOffice.CRM.Rows.AiChatTurnRecordData.BotResponse
  - SuperOffice.CRM.Rows.AiChatTurnRecordData.ChatId
  - SuperOffice.CRM.Rows.AiChatTurnRecordData.Timestamp
  - SuperOffice.CRM.Rows.AiChatTurnRecordData.UserDisplaytext
  - SuperOffice.CRM.Rows.AiChatTurnRecordData.UserPrompt
  langs:
  - csharp
  - vb
  name: AiChatTurnRecordData
  nameWithType: AiChatTurnRecordData
  fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPOCO (Plain Old CLR Object) class that can be used to hold data corresponding\nto a row from the ai_chat_turn table.\n"
  remarks: "\nPlease use this class instead of a full <xref href=\"SuperOffice.CRM.Rows.AiChatTurnRow\" data-throw-if-not-resolved=\"false\"></xref> object when\nyou do not need to <strong>create or update</strong> a value in the database. Row objects have a large overhead\nsince they carry the corresponding <xref href=\"SuperOffice.CRM.Data.AiChatTurnTableInfo\" data-throw-if-not-resolved=\"false\"></xref> object, which\nin turn defines fields and aliases; there may be a Sentry on a row, and various other helper objects.\n"
  syntax:
    content: 'public class AiChatTurnRecordData : Object'
    content.vb: >-
      Public Class AiChatTurnRecordData
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.Rows.AiChatTurnRecordData.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Rows.AiChatTurnRecordData.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Rows.AiChatTurnRecordData)
  - SuperOffice.CRM.Rows.AiChatTurnRecordData.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Rows.AiChatTurnRecordData.SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.AiChatTurnRecordData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.AiChatTurnId
  commentId: F:SuperOffice.CRM.Rows.AiChatTurnRecordData.AiChatTurnId
  id: AiChatTurnId
  parent: SuperOffice.CRM.Rows.AiChatTurnRecordData
  langs:
  - csharp
  - vb
  name: AiChatTurnId
  nameWithType: AiChatTurnRecordData.AiChatTurnId
  fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData.AiChatTurnId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPrimary key \n"
  syntax:
    content: public int AiChatTurnId
    return:
      type: System.Int32
    content.vb: Public AiChatTurnId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.AssociateId
  commentId: F:SuperOffice.CRM.Rows.AiChatTurnRecordData.AssociateId
  id: AssociateId
  parent: SuperOffice.CRM.Rows.AiChatTurnRecordData
  langs:
  - csharp
  - vb
  name: AssociateId
  nameWithType: AiChatTurnRecordData.AssociateId
  fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData.AssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nUser id that is chatting with the bot \n"
  syntax:
    content: public int AssociateId
    return:
      type: System.Int32
    content.vb: Public AssociateId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.ChatId
  commentId: F:SuperOffice.CRM.Rows.AiChatTurnRecordData.ChatId
  id: ChatId
  parent: SuperOffice.CRM.Rows.AiChatTurnRecordData
  langs:
  - csharp
  - vb
  name: ChatId
  nameWithType: AiChatTurnRecordData.ChatId
  fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData.ChatId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe name of this chat topic - usually soproto + id (contact-123, sale-43, diary) but could also be an arbitrary name \n"
  syntax:
    content: public string ChatId
    return:
      type: System.String
    content.vb: Public ChatId As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.Timestamp
  commentId: F:SuperOffice.CRM.Rows.AiChatTurnRecordData.Timestamp
  id: Timestamp
  parent: SuperOffice.CRM.Rows.AiChatTurnRecordData
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: AiChatTurnRecordData.Timestamp
  fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData.Timestamp
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nWhen the chat happened (UTC) in UTC.  \n"
  syntax:
    content: public DateTime Timestamp
    return:
      type: System.DateTime
    content.vb: Public Timestamp As DateTime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.UserPrompt
  commentId: F:SuperOffice.CRM.Rows.AiChatTurnRecordData.UserPrompt
  id: UserPrompt
  parent: SuperOffice.CRM.Rows.AiChatTurnRecordData
  langs:
  - csharp
  - vb
  name: UserPrompt
  nameWithType: AiChatTurnRecordData.UserPrompt
  fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData.UserPrompt
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nWhat the user typed \n"
  syntax:
    content: public string UserPrompt
    return:
      type: System.String
    content.vb: Public UserPrompt As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.UserDisplaytext
  commentId: F:SuperOffice.CRM.Rows.AiChatTurnRecordData.UserDisplaytext
  id: UserDisplaytext
  parent: SuperOffice.CRM.Rows.AiChatTurnRecordData
  langs:
  - csharp
  - vb
  name: UserDisplaytext
  nameWithType: AiChatTurnRecordData.UserDisplaytext
  fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData.UserDisplaytext
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nDisplay this text instead of the prompt (if set) - could be set by action \n"
  syntax:
    content: public string UserDisplaytext
    return:
      type: System.String
    content.vb: Public UserDisplaytext As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.BotResponse
  commentId: F:SuperOffice.CRM.Rows.AiChatTurnRecordData.BotResponse
  id: BotResponse
  parent: SuperOffice.CRM.Rows.AiChatTurnRecordData
  langs:
  - csharp
  - vb
  name: BotResponse
  nameWithType: AiChatTurnRecordData.BotResponse
  fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData.BotResponse
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nAI Bot response to user_prompt - usually text \n"
  syntax:
    content: public string BotResponse
    return:
      type: System.String
    content.vb: Public BotResponse As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.BotActions
  commentId: F:SuperOffice.CRM.Rows.AiChatTurnRecordData.BotActions
  id: BotActions
  parent: SuperOffice.CRM.Rows.AiChatTurnRecordData
  langs:
  - csharp
  - vb
  name: BotActions
  nameWithType: AiChatTurnRecordData.BotActions
  fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData.BotActions
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSuggested actions (string dictionary) in JSON. NULL if not set \n"
  syntax:
    content: public string BotActions
    return:
      type: System.String
    content.vb: Public BotActions As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.Attachments
  commentId: F:SuperOffice.CRM.Rows.AiChatTurnRecordData.Attachments
  id: Attachments
  parent: SuperOffice.CRM.Rows.AiChatTurnRecordData
  langs:
  - csharp
  - vb
  name: Attachments
  nameWithType: AiChatTurnRecordData.Attachments
  fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData.Attachments
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nJSON Array of bot - NULL if not set \n"
  syntax:
    content: public string Attachments
    return:
      type: System.String
    content.vb: Public Attachments As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.#ctor
  commentId: M:SuperOffice.CRM.Rows.AiChatTurnRecordData.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Rows.AiChatTurnRecordData
  langs:
  - csharp
  - vb
  name: AiChatTurnRecordData()
  nameWithType: AiChatTurnRecordData.AiChatTurnRecordData()
  fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData.AiChatTurnRecordData()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public AiChatTurnRecordData()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Rows.AiChatTurnRecordData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<AiChatTurnRecordData, To>()
  nameWithType: EnumUtil.MapEnums<AiChatTurnRecordData, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.AiChatTurnRecordData, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of AiChatTurnRecordData, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.AiChatTurnRecordData, To)()
  name.vb: MapEnums(Of AiChatTurnRecordData, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<AiChatTurnRecordData, To>
    nameWithType: EnumUtil.MapEnums<AiChatTurnRecordData, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.AiChatTurnRecordData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of AiChatTurnRecordData, To)
    nameWithType: EnumUtil.MapEnums(Of AiChatTurnRecordData, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.AiChatTurnRecordData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Rows.AiChatTurnRecordData)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<AiChatTurnRecordData>(AiChatTurnRecordData)
  nameWithType: ObjectExtensions.AssignByReflection<AiChatTurnRecordData>(AiChatTurnRecordData)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Rows.AiChatTurnRecordData>(SuperOffice.CRM.Rows.AiChatTurnRecordData)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of AiChatTurnRecordData)(AiChatTurnRecordData)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Rows.AiChatTurnRecordData)(SuperOffice.CRM.Rows.AiChatTurnRecordData)
  name.vb: AssignByReflection(Of AiChatTurnRecordData)(AiChatTurnRecordData)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<AiChatTurnRecordData>
    nameWithType: ObjectExtensions.AssignByReflection<AiChatTurnRecordData>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Rows.AiChatTurnRecordData>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.AiChatTurnRecordData
    name: AiChatTurnRecordData
    nameWithType: AiChatTurnRecordData
    fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of AiChatTurnRecordData)
    nameWithType: ObjectExtensions.AssignByReflection(Of AiChatTurnRecordData)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Rows.AiChatTurnRecordData)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.AiChatTurnRecordData
    name: AiChatTurnRecordData
    nameWithType: AiChatTurnRecordData
    fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<AiChatTurnRecordData>()
  nameWithType: ObjectExtensions.GraphCopy<AiChatTurnRecordData>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Rows.AiChatTurnRecordData>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of AiChatTurnRecordData)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Rows.AiChatTurnRecordData)()
  name.vb: GraphCopy(Of AiChatTurnRecordData)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<AiChatTurnRecordData>
    nameWithType: ObjectExtensions.GraphCopy<AiChatTurnRecordData>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Rows.AiChatTurnRecordData>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of AiChatTurnRecordData)
    nameWithType: ObjectExtensions.GraphCopy(Of AiChatTurnRecordData)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Rows.AiChatTurnRecordData)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.AiChatTurnRecordData,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions
  definition: SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.AiChatTurnRecordData,System.Threading.CancellationToken)
  name: ToInsertAsync(CancellationToken)
  nameWithType: AiChatTurnRecordDataExtensions.ToInsertAsync(CancellationToken)
  fullName: SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync(System.Threading.CancellationToken)
    name: ToInsertAsync
    nameWithType: AiChatTurnRecordDataExtensions.ToInsertAsync
    fullName: SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync(System.Threading.CancellationToken)
    name: ToInsertAsync
    nameWithType: AiChatTurnRecordDataExtensions.ToInsertAsync
    fullName: SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<AiChatTurnRecordData, To>()
  nameWithType: Converters.MapEnums<AiChatTurnRecordData, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.AiChatTurnRecordData, To>()
  nameWithType.vb: Converters.MapEnums(Of AiChatTurnRecordData, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.AiChatTurnRecordData, To)()
  name.vb: MapEnums(Of AiChatTurnRecordData, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<AiChatTurnRecordData, To>
    nameWithType: Converters.MapEnums<AiChatTurnRecordData, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.AiChatTurnRecordData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of AiChatTurnRecordData, To)
    nameWithType: Converters.MapEnums(Of AiChatTurnRecordData, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.AiChatTurnRecordData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.AiChatTurnRecordData,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.AiChatTurnRecordData,System.Threading.CancellationToken)
  isExternal: true
  name: ToInsertAsync(AiChatTurnRecordData, CancellationToken)
  nameWithType: AiChatTurnRecordDataExtensions.ToInsertAsync(AiChatTurnRecordData, CancellationToken)
  fullName: SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.AiChatTurnRecordData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.AiChatTurnRecordData,System.Threading.CancellationToken)
    name: ToInsertAsync
    nameWithType: AiChatTurnRecordDataExtensions.ToInsertAsync
    fullName: SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.AiChatTurnRecordData
    name: AiChatTurnRecordData
    nameWithType: AiChatTurnRecordData
    fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.AiChatTurnRecordData,System.Threading.CancellationToken)
    name: ToInsertAsync
    nameWithType: AiChatTurnRecordDataExtensions.ToInsertAsync
    fullName: SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions.ToInsertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.AiChatTurnRecordData
    name: AiChatTurnRecordData
    nameWithType: AiChatTurnRecordData
    fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions
  commentId: T:SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: AiChatTurnRecordDataExtensions
  nameWithType: AiChatTurnRecordDataExtensions
  fullName: SuperOffice.CRM.Rows.AiChatTurnRecordDataExtensions
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Rows.AiChatTurnRecordData.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.AiChatTurnRecordData.#ctor
  isExternal: true
  name: AiChatTurnRecordData
  nameWithType: AiChatTurnRecordData.AiChatTurnRecordData
  fullName: SuperOffice.CRM.Rows.AiChatTurnRecordData.AiChatTurnRecordData
