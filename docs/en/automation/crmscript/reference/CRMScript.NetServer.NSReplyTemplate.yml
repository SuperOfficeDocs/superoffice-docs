### YamlMime:ManagedReference
items:
- uid: CRMScript.NetServer.NSReplyTemplate
  commentId: T:CRMScript.NetServer.NSReplyTemplate
  id: NSReplyTemplate
  langs:
  - crmscript
  children:
  - CRMScript.NetServer.NSReplyTemplate.#ctor
  - CRMScript.NetServer.NSReplyTemplate.GetDescription()
  - CRMScript.NetServer.NSReplyTemplate.GetFolderId()
  - CRMScript.NetServer.NSReplyTemplate.GetName()
  - CRMScript.NetServer.NSReplyTemplate.GetReplyTemplateId()
  - CRMScript.NetServer.NSReplyTemplate.SetDescription(String)
  - CRMScript.NetServer.NSReplyTemplate.SetFolderId(Integer)
  - CRMScript.NetServer.NSReplyTemplate.SetName(String)
  - CRMScript.NetServer.NSReplyTemplate.SetReplyTemplateId(Integer)
  name: NSReplyTemplate
  nameWithType: NSReplyTemplate
  fullName: CRMScript.NetServer.NSReplyTemplate
  type: Class
  summary: # TODO
  example: 
- uid: CRMScript.NetServer.NSReplyTemplate.#ctor
  commentId: M:CRMScript.NetServer.NSReplyTemplate.#ctor
  id: '#ctor'
  so.intellisense: Void.NSReplyTemplate
  langs:
  - crmscript
  name: NSReplyTemplate()
  nameWithType: NSReplyTemplate.#ctor
  fullName: CRMScript.NetServer.NSReplyTemplate.#ctor
  type: Constructor
  summary: "\nInitializes a new instance of the NSReplyTemplate class.\n"
  remarks: 
  syntax: 
    content: NSReplyTemplate
  example: 
- uid: CRMScript.NetServer.NSReplyTemplate.GetDescription()
  commentId: M:CRMScript.NetServer.NSReplyTemplate.GetDescription()
  id: 'GetDescription()'
  so.intellisense: NSReplyTemplate.GetDescription
  langs:
  - crmscript
  name: 'GetDescription()'
  nameWithType: NSReplyTemplate.GetDescription()
  fullName: CRMScript.NetServer.NSReplyTemplate.GetDescription()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: String GetDescription()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The description for this reply template."
  example: 
  - "\n<pre><code>NSReplyTemplate thing;\nString description = thing.GetDescription();</code></pre>\n"
- uid: CRMScript.NetServer.NSReplyTemplate.GetFolderId()
  commentId: M:CRMScript.NetServer.NSReplyTemplate.GetFolderId()
  id: 'GetFolderId()'
  so.intellisense: NSReplyTemplate.GetFolderId
  langs:
  - crmscript
  name: 'GetFolderId()'
  nameWithType: NSReplyTemplate.GetFolderId()
  fullName: CRMScript.NetServer.NSReplyTemplate.GetFolderId()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Integer GetFolderId()
    parameters: []
    return:
      type: CRMScript.Global.Integer
      description: "The ID of the folder in which this reply template is located. NULL or -1 if this is a top-level reply template."
  example: 
  - "\n<pre><code>NSReplyTemplate thing;\nInteger folderId = thing.GetFolderId();</code></pre>\n"
- uid: CRMScript.NetServer.NSReplyTemplate.GetName()
  commentId: M:CRMScript.NetServer.NSReplyTemplate.GetName()
  id: 'GetName()'
  so.intellisense: NSReplyTemplate.GetName
  langs:
  - crmscript
  name: 'GetName()'
  nameWithType: NSReplyTemplate.GetName()
  fullName: CRMScript.NetServer.NSReplyTemplate.GetName()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: String GetName()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The name for this reply template."
  example: 
  - "\n<pre><code>NSReplyTemplate thing;\nString name = thing.GetName();</code></pre>\n"
- uid: CRMScript.NetServer.NSReplyTemplate.GetReplyTemplateId()
  commentId: M:CRMScript.NetServer.NSReplyTemplate.GetReplyTemplateId()
  id: 'GetReplyTemplateId()'
  so.intellisense: NSReplyTemplate.GetReplyTemplateId
  langs:
  - crmscript
  name: 'GetReplyTemplateId()'
  nameWithType: NSReplyTemplate.GetReplyTemplateId()
  fullName: CRMScript.NetServer.NSReplyTemplate.GetReplyTemplateId()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Integer GetReplyTemplateId()
    parameters: []
    return:
      type: CRMScript.Global.Integer
      description: "The primary key (auto-incremented)."
  example: 
  - "\n<pre><code>NSReplyTemplate thing;\nInteger replyTemplateId = thing.GetReplyTemplateId();</code></pre>\n"
- uid: CRMScript.NetServer.NSReplyTemplate.SetDescription(String)
  commentId: M:CRMScript.NetServer.NSReplyTemplate.SetDescription(String)
  id: 'SetDescription(String)'
  so.intellisense: NSReplyTemplate.SetDescription
  langs:
  - crmscript
  name: 'SetDescription(String)'
  nameWithType: NSReplyTemplate.SetDescription(String)
  fullName: CRMScript.NetServer.NSReplyTemplate.SetDescription(String)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetDescription(String description)
    parameters:
    - id: description
      type: CRMScript.Global.String
      description: "The description for this reply template."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSReplyTemplate thing;\nString description;\nthing.SetDescription(description);</code></pre>\n"
- uid: CRMScript.NetServer.NSReplyTemplate.SetFolderId(Integer)
  commentId: M:CRMScript.NetServer.NSReplyTemplate.SetFolderId(Integer)
  id: 'SetFolderId(Integer)'
  so.intellisense: NSReplyTemplate.SetFolderId
  langs:
  - crmscript
  name: 'SetFolderId(Integer)'
  nameWithType: NSReplyTemplate.SetFolderId(Integer)
  fullName: CRMScript.NetServer.NSReplyTemplate.SetFolderId(Integer)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetFolderId(Integer folderId)
    parameters:
    - id: folderId
      type: CRMScript.Global.Integer
      description: "The ID of the folder in which this reply template is located. NULL or -1 if this is a top-level reply template."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSReplyTemplate thing;\nInteger folderId;\nthing.SetFolderId(folderId);</code></pre>\n"
- uid: CRMScript.NetServer.NSReplyTemplate.SetName(String)
  commentId: M:CRMScript.NetServer.NSReplyTemplate.SetName(String)
  id: 'SetName(String)'
  so.intellisense: NSReplyTemplate.SetName
  langs:
  - crmscript
  name: 'SetName(String)'
  nameWithType: NSReplyTemplate.SetName(String)
  fullName: CRMScript.NetServer.NSReplyTemplate.SetName(String)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetName(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "The name for this reply template."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSReplyTemplate thing;\nString name;\nthing.SetName(name);</code></pre>\n"
- uid: CRMScript.NetServer.NSReplyTemplate.SetReplyTemplateId(Integer)
  commentId: M:CRMScript.NetServer.NSReplyTemplate.SetReplyTemplateId(Integer)
  id: 'SetReplyTemplateId(Integer)'
  so.intellisense: NSReplyTemplate.SetReplyTemplateId
  langs:
  - crmscript
  name: 'SetReplyTemplateId(Integer)'
  nameWithType: NSReplyTemplate.SetReplyTemplateId(Integer)
  fullName: CRMScript.NetServer.NSReplyTemplate.SetReplyTemplateId(Integer)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetReplyTemplateId(Integer replyTemplateId)
    parameters:
    - id: replyTemplateId
      type: CRMScript.Global.Integer
      description: "The primary key (auto-incremented)."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSReplyTemplate thing;\nInteger replyTemplateId;\nthing.SetReplyTemplateId(replyTemplateId);</code></pre>\n"
references:
- uid: CRMScript.NetServer.NSReplyTemplate
  commentId: T:CRMScript.NetServer.NSReplyTemplate
  isExternal: true
  name: NSReplyTemplate
  nameWithType: NSReplyTemplate
  fullName: CRMScript.NetServer.NSReplyTemplate
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  isExternal: true
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void