### YamlMime:ManagedReference
items:
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  id: Void
  so.intellisense: 
  langs:
  - crmscript
  children:
  - CRMScript.Global.Void.addAction(String,String,Bool)
  - CRMScript.Global.Void.addChatMessage(Integer,String,Integer,String,Integer,String)
  - CRMScript.Global.Void.addChatMessage(Integer,String,Integer,String,Integer,String,DateTime)
  - CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,Map)
  - CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,Map,Integer)
  - CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,String)
  - CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,String,Integer)
  - CRMScript.Global.Void.assert(Bool)
  - CRMScript.Global.Void.assertEquals(Bool,Bool)
  - CRMScript.Global.Void.assertEquals(Float,Float)
  - CRMScript.Global.Void.assertEquals(Integer,Integer)
  - CRMScript.Global.Void.assertEquals(String,String)
  - CRMScript.Global.Void.buildUrl()
  - CRMScript.Global.Void.cgiWasPost()
  - CRMScript.Global.Void.checkReply(String)
  - CRMScript.Global.Void.combineHtmlStrings(Vector)
  - CRMScript.Global.Void.convertGenericToString(Generic)
  - CRMScript.Global.Void.convertStatus(Integer)
  - CRMScript.Global.Void.copyCRMDocumentToAttachment(Integer)
  - CRMScript.Global.Void.debugWait(String)
  - CRMScript.Global.Void.decodeBase64(String)
  - CRMScript.Global.Void.decodeBase64AsStream(String)
  - CRMScript.Global.Void.decodeDBValue(String)
  - CRMScript.Global.Void.enableDebug(String)
  - CRMScript.Global.Void.encodeBase32(Byte[])
  - CRMScript.Global.Void.encodeBase64(Byte[])
  - CRMScript.Global.Void.encodeBase64(Byte[],Bool)
  - CRMScript.Global.Void.encodeBase64(NSStream)
  - CRMScript.Global.Void.encodeBase64(NSStream,Bool)
  - CRMScript.Global.Void.encodeHMACSHA1(Byte[],Byte[])
  - CRMScript.Global.Void.encodeHMACSHA1(String,String)
  - CRMScript.Global.Void.encodeHMACSHA256(String,String)
  - CRMScript.Global.Void.encodeHMACSHA512(String,String)
  - CRMScript.Global.Void.encodeSHA1(String)
  - CRMScript.Global.Void.encodeSHA256(String,String)
  - CRMScript.Global.Void.executeDbiAgentSchedule(Integer,Map)
  - CRMScript.Global.Void.executeMacro(String)
  - CRMScript.Global.Void.executeSQLQuery(String)
  - CRMScript.Global.Void.executeScript(String,Map)
  - CRMScript.Global.Void.exitWithMessage(String)
  - CRMScript.Global.Void.faqSearch(Integer,Integer,String,Parser,Integer)
  - CRMScript.Global.Void.findReplyTemplateToMerge(Integer)
  - CRMScript.Global.Void.flushCaches()
  - CRMScript.Global.Void.forwardMail(String,String,Integer)
  - CRMScript.Global.Void.GenericToArray(Generic)
  - CRMScript.Global.Void.GenericToBool(Generic)
  - CRMScript.Global.Void.GenericToByte(Generic)
  - CRMScript.Global.Void.GenericToDate(Generic)
  - CRMScript.Global.Void.GenericToDateTime(Generic)
  - CRMScript.Global.Void.GenericToFloat(Generic)
  - CRMScript.Global.Void.GenericToInteger(Generic)
  - CRMScript.Global.Void.GenericToString(Generic)
  - CRMScript.Global.Void.GenericToTime(Generic)
  - CRMScript.Global.Void.GenericToTimeSpan(Generic)
  - CRMScript.Global.Void.getActiveUser()
  - CRMScript.Global.Void.getAgentId(String)
  - CRMScript.Global.Void.getAgentScheduleId(String)
  - CRMScript.Global.Void.getAttachmentsSize(Integer[])
  - CRMScript.Global.Void.getCategoryIdFromFullname(String)
  - CRMScript.Global.Void.getCgiContent()
  - CRMScript.Global.Void.getCgiUrl()
  - CRMScript.Global.Void.getCgiVariable(String)
  - CRMScript.Global.Void.getCgiVariableArray(String)
  - CRMScript.Global.Void.getCgiVariables()
  - CRMScript.Global.Void.getCookie(String)
  - CRMScript.Global.Void.getCurrent(String)
  - CRMScript.Global.Void.getCurrentDate()
  - CRMScript.Global.Void.getCurrentDateTime()
  - CRMScript.Global.Void.getCurrentTime()
  - CRMScript.Global.Void.getCustomerMainEmail(Integer)
  - CRMScript.Global.Void.getDbiControl()
  - CRMScript.Global.Void.getDefaultElementConfig(Integer,String,String)
  - CRMScript.Global.Void.getDocumentId(String)
  - CRMScript.Global.Void.getEnvVariable(String)
  - CRMScript.Global.Void.getEventData()
  - CRMScript.Global.Void.getExecutable()
  - CRMScript.Global.Void.getExternalProgram(Integer)
  - CRMScript.Global.Void.getExternalProgramAdmin()
  - CRMScript.Global.Void.getExternalProgramAjax()
  - CRMScript.Global.Void.getExternalProgramBlogic()
  - CRMScript.Global.Void.getExternalProgramChat()
  - CRMScript.Global.Void.getExternalProgramCustomer()
  - CRMScript.Global.Void.getExternalProgramDocument()
  - CRMScript.Global.Void.getExternalProgramHelp()
  - CRMScript.Global.Void.getExternalProgramKnowledge()
  - CRMScript.Global.Void.getExternalProgramRms()
  - CRMScript.Global.Void.getExternalProgramSoap()
  - CRMScript.Global.Void.getExternalProgramStat()
  - CRMScript.Global.Void.getExternalProgramTicket()
  - CRMScript.Global.Void.getExtraTable(String)
  - CRMScript.Global.Void.getFavourites(String)
  - CRMScript.Global.Void.getFunctionList()
  - CRMScript.Global.Void.getGenericValue(Generic, String)
  - CRMScript.Global.Void.getGenericValue(String)
  - CRMScript.Global.Void.getGlobalStaticMap()
  - CRMScript.Global.Void.getGlobalVariable(String)
  - CRMScript.Global.Void.getHtmlElement(String)
  - CRMScript.Global.Void.getHtmlElementIndex(String)
  - CRMScript.Global.Void.getHtmlElementName(Integer)
  - CRMScript.Global.Void.getHttpHeader(String)
  - CRMScript.Global.Void.getLanguageVariable(String)
  - CRMScript.Global.Void.getLanguageVariable(String,String)
  - CRMScript.Global.Void.getLocalTimeZone()
  - CRMScript.Global.Void.getMainMenu()
  - CRMScript.Global.Void.getNtUser()
  - CRMScript.Global.Void.getNumHtmlElements()
  - CRMScript.Global.Void.getPID()
  - CRMScript.Global.Void.getParser()
  - CRMScript.Global.Void.getParserParameter(String)
  - CRMScript.Global.Void.getParserParameter(String,Integer)
  - CRMScript.Global.Void.getParserParameterCount(String)
  - CRMScript.Global.Void.getParserVariable(String)
  - CRMScript.Global.Void.getParserVariable(String,Integer)
  - CRMScript.Global.Void.getParserVariableAsCSV(String,Bool)
  - CRMScript.Global.Void.getParserVariableCount(String)
  - CRMScript.Global.Void.getPriorityIdFromName(String)
  - CRMScript.Global.Void.getProgram(Integer)
  - CRMScript.Global.Void.getProgramAdmin()
  - CRMScript.Global.Void.getProgramAjax()
  - CRMScript.Global.Void.getProgramBlogic()
  - CRMScript.Global.Void.getProgramChat()
  - CRMScript.Global.Void.getProgramCustomer()
  - CRMScript.Global.Void.getProgramDocument()
  - CRMScript.Global.Void.getProgramHelp()
  - CRMScript.Global.Void.getProgramKnowledge()
  - CRMScript.Global.Void.getProgramRms()
  - CRMScript.Global.Void.getProgramSoap()
  - CRMScript.Global.Void.getProgramStat()
  - CRMScript.Global.Void.getProgramTicket()
  - CRMScript.Global.Void.getReplyTemplateBody(Integer,Bool,Integer)
  - CRMScript.Global.Void.getReplyTemplateSubject(Integer,Integer)
  - CRMScript.Global.Void.getScreenElementConfig(Integer)
  - CRMScript.Global.Void.getScreenElementId(Integer)
  - CRMScript.Global.Void.getScreenElementName(Integer)
  - CRMScript.Global.Void.getScreenElementType(Integer)
  - CRMScript.Global.Void.getScriptId(String)
  - CRMScript.Global.Void.getSelectionIds(Integer)
  - CRMScript.Global.Void.getSessionVariable(String)
  - CRMScript.Global.Void.getSessionVariables()
  - CRMScript.Global.Void.getStatusIdFromName(String)
  - CRMScript.Global.Void.getStructMembers(String)
  - CRMScript.Global.Void.getSystemFlags()
  - CRMScript.Global.Void.getSystemLang()
  - CRMScript.Global.Void.getTypeDimensions(Generic)
  - CRMScript.Global.Void.getTypeName(Generic)
  - CRMScript.Global.Void.getUserLang()
  - CRMScript.Global.Void.getUsername(Integer)
  - CRMScript.Global.Void.getVariable(String)
  - CRMScript.Global.Void.getVariables()
  - CRMScript.Global.Void.getWarnings()
  - CRMScript.Global.Void.htmlConvToText(String)
  - CRMScript.Global.Void.idToLang(Integer)
  - CRMScript.Global.Void.invoiceTypesExists()
  - CRMScript.Global.Void.isValidPhoneNumber(String,Bool)
  - CRMScript.Global.Void.langToId(String)
  - CRMScript.Global.Void.log(String)
  - CRMScript.Global.Void.logMessage(String)
  - CRMScript.Global.Void.makePassword(Integer)
  - CRMScript.Global.Void.makePassword(Integer,String)
  - CRMScript.Global.Void.mapValue(String)
  - CRMScript.Global.Void.modulo(Integer,Integer)
  - CRMScript.Global.Void.parseJSON(String)
  - CRMScript.Global.Void.parseJSON2(String)
  - CRMScript.Global.Void.parseXML(String)
  - CRMScript.Global.Void.pow()
  - CRMScript.Global.Void.print(String)
  - CRMScript.Global.Void.printBinary(Byte[])
  - CRMScript.Global.Void.printBinary(NSStream)
  - CRMScript.Global.Void.printDebug(String)
  - CRMScript.Global.Void.printLine(String)
  - CRMScript.Global.Void.rand(Integer,Integer)
  - CRMScript.Global.Void.reloadAndSendShipment(Integer)
  - CRMScript.Global.Void.removeHtmlElement(Integer)
  - CRMScript.Global.Void.resetChat(Integer)
  - CRMScript.Global.Void.runProgram(String)
  - CRMScript.Global.Void.runProgram(String,String)
  - CRMScript.Global.Void.saveAllCgiAttachments(String)
  - CRMScript.Global.Void.saveCgiAttachment(String)
  - CRMScript.Global.Void.setChatStatus(Integer,Integer)
  - CRMScript.Global.Void.setCookie(String,String,Bool)
  - CRMScript.Global.Void.setCurrent(String,String)
  - CRMScript.Global.Void.setFromCgi()
  - CRMScript.Global.Void.setGenericFromString(Generic, String)
  - CRMScript.Global.Void.setGlobalVariable(String,String)
  - CRMScript.Global.Void.setHidden(String,String)
  - CRMScript.Global.Void.setPageFocusFirstControl(Bool)
  - CRMScript.Global.Void.setPageOnLoad(String)
  - CRMScript.Global.Void.setPageRefresh(Integer)
  - CRMScript.Global.Void.setPageTitle(String)
  - CRMScript.Global.Void.setParserVariable(String,String)
  - CRMScript.Global.Void.setSessionVariable(String,String)
  - CRMScript.Global.Void.setUserIsTyping(Integer,Bool)
  - CRMScript.Global.Void.setVariable(String,String)
  - CRMScript.Global.Void.simpleTwoWay(Byte[])
  - CRMScript.Global.Void.sleep()
  - CRMScript.Global.Void.typeIsStruct(Generic)
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
  type: Class
  summary: "\nGlobal functions\n"
  example: 
- uid: CRMScript.Global.Void.addAction(String,String,Bool)
  commentId: M:CRMScript.Global.Void.addAction(String,String,Bool)
  id: 'addAction(String,String,Bool)'
  so.intellisense: Void.addAction
  langs:
  - crmscript
  name: 'addAction(String,String,Bool)'
  nameWithType: Void.addAction(String,String,Bool)
  fullName: CRMScript.Global.Void.addAction(String,String,Bool)
  type: Method
  summary: "\nAdds an action to the Screen definition associated with this script (when the script is the load script for a Screen). An action is essentially a connection between a button with a given name and a script. When a button in the screen is pressed, the list of actions is checked, and the action with the matching button name (e.g. &quot;ok&quot;, &quot;cancel&quot;, &quot;addSomething&quot;) will be found and the script will be executed.\n"
  remarks: "\nNormally, doCheck should be True for buttons that submit the form, and False for buttons that add lines to grids, and so on.\n"
  syntax: 
    content: Void addAction(String button, String script, Bool doCheck)
    parameters:
    - id: button
      type: CRMScript.Global.String
      description: "The name of the associated button, such as <strong>OK</strong>."
    - id: script
      type: CRMScript.Global.String
      description: "The script code to execute for this action."
    - id: doCheck
      type: CRMScript.Global.Bool
      description: "If True, the contents of all input elements will be checked for validity before the action is executed."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.addChatMessage(Integer,String,Integer,String,Integer,String)
  commentId: M:CRMScript.Global.Void.addChatMessage(Integer,String,Integer,String,Integer,String)
  id: 'addChatMessage(Integer,String,Integer,String,Integer,String)'
  so.intellisense: Void.addChatMessage
  so.version: 8.2
  langs:
  - crmscript
  name: 'addChatMessage(Integer,String,Integer,String,Integer,String)'
  nameWithType: Void.addChatMessage(Integer,String,Integer,String,Integer,String)
  fullName: CRMScript.Global.Void.addChatMessage(Integer,String,Integer,String,Integer,String)
  type: Method
  summary: "\nAdds a message to a chat session.\n"
  remarks: "\nYou can optionally pass a <code>DateTime</code> to set when the message will show up.\n"
  syntax: 
    content: Integer addChatMessage(Integer sessionId, String message, Integer type, String author, Integer specialType, String specialParams)
    parameters:
    - id: sessionId
      type: CRMScript.Global.Integer
      description: "The ID of the chat session."
    - id: message
      type: CRMScript.Global.String
      description: "The text of the message you want to add in HTML format. A few tags, such as &lt;b&gt;, &lt;i&gt;, &lt;ul&gt; are allowed. Other tags and attributes will be removed."
    - id: type
      type: CRMScript.Global.Integer
      description: 1 to indicate the message is to the customer."
    - id: author
      type: CRMScript.Global.String
      description: "The string used as the author of the message. Placed above the message bubble."
    - id: specialType
      type: CRMScript.Global.Integer
      description: "Mostly internally used. 0 = no special type; 16the message is from a chatbot"
    - id: specialParams
      type: CRMScript.Global.String
      description: "Various params based on the specialType. Specifically, for specialType=16, you can add showAt=&lt;datetime&gt; to specify when the message should show up to create a delay before the bot message is shown."
    return:
      type: CRMScript.Global.Integer
      description:
  example: 
- uid: CRMScript.Global.Void.addChatMessage(Integer,String,Integer,String,Integer,String,DateTime)
  commentId: M:CRMScript.Global.Void.addChatMessage(Integer,String,Integer,String,Integer,String,DateTime)
  id: 'addChatMessage(Integer,String,Integer,String,Integer,String,DateTime)'
  so.intellisense: Void.addChatMessage
  so.version: 8.5R10
  langs:
  - crmscript
  name: 'addChatMessage(Integer,String,Integer,String,Integer,String,DateTime)'
  nameWithType: Void.addChatMessage(Integer,String,Integer,String,Integer,String,DateTime)
  fullName: CRMScript.Global.Void.addChatMessage(Integer,String,Integer,String,Integer,String,DateTime)
  type: Method
  summary: "\nAdds a message to a chat session and sets when the message will show up.\n"
  remarks: "\nThis variant of addChatMessage() is especially used for ChatBot-integrations.\n"
  syntax: 
    content: Integer addChatMessage(Integer sessionId, String message, Integer type, String author, Integer specialType, String specialParams, DateTime whenPosted)
    parameters:
    - id: sessionId
      type: CRMScript.Global.Integer
      description: "The ID of the chat session."
    - id: message
      type: CRMScript.Global.String
      description: "The text of the message you want to add in HTML format. A few tags, such as &lt;b&gt;, &lt;i&gt;, &lt;ul&gt; are allowed. Other tags and attributes will be removed."
    - id: type
      type: CRMScript.Global.Integer
      description: 1 to indicate the message is to the customer."
    - id: author
      type: CRMScript.Global.String
      description: "The string used as the author of the message. Placed above the message bubble."
    - id: specialType
      type: CRMScript.Global.Integer
      description: "Mostly internally used. 0 = no special type; 16 = the message is from a chatbot"
    - id: specialParams
      type: CRMScript.Global.String
      description: "Various params based on the specialType. Specifically, for specialType=16, you can add showAt=&lt;datetime&gt; to specify when the message should show up to create a delay before the bot message is shown."
    - id: whenPosted
      type: CRMScript.Global.DateTime
      description: "If not null, this is when the message will show up in the clients and also the sorting field for messages."
    return:
      type: CRMScript.Global.Integer
      description: 
  example: 
- uid: CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,Map)
  commentId: M:CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,Map)
  id: 'addHtmlElement(Integer,String,Integer,Map)'
  so.intellisense: Void.addHtmlElement
  langs:
  - crmscript
  name: 'addHtmlElement(Integer,String,Integer,Map)'
  nameWithType: Void.addHtmlElement(Integer,String,Integer,Map)
  fullName: CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,Map)
  type: Method
  summary: "\nAdds an HTML element to the associated screen when this script is executed as the load script for a screen.\n"
  remarks: "\nYou can optionally provide the zero-based position of the element in the list of elements for the screen.\n"
  syntax: 
    content: HtmlElement addHtmlElement(Integer id, String name, Integer type, Map config)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: "The ID of this HTML element. Normally not relevant."
    - id: name
      type: CRMScript.Global.String
      description: "The unique name of this HTML element. Used for accessing it later."
    - id: type
      type: CRMScript.Global.Integer
      description: "The type of this element. Types are documented under bLogic."
    - id: config
      type: CRMScript.Native.Map
      description: "The map containing the configuration for the HTML element."
    return:
      type: CRMScript.Native.HtmlElement
      description: "The element that was added."
  example: 
- uid: CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,Map,Integer)
  commentId: M:CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,Map,Integer)
  id: 'addHtmlElement(Integer,String,Integer,Map,Integer)'
  so.intellisense: Void.addHtmlElement
  langs:
  - crmscript
  name: 'addHtmlElement(Integer,String,Integer,Map,Integer)'
  nameWithType: Void.addHtmlElement(Integer,String,Integer,Map,Integer)
  fullName: CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,Map,Integer)
  type: Method
  summary: "\nAdds an HTML element to the associated screen with a zero-based position when this script is executed as the load script for a screen.\n"
  remarks:
  syntax: 
    content: HtmlElement addHtmlElement(Integer id, String name, Integer type, Map config, Integer position)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: "The ID of this HTML element. Normally not relevant."
    - id: name
      type: CRMScript.Global.String
      description: "The unique name of this HTML element. Used for accessing it later."
    - id: type
      type: CRMScript.Global.Integer
      description: "The type of this element. Types are documented under bLogic."
    - id: config
      type: CRMScript.Native.Map
      description: "The map containing the configuration for the HTML element."
    - id: position
      type: CRMScript.Global.Integer
      description: "The zero-based position of the element in the list of elements for the screen."
    return:
      type: CRMScript.Native.HtmlElement
      description: "The element that was added."
  example: 
- uid: CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,String)
  commentId: M:CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,String)
  id: 'addHtmlElement(Integer,String,Integer,String)'
  so.intellisense: Void.addHtmlElement
  langs:
  - crmscript
  name: 'addHtmlElement(Integer,String,Integer,String)'
  nameWithType: Void.addHtmlElement(Integer,String,Integer,String)
  fullName: CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,String)
  type: Method
  summary: "\nAdds an HTML element to the associated screen when this script is executed as the load script for a screen.\n"
  remarks: "\nYou can optionally provide the zero-based position of the element in the list of elements for the screen.\n"
  syntax: 
    content: HtmlElement addHtmlElement(Integer id, String name, Integer type, String config)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: "The ID of this HTML element. Normally not relevant."
    - id: name
      type: CRMScript.Global.String
      description: "The unique name of this HTML element. Used for accessing it later."
    - id: type
      type: CRMScript.Global.Integer
      description: "The type of this element. Types are documented under bLogic."
    - id: config
      type: CRMScript.Global.String
      description: "The configuration string for the HTML element. Line-based, same as configuration text for elements in Screen definition."
    return:
      type: CRMScript.Native.HtmlElement
      description: "The element that was added."
  example: 
- uid: CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,String,Integer)
  commentId: M:CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,String,Integer)
  id: 'addHtmlElement(Integer,String,Integer,String,Integer)'
  so.intellisense: Void.addHtmlElement
  langs:
  - crmscript
  name: 'addHtmlElement(Integer,String,Integer,String,Integer)'
  nameWithType: Void.addHtmlElement(Integer,String,Integer,String,Integer)
  fullName: CRMScript.Global.Void.addHtmlElement(Integer,String,Integer,String,Integer)
  type: Method
  summary: "\nAdds an HTML element to the associated screen with a zero-based position when this script is executed as the load script for a screen.\n"
  remarks:
  syntax: 
    content: HtmlElement addHtmlElement(Integer id, String name, Integer type, String config, Integer position)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: "The ID of this HTML element. Normally not relevant."
    - id: name
      type: CRMScript.Global.String
      description: "The unique name of this HTML element. Used for accessing it later."
    - id: type
      type: CRMScript.Global.Integer
      description: "The type of this element. Types are documented under bLogic."
    - id: config
      type: CRMScript.Global.String
      description: "The configuration string for the HTML element. Line-based, same as configuration text for elements in Screen definition."
    - id: position
      type: CRMScript.Global.Integer
      description: "The zero-based position of the element in the list of elements for the screen."
    return:
      type: CRMScript.Native.HtmlElement
      description: "The element that was added."
  example: 
- uid: CRMScript.Global.Void.assert(Bool)
  commentId: M:CRMScript.Global.Void.assert(Bool)
  id: 'assert(Bool)'
  so.intellisense: Void.assert
  so.version: 3.1.7
  langs:
  - crmscript
  name: 'assert(Bool)'
  nameWithType: Void.assert(Bool)
  fullName: CRMScript.Global.Void.assert(Bool)
  type: Method
  summary: "\nThrows an AssertException if condition is false. The exception contains the line number where the assert occurred.\n"
  remarks: "\nUsed primarily with unit testing.\n"
  syntax: 
    content: Void assert(Bool condition)
    parameters:
    - id: condition
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.assertEquals(Bool,Bool)
  commentId: M:CRMScript.Global.Void.assertEquals(Bool,Bool)
  id: 'assertEquals(Bool,Bool)'
  so.intellisense: Void.assertEquals
  so.version: 3.1.7
  langs:
  - crmscript
  name: 'assertEquals(Bool,Bool)'
  nameWithType: Void.assertEquals(Bool,Bool)
  fullName: CRMScript.Global.Void.assertEquals(Bool,Bool)
  type: Method
  summary: "\nThrows an AssertException if the two parameters are not equal. Specifically: if bool1!=bool2. The exception contains the line number where the assert occurred.\n"
  remarks: "\nUsed primarily with unit testing.\n"
  syntax: 
    content: Void assertEquals(Bool bool1, Bool bool2)
    parameters:
    - id: bool1
      type: CRMScript.Global.Bool
      description: "The first value to test"
    - id: bool2
      type: CRMScript.Global.Bool
      description: "The second value to test."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.assertEquals(Float,Float)
  commentId: M:CRMScript.Global.Void.assertEquals(Float,Float)
  id: 'assertEquals(Float,Float)'
  so.intellisense: Void.assertEquals
  so.version: 3.1.7
  langs:
  - crmscript
  name: 'assertEquals(Float,Float)'
  nameWithType: Void.assertEquals(Float,Float)
  fullName: CRMScript.Global.Void.assertEquals(Float,Float)
  type: Method
  summary: "\nThrows an AssertException if the two parameters are not equal. Specifically: if float1!=float2. The exception contains the line number where the assert occurred.\n"
  remarks: "\nUsed primarily with unit testing.\n"
  syntax: 
    content: Void assertEquals(Float float1, Float float2)
    parameters:
    - id: float1
      type: CRMScript.Global.Float
      description: "The first value to test"
    - id: float2
      type: CRMScript.Global.Float
      description: "The second value to test."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.assertEquals(Integer,Integer)
  commentId: M:CRMScript.Global.Void.assertEquals(Integer,Integer)
  id: 'assertEquals(Integer,Integer)'
  so.intellisense: Void.assertEquals
  so.version: 3.1.7
  langs:
  - crmscript
  name: 'assertEquals(Integer,Integer)'
  nameWithType: Void.assertEquals(Integer,Integer)
  fullName: CRMScript.Global.Void.assertEquals(Integer,Integer)
  type: Method
  summary: "\nThrows an AssertException if the two parameters are not equal. Specifically: if integer1!=integer2. The exception contains the line number where the assert occurred.\n"
  remarks: "\nUsed primarily with unit testing.\n"
  syntax: 
    content: Void assertEquals(Integer integer1, Integer integer2)
    parameters:
    - id: integer1
      type: CRMScript.Global.Integer
      description: "The first value to test"
    - id: integer2
      type: CRMScript.Global.Integer
      description: "The second value to test."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.assertEquals(String,String)
  commentId: M:CRMScript.Global.Void.assertEquals(String,String)
  id: 'assertEquals(String,String)'
  so.intellisense: Void.assertEquals
  so.version: 3.1.7
  langs:
  - crmscript
  name: 'assertEquals(String,String)'
  nameWithType: Void.assertEquals(String,String)
  fullName: CRMScript.Global.Void.assertEquals(String,String)
  type: Method
  summary: "\nThrows an AssertException if the two parameters are not equal. Specifically: if string1!=string2. The exception contains the line number where the assert occurred.\n"
  remarks: "\nUsed primarily with unit testing.\n"
  syntax: 
    content: Void assertEquals(String string1, String string2)
    parameters:
    - id: string1
      type: CRMScript.Global.String
      description: "The first value to test"
    - id: string2
      type: CRMScript.Global.String
      description: "The second value to test."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.buildUrl()
  commentId: M:CRMScript.Global.Void.buildUrl()
  id: 'buildUrl()'
  so.intellisense: Void.buildUrl
  so.version: 4.8.1
  langs:
  - crmscript
  name: 'buildUrl()'
  nameWithType: Void.buildUrl()
  fullName: CRMScript.Global.Void.buildUrl()
  type: Method
  summary: "\nReturns all POST and GET variables for the current URL.\n"
  remarks: 
  syntax: 
    content: String buildUrl()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "All POST and GET variables for the current URL."
  example: 
- uid: CRMScript.Global.Void.cgiWasPost()
  commentId: M:CRMScript.Global.Void.cgiWasPost()
  id: 'cgiWasPost()'
  so.intellisense: Void.cgiWasPost
  so.version: 4.2.0
  langs:
  - crmscript
  name: 'cgiWasPost()'
  nameWithType: Void.cgiWasPost()
  fullName: CRMScript.Global.Void.cgiWasPost()
  type: Method
  summary: "\nChecks if the CGI HTTP request was of type POST.\n"
  remarks: "\nService uses only GET and POST. POST is used when submitting most forms, a GET request is usually someone clicking a link, first time entering the bLogic screen.\n"
  syntax: 
    content: Bool cgiWasPost()
    parameters: []
    return:
      type: CRMScript.Global.Bool
      description: "True if the CGI HTTP request was of type POST (not GET or anything else)."
  example: 
- uid: CRMScript.Global.Void.checkReply(String)
  commentId: M:CRMScript.Global.Void.checkReply(String)
  id: 'checkReply(String)'
  so.intellisense: Void.checkReply
  so.version: 4.0.99
  langs:
  - crmscript
  name: 'checkReply(String)'
  nameWithType: Void.checkReply(String)
  fullName: CRMScript.Global.Void.checkReply(String)
  type: Method
  summary: "\nChecks if it is ok to send a receipt to the indicated email address.\n"
  remarks: "\nEvery time this method is called, it records that an email has been sent to the email address. If this is done too often within a specified time interval (specified in config table), you should not send an email to the email address to prevent swamping.\n"
  syntax: 
    content: Bool checkReply(String email)
    parameters:
    - id: email
      type: CRMScript.Global.String
      description: "Address to check."
    return:
      type: CRMScript.Global.Bool
      description: "True if it is ok to send a receipt to the indicated email address; otherwise, false."
  example: 
- uid: CRMScript.Global.Void.combineHtmlStrings(Vector)
  commentId: M:CRMScript.Global.Void.combineHtmlStrings(Vector)
  id: 'combineHtmlStrings(Vector)'
  so.intellisense: Void.combineHtmlStrings
  so.version: 4.9.1
  langs:
  - crmscript
  name: 'combineHtmlStrings(Vector)'
  nameWithType: Void.combineHtmlStrings(Vector)
  fullName: CRMScript.Global.Void.combineHtmlStrings(Vector)
  type: Method
  summary: "\nTakes several strings, each containing an HTML document, and combines them into one HTML string.\n"
  remarks: "\nThe head contents in each string is combined into the head tag of the output string, except for the title tag. The title tag is taken from the first string in the vector.<p></p>\nThe body content is likewise combined into the body tag of the output string. All strings except for the first will have their body tags converted to div tags.\n"
  syntax: 
    content: String combineHtmlStrings(Vector htmlStrings)
    parameters:
    - id: htmlStrings
      type: CRMScript.Native.Vector
      description: "Multiple strings, each containing an HTML document."
    return:
      type: CRMScript.Global.String
      description: "HTML string."
  example: 
- uid: CRMScript.Global.Void.convertStatus(Integer)
  commentId: M:CRMScript.Global.Void.convertStatus(Integer)
  id: 'convertStatus(Integer)'
  so.intellisense: Void.convertStatus
  so.version: 3.0.11
  langs:
  - crmscript
  name: 'convertStatus(Integer)'
  nameWithType: Void.convertStatus(Integer)
  fullName: CRMScript.Global.Void.convertStatus(Integer)
  type: Method
  summary: "\nConverts a status given by its integer identifier to its string representation.\n"
  remarks: "\nThe method is language-dependent.\n"
  syntax: 
    content: String convertStatus(Integer status)
    parameters:
    - id: status
      type: CRMScript.Global.Integer
      description: "The status to convert."
    return:
      type: CRMScript.Global.String
      description: "The status as a string."
  example: 
- uid: CRMScript.Global.Void.copyCRMDocumentToAttachment(Integer)
  commentId: M:CRMScript.Global.Void.copyCRMDocumentToAttachment(Integer)
  id: 'copyCRMDocumentToAttachment(Integer)'
  so.intellisense: Void.copyCRMDocumentToAttachment
  so.version: 8.5R06
  langs:
  - crmscript
  name: 'copyCRMDocumentToAttachment(Integer)'
  nameWithType: Void.copyCRMDocumentToAttachment(Integer)
  fullName: CRMScript.Global.Void.copyCRMDocumentToAttachment(Integer)
  type: Method
  summary: "\nCopies the content of a CRM Document, given the ID, to a new Service attachment.\n"
  remarks: "\nThere is no sync between these two, so only a copy at the point of time is made.\n"
  syntax: 
    content: Integer copyCRMDocumentToAttachment(Integer crmDocId)
    parameters:
    - id: crmDocId
      type: CRMScript.Global.Integer
      description: "The ID of the CRM Document to copy."
    return:
      type: CRMScript.Global.Integer
      description: "The ID of the newly created Service attachment."
  example: 
- uid: CRMScript.Global.Void.debugWait(String)
  commentId: M:CRMScript.Global.Void.debugWait(String)
  id: 'debugWait(String)'
  so.intellisense: Void.debugWait
  langs:
  - crmscript
  name: 'debugWait(String)'
  nameWithType: Void.debugWait(String)
  fullName: CRMScript.Global.Void.debugWait(String)
  type: Method
  summary: "\nPauses the script if it is in debug mode (see enableDebug). Stores the info string in the database entry for the current debug session so that it can be viewed in the debugger.\n"
  remarks: 
  syntax: 
    content: Void debugWait(String info)
    parameters:
    - id: info
      type: CRMScript.Global.String
      description: "String to display in the debugger."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.decodeBase64(String)
  commentId: M:CRMScript.Global.Void.decodeBase64(String)
  id: 'decodeBase64(String)'
  so.intellisense: Void.decodeBase64
  so.version: 4.0.0
  langs:
  - crmscript
  name: 'decodeBase64(String)'
  nameWithType: Void.decodeBase64(String)
  fullName: CRMScript.Global.Void.decodeBase64(String)
  type: Method
  summary: "\nDecodes a base64-encoded string into a byte array.\n"
  remarks: 
  syntax: 
    content: Byte[] decodeBase64(String base64)
    parameters:
    - id: base64
      type: CRMScript.Global.String
      description: "A base64 encoded string."
    return:
      type: CRMScript.Global.Byte[]
      description: "Decoded byte array."
  example: 
- uid: CRMScript.Global.Void.decodeBase64AsStream(String)
  commentId: M:CRMScript.Global.Void.decodeBase64AsStream(String)
  id: 'decodeBase64AsStream(String)'
  so.intellisense: Void.decodeBase64AsStream
  so.version: 8.5R08
  langs:
  - crmscript
  name: 'decodeBase64AsStream(String)'
  nameWithType: Void.decodeBase64AsStream(String)
  fullName: CRMScript.Global.Void.decodeBase64AsStream(String)
  type: Method
  summary: "\nDecodes a base64-encoded string into an NSStream.\n"
  remarks: 
  syntax: 
    content: NSStream decodeBase64AsStream(String base64)
    parameters:
    - id: base64
      type: CRMScript.Global.String
      description: "A base64-encoded string."
    return:
      type: CRMScript.NetServer.NSStream
      description:
  example: 
- uid: CRMScript.Global.Void.decodeDBValue(String)
  commentId: M:CRMScript.Global.Void.decodeDBValue(String)
  id: 'decodeDBValue(String)'
  so.intellisense: Void.decodeDBValue
  so.version: 8.4R02
  langs:
  - crmscript
  name: 'decodeDBValue(String)'
  nameWithType: Void.decodeDBValue(String)
  fullName: CRMScript.Global.Void.decodeDBValue(String)
  type: Method
  summary: "\nDecodes the value returned by for example NetServer archives, i.e [I:23], and returns the value as a string.\n"
  remarks: "\nYou must convert it into the preferred type if used as anything else than a string.\n"
  syntax: 
    content: String decodeDBValue(String dbValue)
    parameters:
    - id: dbValue
      type: CRMScript.Global.String
      description: "The value, including the prefix, that is returned by NetServer archives."
    return:
      type: CRMScript.Global.String
      description:
  example: 
- uid: CRMScript.Global.Void.enableDebug(String)
  commentId: M:CRMScript.Global.Void.enableDebug(String)
  id: 'enableDebug(String)'
  so.intellisense: Void.enableDebug
  langs:
  - crmscript
  name: 'enableDebug(String)'
  nameWithType: Void.enableDebug(String)
  fullName: CRMScript.Global.Void.enableDebug(String)
  type: Method
  summary: "\nEnables debugging for the current script, with the given ID. If the executing environment contains the same debugId, then this script will enter debug mode.\n"
  remarks: "\nTo set the debugId in a browser, use the &quot;?action=debug&quot; parameter. It is possible to debug a script, while it will continue to run as normal for other users.\n"
  syntax: 
    content: Void enableDebug(String debugId)
    parameters:
    - id: debugId
      type: CRMScript.Global.String
      description: "A string that will be compared with the debugId in the executing environment."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.encodeBase32(Byte[])
  commentId: M:CRMScript.Global.Void.encodeBase32(Byte[])
  id: 'encodeBase32(Byte[])'
  so.intellisense: Void.encodeBase32
  so.version: 10.1.9
  langs:
  - crmscript
  name: 'encodeBase32(Byte[])'
  nameWithType: Void.encodeBase32(Byte[])
  fullName: CRMScript.Global.Void.encodeBase32(Byte[])
  type: Method
  summary: "\nEncodes bytes to a base32 string.\n"
  remarks: 
  syntax: 
    content: String encodeBase32(Byte[] data)
    parameters:
    - id: data
      type: CRMScript.Global.Byte[]
      description: "Data to encode."
    return:
      type: CRMScript.Global.String
      description: "A base32-encoded string."
  example: 
- uid: CRMScript.Global.Void.encodeBase64(Byte[])
  commentId: M:CRMScript.Global.Void.encodeBase64(Byte[])
  id: 'encodeBase64(Byte[])'
  so.intellisense: Void.encodeBase64
  so.version: 4.0.0
  langs:
  - crmscript
  name: 'encodeBase64(Byte[])'
  nameWithType: Void.encodeBase64(Byte[])
  fullName: CRMScript.Global.Void.encodeBase64(Byte[])
  type: Method
  summary: "\nEncodes bytes to a base64 string.\n"
  remarks: "\nYou can optionally pass a Bool to control if the encoded data should be wrapped with new lines or not.\n"
  syntax: 
    content: String encodeBase64(Byte[] data)
    parameters:
    - id: data
      type: CRMScript.Global.Byte[]
      description: "Data to encode."
    return:
      type: CRMScript.Global.String
      description: "A base64-encoded string."
  example: 
- uid: CRMScript.Global.Void.encodeBase64(Byte[],Bool)
  commentId: M:CRMScript.Global.Void.encodeBase64(Byte[],Bool)
  id: 'encodeBase64(Byte[],Bool)'
  so.intellisense: Void.encodeBase64
  so.version: 8.4R05
  langs:
  - crmscript
  name: 'encodeBase64(Byte[],Bool)'
  nameWithType: Void.encodeBase64(Byte[],Bool)
  fullName: CRMScript.Global.Void.encodeBase64(Byte[],Bool)
  type: Method
  summary: "\nEncodes bytes to a base64 string specifying if the encoded data should be wrapped with new lines or not.\n"
  remarks:
  syntax: 
    content: String encodeBase64(Byte[] data, bool wrapLines)
    parameters:
    - id: data
      type: CRMScript.Global.Byte[]
      description: "Data to encode"
    - id: wrapLines
      type: CRMScript.Global.Bool
      description: "Controls if the encoded data should be wrapped with new lines."
    return:
      type: CRMScript.Global.String
      description: "A base64-encoded string."
  example: 
- uid: CRMScript.Global.Void.encodeBase64(NSStream)
  commentId: M:CRMScript.Global.Void.encodeBase64(NSStream)
  id: 'encodeBase64(NSStream)'
  so.intellisense: Void.encodeBase64
  so.version: 8.5R08
  langs:
  - crmscript
  name: 'encodeBase64(NSStream)'
  nameWithType: Void.encodeBase64(NSStream)
  fullName: CRMScript.Global.Void.encodeBase64(NSStream)
  type: Method
  summary: "\nEncodes bytes to a base64 string.\n"
  remarks: "\nYou can optionally pass a Bool to control if the encoded data should be wrapped with new lines or not.\n"
  syntax: 
    content: String encodeBase64(NSStream data)
    parameters:
    - id: data
      type: CRMScript.NetServer.NSStream
      description: "Data to encode."
    return:
      type: CRMScript.Global.String
      description: "A base64-encoded string."
  example: 
- uid: CRMScript.Global.Void.encodeBase64(NSStream,Bool)
  commentId: M:CRMScript.Global.Void.encodeBase64(NSStream,Bool)
  id: 'encodeBase64(NSStream,Bool)'
  so.intellisense: Void.encodeBase64
  so.version: 8.5R08
  langs:
  - crmscript
  name: 'encodeBase64(NSStream,Bool)'
  nameWithType: Void.encodeBase64(NSStream,Bool)
  fullName: CRMScript.Global.Void.encodeBase64(NSStream,Bool)
  type: Method
  summary: "\nEncodes bytes to a base64 string specifying if the encoded data should be wrapped with new lines or not.\n"
  remarks:
  syntax: 
    content: String encodeBase64(NSStream data, bool wrapLines)
    parameters:
    - id: data
      type: CRMScript.NetServer.NSStream
      description: "Data to encode"
    - id: wrapLines
      type: CRMScript.Global.Bool
      description: "Controls if the encoded data should be wrapped with new lines."
    return:
      type: CRMScript.Global.String
      description: "A base64-encoded string."
  example: 
- uid: CRMScript.Global.Void.encodeHMACSHA1(Byte[],Byte[])
  commentId: M:CRMScript.Global.Void.encodeHMACSHA1(Byte[],Byte[])
  id: 'encodeHMACSHA1(Byte[],Byte[])'
  so.intellisense: Void.encodeHMACSHA1
  so.version: 10.1.9
  langs:
  - crmscript
  name: 'encodeHMACSHA1(Byte[],Byte[])'
  nameWithType: Void.encodeHMACSHA1(Byte[],Byte[])
  fullName: CRMScript.Global.Void.encodeHMACSHA1(Byte[],Byte[])
  type: Method
  summary: "\nGenerates and returns a hash from a specified key-value pair using the HMAC SHA1 encoding algorithm.\n"
  remarks: "\nThis can be used to ensure data integrity. The hash cannot be decrypted back.\n"
  syntax: 
    content: Byte[] encodeHMACSHA1(Byte[] key, Byte[] value)
    parameters:
    - id: key
      type: CRMScript.Global.Byte[]
      description: "The key used to create the hash."
    - id: value
      type: CRMScript.Global.Byte[]
      description: "The value to be hashed."
    return:
      type: CRMScript.Global.Byte[]
      description: "The generated hash."
  example: 
- uid: CRMScript.Global.Void.encodeHMACSHA1(String,String)
  commentId: M:CRMScript.Global.Void.encodeHMACSHA1(String,String)
  id: 'encodeHMACSHA1(String,String)'
  so.intellisense: Void.encodeHMACSHA1
  so.version: 8.4R09
  langs:
  - crmscript
  name: 'encodeHMACSHA1(String,String)'
  nameWithType: Void.encodeHMACSHA1(String,String)
  fullName: CRMScript.Global.Void.encodeHMACSHA1(String,String)
  type: Method
  summary: "\nGenerates and returns a hash from a specified key-value pair using the HMAC SHA1 encoding algorithm.\n"
  remarks: "\nThis can be used to ensure data integrity. The hash cannot be decrypted back.\n"
  syntax: 
    content: String encodeHMACSHA1(String key, String value)
    parameters:
    - id: key
      type: CRMScript.Global.String
      description: "The key used to creating the hash"
    - id: value
      type: CRMScript.Global.String
      description: "The value to be hashed."
    return:
      type: CRMScript.Global.String
      description: "The generated hash (formatted as hex)."
  example: 
- uid: CRMScript.Global.Void.encodeHMACSHA256(String,String)
  commentId: M:CRMScript.Global.Void.encodeHMACSHA256(String,String)
  id: 'encodeHMACSHA256(String,String)'
  so.intellisense: Void.encodeHMACSHA256
  so.version: 8.4R05
  langs:
  - crmscript
  name: 'encodeHMACSHA256(String,String)'
  nameWithType: Void.encodeHMACSHA256(String,String)
  fullName: CRMScript.Global.Void.encodeHMACSHA256(String,String)
  type: Method
  summary: "\nGenerates and returns a hash from a specified key-value pair using the HMAC SHA256 encoding algorithm.\n"
  remarks: "\nThis can be used to ensure data integrity. The hash cannot be decrypted back.\n"
  syntax: 
    content: Byte[] encodeHMACSHA256(String key, String value)
    parameters:
    - id: key
      type: CRMScript.Global.String
      description: "The key used to creating the hash"
    - id: value
      type: CRMScript.Global.String
      description: "The value to be hashed."
    return:
      type: CRMScript.Global.Byte[]
      description: "The generated hash."
  example: 
- uid: CRMScript.Global.Void.encodeHMACSHA512(String,String)
  commentId: M:CRMScript.Global.Void.encodeHMACSHA512(String,String)
  id: 'encodeHMACSHA512(String,String)'
  so.intellisense: Void.encodeHMACSHA512
  so.version: 9.2 R11
  langs:
  - crmscript
  name: 'encodeHMACSHA512(String,String)'
  nameWithType: Void.encodeHMACSHA512(String,String)
  fullName: CRMScript.Global.Void.encodeHMACSHA512(String,String)
  type: Method
  summary: "\nGenerates and returns a hash from a specified key-value pair using the HMAC SHA512 encoding algorithm.\n"
  remarks: "\nThis can be used to ensure data integrity. The hash cannot be decrypted back.\n"
  syntax: 
    content: Byte[] encodeHMACSHA512(String key, String value)
    parameters:
    - id: key
      type: CRMScript.Global.String
      description: "The key used to creating the hash"
    - id: value
      type: CRMScript.Global.String
      description: "The value to be hashed."
    return:
      type: CRMScript.Global.Byte[]
      description: "The generated hash."
  example: 
- uid: CRMScript.Global.Void.encodeSHA1(String)
  commentId: M:CRMScript.Global.Void.encodeSHA1(String)
  id: 'encodeSHA1(String)'
  so.intellisense: Void.encodeSHA1
  so.version: 8.1
  langs:
  - crmscript
  name: 'encodeSHA1(String)'
  nameWithType: Void.encodeSHA1(String)
  fullName: CRMScript.Global.Void.encodeSHA1(String)
  type: Method
  summary: "\nGenerates and returns a hash from a specified value using the SHA1 encoding algorithm.\n"
  remarks: "\nThis can be used to ensure data integrity. The hash cannot be decrypted back.\n"
  syntax: 
    content: String encodeSHA1(String value)
    parameters:
    - id: value
      type: CRMScript.Global.String
      description: "The value to be hashed."
    return:
      type: CRMScript.Global.String
      description: "The generated hash (formatted as hex)."
  example: 
  - "\n<pre><code>String s = &quot;Hello world!&quot;;\n\nprintLine(encodeSHA1(&quot;Hello there!&quot;)); // Prints &quot;6b19cb3790b6da8f7c34b4d8895d78a56d078624&quot;\nprintLine(encodeSHA1(&quot;Hello world!&quot;)); // Prints &quot;d3486ae9136e7856bc42212385ea797094475802&quot;\nprintLine(encodeSHA1(s));              // Prints &quot;d3486ae9136e7856bc42212385ea797094475802&quot;</code></pre>\n"
- uid: CRMScript.Global.Void.encodeSHA256(String,String)
  commentId: M:CRMScript.Global.Void.encodeSHA256(String,String)
  id: 'encodeSHA256(String,String)'
  so.intellisense: Void.encodeSHA256
  so.version: 8.1
  langs:
  - crmscript
  name: 'encodeSHA256(String,String)'
  nameWithType: Void.encodeSHA256(String,String)
  fullName: CRMScript.Global.Void.encodeSHA256(String,String)
  type: Method
  summary: "\nGenerates and returns a hash from a specified key-value pair using the SHA256 encoding algorithm.\n"
  remarks: "\nThis can be used to ensure data integrity. The hash cannot be decrypted back.\n"
  syntax: 
    content: String encodeSHA256(String key, String value)
    parameters:
    - id: key
      type: CRMScript.Global.String
      description: "The key used to creating the hash"
    - id: value
      type: CRMScript.Global.String
      description: "The value to be hashed."
    return:
      type: CRMScript.Global.String
      description: "The generated hash. The same key-value pair always returns the same hash (formatted as hex)."
  example: 
  - "\n<pre><code>String s = &quot;Hello world!&quot;;\n\nprintLine(encodeSHA256(&quot;test&quot;, &quot;Hello there!&quot;)); // Prints &quot;39bf407008986fa79eac9cb0b3c8da3fb46acdd6f71721e38e6c4bbf1d14c222&quot;\nprintLine(encodeSHA256(&quot;test&quot;, &quot;Hello world!&quot;)); // Prints &quot;1700f488c1e47cf1a8e8337c0a51d176291a5b4a200fe9bab866765a86edc0a4&quot;\nprintLine(encodeSHA256(&quot;test&quot;, s));              // Prints &quot;1700f488c1e47cf1a8e8337c0a51d176291a5b4a200fe9bab866765a86edc0a4&quot;</code></pre>\n"
- uid: CRMScript.Global.Void.executeDbiAgentSchedule(Integer,Map)
  commentId: M:CRMScript.Global.Void.executeDbiAgentSchedule(Integer,Map)
  id: 'executeDbiAgentSchedule(Integer,Map)'
  so.intellisense: Void.executeDbiAgentSchedule
  langs:
  - crmscript
  name: 'executeDbiAgentSchedule(Integer,Map)'
  nameWithType: Void.executeDbiAgentSchedule(Integer,Map)
  fullName: CRMScript.Global.Void.executeDbiAgentSchedule(Integer,Map)
  type: Method
  summary: "\nManually starts a DBI agent schedule. It is possible to supply a map of parameter values used by the schedule.\n"
  remarks: 
  syntax: 
    content: Void executeDbiAgentSchedule(Integer scheduleId, Map values)
    parameters:
    - id: scheduleId
      type: CRMScript.Global.Integer
      description: "The ID of the schedule to run"
    - id: values
      type: CRMScript.Native.Map
      description: "Name-value pairs with parameters."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.executeMacro(String)
  commentId: M:CRMScript.Global.Void.executeMacro(String)
  id: 'executeMacro(String)'
  so.intellisense: Void.executeMacro
  so.version: 7.5
  langs:
  - crmscript
  name: 'executeMacro(String)'
  nameWithType: Void.executeMacro(String)
  fullName: CRMScript.Global.Void.executeMacro(String)
  type: Method
  summary: "\nThe outermost function for executing a macro.\n"
  remarks: 
  syntax: 
    content: String executeMacro(String parameters)
    parameters:
    - id: parameters
      type: CRMScript.Global.String
      description: "Input parameters."
    return:
      type: CRMScript.Global.String
      description:
  example: 
- uid: CRMScript.Global.Void.executeScript(String,Map)
  commentId: M:CRMScript.Global.Void.executeScript(String,Map)
  id: 'executeScript(String,Map)'
  so.intellisense: Void.executeScript
  so.version: 4.10.1
  langs:
  - crmscript
  name: 'executeScript(String,Map)'
  nameWithType: Void.executeScript(String,Map)
  fullName: CRMScript.Global.Void.executeScript(String,Map)
  type: Method
  remarks: "\nFunction to execute CRMScript code supplied.\n"
  syntax: 
    content: String executeScript(String script, Map values)
    parameters:
    - id: script
      type: CRMScript.Global.String
      description: "Actual CRMScript code to execute"
    - id: values
      type: CRMScript.Native.Map
      description: 
    return:
      type: CRMScript.Global.String
      description:
  example: 
- uid: CRMScript.Global.Void.executeSQLQuery(String)
  commentId: M:CRMScript.Global.Void.executeSQLQuery(String)
  id: 'executeSQLQuery(String)'
  so.intellisense: Void.executeSQLQuery
  so.envir: onsite
  langs:
  - crmscript
  name: 'executeSQLQuery(String)'
  nameWithType: Void.executeSQLQuery(String)
  fullName: CRMScript.Global.Void.executeSQLQuery(String)
  type: Method
  summary: "\nExecutes the specified SQL statement. <strong>This function is not available in CRM Online!</strong>\n"
  remarks: "\nIn case of an error in the SQL statement, an exception will be thrown.\n"
  syntax: 
    content: Void executeSQLQuery(String sql)
    parameters:
    - id: sql
      type: CRMScript.Global.String
      description: "SQL statement to run."
    return:
      type: CRMScript.Global.Void
      description: "Does not return anything!"
  example: 
- uid: CRMScript.Global.Void.exitWithMessage(String)
  commentId: M:CRMScript.Global.Void.exitWithMessage(String)
  id: 'exitWithMessage(String)'
  so.intellisense: Void.exitWithMessage
  so.version: 4.0.0
  langs:
  - crmscript
  name: 'exitWithMessage(String)'
  nameWithType: Void.exitWithMessage(String)
  fullName: CRMScript.Global.Void.exitWithMessage(String)
  type: Method
  summary: "\nExits running the rest of the script and displays a message with text from the parameter.\n"
  remarks: "\nUseful for exiting a script when for example detecting that the current user doesn't have access to a ticket.\n"
  syntax: 
    content: Void exitWithMessage(String message)
    parameters:
    - id: message
      type: CRMScript.Global.String
      description: "The message to display."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.faqSearch(Integer,Integer,String,Parser,Integer)
  commentId: M:CRMScript.Global.Void.faqSearch(Integer,Integer,String,Parser,Integer)
  id: 'faqSearch(Integer,Integer,String,Parser,Integer)'
  so.intellisense: Void.faqSearch
  so.version: 3.1.3
  langs:
  - crmscript
  name: 'faqSearch(Integer,Integer,String,Parser,Integer)'
  nameWithType: Void.faqSearch(Integer,Integer,String,Parser,Integer)
  fullName: CRMScript.Global.Void.faqSearch(Integer,Integer,String,Parser,Integer)
  type: Method
  summary: "\nSearches FAQ using the same search engine as the customer pages do and fills the parser with the result.\n"
  remarks: "\nAvailable parser variables (sorted, where the top most is the best hit):\n<h3>Category parser array</h3><ul><li>faq.categoryId - the id of the matching category</li><li>faq.categoryName - the name of the matching category</li><li>faq.categoryLink - a URL to the customer pages to the matching category</li><li>faq.categoryDescription - the description of the matching category</li><li>faq.categoryScore - the score of the matching category, given in percentage with 2 decimals precision</li></ul><h3>Entry parser array</h3><ul><li>faq.entryId - the ID of the matching entry</li><li>faq.entryName - the name of the matching entry</li><li>faq.entryLink - a URL to the customer pages to the matching entry</li><li>faq.entryQuestion - the question part of the matching entry</li><li>faq.entryScore - the score of the matching entry, given in percentage with 2 decimals precision</li></ul>\n"
  syntax: 
    content: Parser faqSearch(Integer root, Integer access, String message, Parser p, Integer max)
    parameters:
    - id: root
      type: CRMScript.Global.Integer
      description: "The ID of the category folder where you want to search from. -1 for the whole tree"
    - id: access
      type: CRMScript.Global.Integer
      description: "The minimum access one needs for this search. AccessPrivate = 1; AccessInternal = 2; AccessRegisteredCustomers = 3; AccessPublic = 4"
    - id: message
      type: CRMScript.Global.String
      description: "The words to search for. It will search for words containing one or more of these. Better hits gets a better score"
    - id:
      type: CRMScript.Native.Parser
      description: "A parser with a script for checking further access. Use an empty parser if you do not want this. The script is in the same format as used in the GUI."
    - id: max
      type: CRMScript.Global.Integer
      description: "The max number of hits."
    return:
      type: CRMScript.Native.Parser."
  example: 
- uid: CRMScript.Global.Void.findReplyTemplateToMerge(Integer)
  commentId: M:CRMScript.Global.Void.findReplyTemplateToMerge(Integer)
  id: 'findReplyTemplateToMerge(Integer)'
  so.intellisense: Void.findReplyTemplateToMerge
  so.version: 4.3.3
  langs:
  - crmscript
  name: 'findReplyTemplateToMerge(Integer)'
  nameWithType: Void.findReplyTemplateToMerge(Integer)
  fullName: CRMScript.Global.Void.findReplyTemplateToMerge(Integer)
  type: Method
  summary: "\nIf you have configured any categories to use specified ReplyTemplates, use this method to calculate the ReplyTemplate ID.\n"
  remarks: 
  syntax: 
    content: Integer findReplyTemplateToMerge(Integer categoryId)
    parameters:
    - id: categoryId
      type: CRMScript.Global.Integer
      description: "The category ID to locate the reply template for."
    return:
      type: CRMScript.Global.Integer
      description: "The ID of the reply template to use."
  example: 
- uid: CRMScript.Global.Void.flushCaches()
  commentId: M:CRMScript.Global.Void.flushCaches()
  id: 'flushCaches()'
  so.intellisense: Void.flushCaches
  so.version: 7.0
  langs:
  - crmscript
  name: 'flushCaches()'
  nameWithType: Void.flushCaches()
  fullName: CRMScript.Global.Void.flushCaches()
  type: Method
  summary: "\nFlushes the caches in NetServer.\n"
  remarks: 
  syntax: 
    content: Void flushCaches()
    parameters: []
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.forwardMail(String,String,Integer)
  commentId: M:CRMScript.Global.Void.forwardMail(String,String,Integer)
  id: 'forwardMail(String,String,Integer)'
  so.intellisense: Void.forwardMail
  langs:
  - crmscript
  name: 'forwardMail(String,String,Integer)'
  nameWithType: Void.forwardMail(String,String,Integer)
  fullName: CRMScript.Global.Void.forwardMail(String,String,Integer)
  type: Method
  summary: "Forwards preformatted email.\n"
  remarks: 
  syntax: 
    content: Void forwardMail(String mail, String to, Integer ticketId)
    parameters:
    - id: mail
      type: CRMScript.Global.String
      description: "Pre-formatted mail"
    - id: to
      type: CRMScript.Global.String
      description: "Pre-formatted mail"
    - id: ticketId
      type: CRMScript.Global.Integer
      description: "Tag."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.getActiveUser()
  commentId: M:CRMScript.Global.Void.getActiveUser()
  id: 'getActiveUser()'
  so.intellisense: Void.getActiveUser
  so.version: 4.10.1
  langs:
  - crmscript
  name: 'getActiveUser()'
  nameWithType: Void.getActiveUser()
  fullName: CRMScript.Global.Void.getActiveUser()
  type: Method
  summary: "\nReturns a reference to the active user instance.\n"
  remarks: 
  syntax: 
    content: User getActiveUser()
    parameters: []
    return:
      type: CRMScript.Native.User
      description: "A reference to the active user instance."
  example: 
- uid: CRMScript.Global.Void.getAgentId(String)
  commentId: M:CRMScript.Global.Void.getAgentId(String)
  id: 'getAgentId(String)'
  so.intellisense: Void.getAgentId
  so.version: 4.2.1
  langs:
  - crmscript
  name: 'getAgentId(String)'
  nameWithType: Void.getAgentId(String)
  fullName: CRMScript.Global.Void.getAgentId(String)
  type: Method
  summary: "\nReturns the ID of the agent matching the parameter.\n"
  remarks: 
  syntax: 
    content: Integer getAgentId(String idString)
    parameters:
    - id: idString
      type: CRMScript.Global.String
      description: "The ID string of the agent."
    return:
      type: CRMScript.Global.Integer
      description: "The ID of the agent matching the parameter; null if no match found."
  example: 
- uid: CRMScript.Global.Void.getAgentScheduleId(String)
  commentId: M:CRMScript.Global.Void.getAgentScheduleId(String)
  id: 'getAgentScheduleId(String)'
  so.intellisense: Void.getAgentScheduleId
  so.version: 4.2.0
  langs:
  - crmscript
  name: 'getAgentScheduleId(String)'
  nameWithType: Void.getAgentScheduleId(String)
  fullName: CRMScript.Global.Void.getAgentScheduleId(String)
  type: Method
  summary: "\nReturns the ID of the agent schedule with the given name.\n"
  remarks: 
  syntax: 
    content: Integer getAgentScheduleId(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "Name of the agent schedule."
    return:
      type: CRMScript.Global.Integer
      description: "The ID of the agent schedule with the given name; -1 if no agent schedule was found."
  example: 
- uid: CRMScript.Global.Void.getAttachmentsSize(Integer[])
  commentId: M:CRMScript.Global.Void.getAttachmentsSize(Integer[])
  id: 'getAttachmentsSize(Integer[])'
  so.intellisense: Void.getAttachmentsSize
  so.version: 8.4R07
  langs:
  - crmscript
  name: 'getAttachmentsSize(Integer[])'
  nameWithType: Void.getAttachmentsSize(Integer[])
  fullName: CRMScript.Global.Void.getAttachmentsSize(Integer[])
  type: Method
  summary: "\nGets the total byte size of the specified attachments.\n"
  remarks: 
  syntax: 
    content: Integer getAttachmentsSize(Integer[] attachmentIds)
    parameters:
    - id: attachmentIds
      type: CRMScript.Global.Integer[]
      description: "An array of IDs to the attachment you want to compute the size for."
    return:
      type: CRMScript.Global.Integer
      description: "The total size of the specified attachments."
  example: 
- uid: CRMScript.Global.Void.getCategoryIdFromFullname(String)
  commentId: M:CRMScript.Global.Void.getCategoryIdFromFullname(String)
  id: 'getCategoryIdFromFullname(String)'
  so.intellisense: Void.getCategoryIdFromFullname
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getCategoryIdFromFullname(String)'
  nameWithType: Void.getCategoryIdFromFullname(String)
  fullName: CRMScript.Global.Void.getCategoryIdFromFullname(String)
  type: Method
  summary: "\nFinds category ID from the category's full name.\n"
  remarks: 
  syntax: 
    content: Integer getCategoryIdFromFullname(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "Full name of category."
    return:
      type: CRMScript.Global.Integer
      description: "ID of category."
  example: 
- uid: CRMScript.Global.Void.getCgiContent()
  commentId: M:CRMScript.Global.Void.getCgiContent()
  id: 'getCgiContent()'
  so.intellisense: Void.getCgiContent
  so.version: 4.8.15
  langs:
  - crmscript
  name: 'getCgiContent()'
  nameWithType: Void.getCgiContent()
  fullName: CRMScript.Global.Void.getCgiContent()
  type: Method
  summary: "\nReturns the raw content of the HTTP request.\n"
  remarks: 
  syntax: 
    content: String getCgiContent()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The raw content of the HTTP request."
  example: 
- uid: CRMScript.Global.Void.getCgiUrl()
  commentId: M:CRMScript.Global.Void.getCgiUrl()
  id: 'getCgiUrl()'
  so.intellisense: Void.getCgiUrl
  langs:
  - crmscript
  name: 'getCgiUrl()'
  nameWithType: Void.getCgiUrl()
  fullName: CRMScript.Global.Void.getCgiUrl()
  type: Method
  summary: "\nReturns the cgiUrl value from the config table. For example, http://ejournal.company.com\n"
  remarks: "\nUsed for creating URLs.\n"
  syntax: 
    content: String getCgiUrl()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The string stored as the cgiUrl."
  example: 
- uid: CRMScript.Global.Void.getCgiVariable(String)
  commentId: M:CRMScript.Global.Void.getCgiVariable(String)
  id: 'getCgiVariable(String)'
  so.intellisense: Void.getCgiVariable
  langs:
  - crmscript
  name: 'getCgiVariable(String)'
  nameWithType: Void.getCgiVariable(String)
  fullName: CRMScript.Global.Void.getCgiVariable(String)
  type: Method
  summary: "\nReturns the CGI variable with the given name.\n"
  remarks: 
  syntax: 
    content: String getCgiVariable(String varName)
    parameters:
    - id: varName
      type: CRMScript.Global.String
      description: "The name of the CGI variable to return."
    return:
      type: CRMScript.Global.String
      description: "The CGI variable with the given name."
  example: 
- uid: CRMScript.Global.Void.getCgiVariableArray(String)
  commentId: M:CRMScript.Global.Void.getCgiVariableArray(String)
  id: 'getCgiVariableArray(String)'
  so.intellisense: Void.getCgiVariableArray
  so.version: 3.1.6
  langs:
  - crmscript
  name: 'getCgiVariableArray(String)'
  nameWithType: Void.getCgiVariableArray(String)
  fullName: CRMScript.Global.Void.getCgiVariableArray(String)
  type: Method
  summary: "\nReturns a string array of all CGI variables matching the given name\n"
  remarks: 
  syntax: 
    content: String[] getCgiVariableArray(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "Of the CGI variables to match."
    return:
      type: CRMScript.Global.String[]
      description: "All CGI variables matching the given name."
  example: 
- uid: CRMScript.Global.Void.getCgiVariables()
  commentId: M:CRMScript.Global.Void.getCgiVariables()
  id: 'getCgiVariables()'
  so.intellisense: Void.getCgiVariables
  so.version: 4.0.1
  langs:
  - crmscript
  name: 'getCgiVariables()'
  nameWithType: Void.getCgiVariables()
  fullName: CRMScript.Global.Void.getCgiVariables()
  type: Method
  summary: "\nReturns a map of all CGI variables.\n"
  remarks: 
  syntax: 
    content: Map getCgiVariables()
    parameters: []
    return:
      type: CRMScript.Native.Map
      description: "Map containing all CGI variables."
  example: 
- uid: CRMScript.Global.Void.getCookie(String)
  commentId: M:CRMScript.Global.Void.getCookie(String)
  id: 'getCookie(String)'
  so.intellisense: Void.getCookie
  so.envir: onsite
  langs:
  - crmscript
  name: 'getCookie(String)'
  nameWithType: Void.getCookie(String)
  fullName: CRMScript.Global.Void.getCookie(String)
  type: Method
  summary: "\nReturns the CGI cookie with the given name. <strong>This method is not available in CRM Online.</strong>\n"
  remarks: 
  syntax: 
    content: String getCookie(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "The name of the cookie to return."
    return:
      type: CRMScript.Global.String
      description: "The CGI cookie with the given name."
  example: 
- uid: CRMScript.Global.Void.getCurrent(String)
  commentId: M:CRMScript.Global.Void.getCurrent(String)
  id: 'getCurrent(String)'
  so.intellisense: Void.getCurrent
  langs:
  - crmscript
  name: 'getCurrent(String)'
  nameWithType: Void.getCurrent(String)
  fullName: CRMScript.Global.Void.getCurrent(String)
  type: Method
  summary: "\nGets the value of the given key from the map of values common to all of the SuperOffice web applications running.\n"
  remarks: 
  syntax: 
    content: String getCurrent(String key)
    parameters:
    - id: key
      type: CRMScript.Global.String
      description: "The key to get the value for."
    return:
      type: CRMScript.Global.String
      description: "The corresponding value."
  example: 
- uid: CRMScript.Global.Void.getCurrentDate()
  commentId: M:CRMScript.Global.Void.getCurrentDate()
  id: 'getCurrentDate()'
  so.intellisense: Void.getCurrentDate
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getCurrentDate()'
  nameWithType: Void.getCurrentDate()
  fullName: CRMScript.Global.Void.getCurrentDate()
  type: Method
  summary: "\nReturns the current date.\n"
  remarks: 
  syntax: 
    content: Date getCurrentDate()
    parameters: []
    return:
      type: CRMScript.Global.Date
      description: "The current date."
  example: 
  - "\n<pre><code>print(getCurrentDate().toString());</code></pre>Prints the date in YYYY-MM-DD format.\n"
- uid: CRMScript.Global.Void.getCurrentDateTime()
  commentId: M:CRMScript.Global.Void.getCurrentDateTime()
  id: 'getCurrentDateTime()'
  so.intellisense: Void.getCurrentDateTime
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getCurrentDateTime()'
  nameWithType: Void.getCurrentDateTime()
  fullName: CRMScript.Global.Void.getCurrentDateTime()
  type: Method
  summary: "\nReturns the current date and time.\n"
  remarks: 
  syntax: 
    content: DateTime getCurrentDateTime()
    parameters: []
    return:
      type: CRMScript.Global.DateTime
      description:
  example: 
  - "\n<pre><code>print(getCurrentDateTime().toString());</code></pre>Prints the date and time in YYYY-MM-DD XX:XX:XX format.\n"
- uid: CRMScript.Global.Void.getCurrentTime()
  commentId: M:CRMScript.Global.Void.getCurrentTime()
  id: 'getCurrentTime()'
  so.intellisense: Void.getCurrentTime
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getCurrentTime()'
  nameWithType: Void.getCurrentTime()
  fullName: CRMScript.Global.Void.getCurrentTime()
  type: Method
  summary: "\nGets the current time.\n"
  remarks: 
  syntax: 
    content: Time getCurrentTime()
    parameters: []
    return:
      type: CRMScript.Global.Time
      description: "The current time."
  example: 
- uid: CRMScript.Global.Void.getCustomerMainEmail(Integer)
  commentId: M:CRMScript.Global.Void.getCustomerMainEmail(Integer)
  id: 'getCustomerMainEmail(Integer)'
  so.intellisense: Void.getCustomerMainEmail
  so.version: 7.5.0
  langs:
  - crmscript
  name: 'getCustomerMainEmail(Integer)'
  nameWithType: Void.getCustomerMainEmail(Integer)
  fullName: CRMScript.Global.Void.getCustomerMainEmail(Integer)
  type: Method
  summary: "\nReturns the main email of the specified customer.\n"
  remarks: 
  syntax: 
    content: String getCustomerMainEmail(Integer custId)
    parameters:
    - id: custId
      type: CRMScript.Global.Integer
      description: "The ID of the customer or person."
    return:
      type: CRMScript.Global.String
      description: "An empty string is returned if the customer does not have an email address or the customer does not exist."
  example: 
- uid: CRMScript.Global.Void.getDbiControl()
  commentId: M:CRMScript.Global.Void.getDbiControl()
  id: 'getDbiControl()'
  so.intellisense: Void.getDbiControl
  langs:
  - crmscript
  name: 'getDbiControl()'
  nameWithType: Void.getDbiControl()
  fullName: CRMScript.Global.Void.getDbiControl()
  type: Method
  summary: "\nUsed to access the global DBI control object, which is used for database integration.\n"
  remarks: 
  syntax: 
    content: DbiControl getDbiControl()
    parameters: []
    return:
      type: CRMScript.Native.DbiControl
      description: "The global dbi control object."
  example: 
- uid: CRMScript.Global.Void.getDefaultElementConfig(Integer,String,String)
  commentId: M:CRMScript.Global.Void.getDefaultElementConfig(Integer,String,String)
  id: 'getDefaultElementConfig(Integer,String,String)'
  so.intellisense: Void.getDefaultElementConfig
  so.version: 4.2.0
  langs:
  - crmscript
  name: 'getDefaultElementConfig(Integer,String,String)'
  nameWithType: Void.getDefaultElementConfig(Integer,String,String)
  fullName: CRMScript.Global.Void.getDefaultElementConfig(Integer,String,String)
  type: Method
  summary: "\nReturns the default config for an element type given a table and language.\n"
  remarks: 
  syntax: 
    content: String getDefaultElementConfig(Integer type, String table, String language)
    parameters:
    - id: type
      type: CRMScript.Global.Integer
      description: "Type of element. Can be 14 (GenericGrid), 15 (InfoField), or 140 (Where)"
    - id: table
      type: CRMScript.Global.String
      description: "The table for the config (usually ticket, customer, company, or the name of an extratable)"
    - id: language
      type: CRMScript.Global.String
      description: "The language of the config."
    return:
      type: CRMScript.Global.String
      description: "The config as a string with name = value lines."
  example: 
- uid: CRMScript.Global.Void.getDocumentId(String)
  commentId: M:CRMScript.Global.Void.getDocumentId(String)
  id: 'getDocumentId(String)'
  so.intellisense: Void.getDocumentId
  so.version: 4.2.0
  langs:
  - crmscript
  name: 'getDocumentId(String)'
  nameWithType: Void.getDocumentId(String)
  fullName: CRMScript.Global.Void.getDocumentId(String)
  type: Method
  summary: "\nReturns the ID of the document with the given name.\n"
  remarks: 
  syntax: 
    content: Integer getDocumentId(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "Name of the document."
    return:
      type: CRMScript.Global.Integer
      description: "The ID of the document; -1 if no agent schedule was found."
  example: 
- uid: CRMScript.Global.Void.getEnvVariable(String)
  commentId: M:CRMScript.Global.Void.getEnvVariable(String)
  id: 'getEnvVariable(String)'
  so.intellisense: Void.getEnvVariable
  so.envir: onsite
  langs:
  - crmscript
  name: 'getEnvVariable(String)'
  nameWithType: Void.getEnvVariable(String)
  fullName: CRMScript.Global.Void.getEnvVariable(String)
  type: Method
  summary: "\nReturns the OS environment variable with the given name. <strong>This method is not available in CRM Online.</strong>\n"
  remarks: 
  syntax: 
    content: String getEnvVariable(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "The name of the variable."
    return:
      type: CRMScript.Global.String
      description: "The OS environment variable with the given name."
  example: 
- uid: CRMScript.Global.Void.getEventData()
  commentId: M:CRMScript.Global.Void.getEventData()
  id: 'getEventData()'
  so.intellisense: Void.getEventData
  so.version: 8.1
  langs:
  - crmscript
  name: 'getEventData()'
  nameWithType: Void.getEventData()
  fullName: CRMScript.Global.Void.getEventData()
  type: Method
  summary: "\nReturns an EventData object connected to the current event.\n"
  remarks: 
  syntax: 
    content: EventData getEventData()
    parameters: []
    return:
      type: CRMScript.Native.EventData."
  example: 
- uid: CRMScript.Global.Void.getExecutable()
  commentId: M:CRMScript.Global.Void.getExecutable()
  id: 'getExecutable()'
  so.intellisense: Void.getExecutable
  so.version: 7.5.0
  langs:
  - crmscript
  name: 'getExecutable()'
  nameWithType: Void.getExecutable()
  fullName: CRMScript.Global.Void.getExecutable()
  type: Method
  summary: "\nReturns the executable with the full path that the current script is running in.\n"
  remarks: 
  syntax: 
    content: String getExecutable()
    parameters: []
    return:
      type: CRMScript.Global.String
      description:
  example: 
- uid: CRMScript.Global.Void.getExternalProgram(Integer)
  commentId: M:CRMScript.Global.Void.getExternalProgram(Integer)
  id: 'getExternalProgram(Integer)'
  so.intellisense: Void.getExternalProgram
  so.version: 8.0.0
  langs:
  - crmscript
  name: 'getExternalProgram(Integer)'
  nameWithType: Void.getExternalProgram(Integer)
  fullName: CRMScript.Global.Void.getExternalProgram(Integer)
  type: Method
  summary: "\nReturns the external URL of the program module specified by progId (if available).\n"
  remarks: "\n<h3>progId</h3><table><thead><tr><td>progId</td><td>Integer</td><td>Hex</td></tr></thead><tbody><tr><td>modNull</td><td>0</td><td>0x00000000</td></tr><tr><td>modTicket</td><td>1</td><td>0x00000001</td></tr><tr><td>modAdmin</td><td>2</td><td>0x00000002</td></tr><tr><td>modDocument</td><td>4</td><td>0x00000004</td></tr><tr><td>modHelp</td><td>8</td><td>0x00000008</td></tr><tr><td>modCustomer</td><td>16</td><td>0x00000010</td></tr><tr><td>modKnowledge</td><td>32</td><td>0x00000020</td></tr><tr><td>modPlanner</td><td>64</td><td>0x00000040</td></tr><tr><td>modAds</td><td>128</td><td>0x00000080</td></tr><tr><td>modSchedule</td><td>256</td><td>0x00000100</td></tr><tr><td>modStat</td><td>512</td><td>0x00000200</td></tr><tr><td>modRms</td><td>1024</td><td>0x00000400</td></tr><tr><td>modCustLang</td><td>2048</td><td>0x00000800</td></tr><tr><td>modExtDb</td><td>4096</td><td>0x00001000</td></tr><tr><td>modAdvancedFAQ</td><td>8192</td><td>0x00002000</td></tr><tr><td>modChat</td><td>16384</td><td>0x00004000</td></tr><tr><td>modSpm</td><td>32768</td><td>0x00008000</td></tr><tr><td>modSoap</td><td>65536</td><td>0x00010000</td></tr><tr><td>modSoapPublic</td><td>131072</td><td>0x00020000</td></tr><tr><td>modSms</td><td>26214</td><td>0x00040000</td></tr><tr><td>modBlogic</td><td>524288</td><td>0x00080000</td></tr><tr><td>modRetail</td><td>1048576</td><td>0x00100000</tr></body></table>"
  syntax: 
    content: String getExternalProgram(Integer progId)
    parameters:
    - id: progId
      type: CRMScript.Global.Integer
      description: "The ID of the program to return."
    return:
      type: CRMScript.Global.String
      description: "The URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getExternalProgramAdmin()
  commentId: M:CRMScript.Global.Void.getExternalProgramAdmin()
  id: 'getExternalProgramAdmin()'
  so.intellisense: Void.getExternalProgramAdmin
  so.version: 8.0.0
  langs:
  - crmscript
  name: 'getExternalProgramAdmin()'
  nameWithType: Void.getExternalProgramAdmin()
  fullName: CRMScript.Global.Void.getExternalProgramAdmin()
  type: Method
  summary: "\nReturns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramAdmin()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The external URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getExternalProgramAjax()
  commentId: M:CRMScript.Global.Void.getExternalProgramAjax()
  id: 'getExternalProgramAjax()'
  so.intellisense: Void.getExternalProgramAjax
  so.version: 8.0.0
  langs:
  - crmscript
  name: 'getExternalProgramAjax()'
  nameWithType: Void.getExternalProgramAjax()
  fullName: CRMScript.Global.Void.getExternalProgramAjax()
  type: Method
  summary: "\nReturns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramAjax()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The external URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getExternalProgramBlogic()
  commentId: M:CRMScript.Global.Void.getExternalProgramBlogic()
  id: 'getExternalProgramBlogic()'
  so.intellisense: Void.getExternalProgramBlogic
  so.version: 8.0.0
  langs:
  - crmscript
  name: 'getExternalProgramBlogic()'
  nameWithType: Void.getExternalProgramBlogic()
  fullName: CRMScript.Global.Void.getExternalProgramBlogic()
  type: Method
  summary: "\nReturns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramBlogic()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The external URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getExternalProgramChat()
  commentId: M:CRMScript.Global.Void.getExternalProgramChat()
  id: 'getExternalProgramChat()'
  so.intellisense: Void.getExternalProgramChat
  so.version: 8.0.0
  langs:
  - crmscript
  name: 'getExternalProgramChat()'
  nameWithType: Void.getExternalProgramChat()
  fullName: CRMScript.Global.Void.getExternalProgramChat()
  type: Method
  summary: "\nReturns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramChat()
    parameters: []
    return:
      type: CRMScript.Global.String
      description:
  example: 
- uid: CRMScript.Global.Void.getExternalProgramCustomer()
  commentId: M:CRMScript.Global.Void.getExternalProgramCustomer()
  id: 'getExternalProgramCustomer()'
  so.intellisense: Void.getExternalProgramCustomer
  so.version: 8.0.0
  langs:
  - crmscript
  name: 'getExternalProgramCustomer()'
  nameWithType: Void.getExternalProgramCustomer()
  fullName: CRMScript.Global.Void.getExternalProgramCustomer()
  type: Method
  summary: "\nReturns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramCustomer()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The external URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getExternalProgramDocument()
  commentId: M:CRMScript.Global.Void.getExternalProgramDocument()
  id: 'getExternalProgramDocument()'
  so.intellisense: Void.getExternalProgramDocument
  so.version: 8.0.0
  langs:
  - crmscript
  name: 'getExternalProgramDocument()'
  nameWithType: Void.getExternalProgramDocument()
  fullName: CRMScript.Global.Void.getExternalProgramDocument()
  type: Method
  summary: "\nReturns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramDocument()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The external URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getExternalProgramHelp()
  commentId: M:CRMScript.Global.Void.getExternalProgramHelp()
  id: 'getExternalProgramHelp()'
  so.intellisense: Void.getExternalProgramHelp
  so.version: 8.0.0
  langs:
  - crmscript
  name: 'getExternalProgramHelp()'
  nameWithType: Void.getExternalProgramHelp()
  fullName: CRMScript.Global.Void.getExternalProgramHelp()
  type: Method
  summary: "\nReturns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramHelp()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The external URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getExternalProgramKnowledge()
  commentId: M:CRMScript.Global.Void.getExternalProgramKnowledge()
  id: 'getExternalProgramKnowledge()'
  so.intellisense: Void.getExternalProgramKnowledge
  so.version: 8.0.0
  langs:
  - crmscript
  name: 'getExternalProgramKnowledge()'
  nameWithType: Void.getExternalProgramKnowledge()
  fullName: CRMScript.Global.Void.getExternalProgramKnowledge()
  type: Method
  summary: "\nReturns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramKnowledge()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The external URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getExternalProgramRms()
  commentId: M:CRMScript.Global.Void.getExternalProgramRms()
  id: 'getExternalProgramRms()'
  so.intellisense: Void.getExternalProgramRms
  so.version: 8.0.0
  langs:
  - crmscript
  name: 'getExternalProgramRms()'
  nameWithType: Void.getExternalProgramRms()
  fullName: CRMScript.Global.Void.getExternalProgramRms()
  type: Method
  summary: "\nReturns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramRms()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The external URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getExternalProgramSoap()
  commentId: M:CRMScript.Global.Void.getExternalProgramSoap()
  id: 'getExternalProgramSoap()'
  so.intellisense: Void.getExternalProgramSoap
  so.version: 8.0.0
  langs:
  - crmscript
  name: 'getExternalProgramSoap()'
  nameWithType: Void.getExternalProgramSoap()
  fullName: CRMScript.Global.Void.getExternalProgramSoap()
  type: Method
  summary: "\nReturns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramSoap()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The external URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getExternalProgramStat()
  commentId: M:CRMScript.Global.Void.getExternalProgramStat()
  id: 'getExternalProgramStat()'
  so.intellisense: Void.getExternalProgramStat
  so.version: 8.0.0
  langs:
  - crmscript
  name: 'getExternalProgramStat()'
  nameWithType: Void.getExternalProgramStat()
  fullName: CRMScript.Global.Void.getExternalProgramStat()
  type: Method
  summary: "\nReturns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramStat()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The external URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getExternalProgramTicket()
  commentId: M:CRMScript.Global.Void.getExternalProgramTicket()
  id: 'getExternalProgramTicket()'
  so.intellisense: Void.getExternalProgramTicket
  so.version: 8.0.0
  langs:
  - crmscript
  name: 'getExternalProgramTicket()'
  nameWithType: Void.getExternalProgramTicket()
  fullName: CRMScript.Global.Void.getExternalProgramTicket()
  type: Method
  summary: "\nReturns the external URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getExternalProgramTicket()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The external URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getExtraTable(String)
  commentId: M:CRMScript.Global.Void.getExtraTable(String)
  id: 'getExtraTable(String)'
  so.intellisense: Void.getExtraTable
  langs:
  - crmscript
  name: 'getExtraTable(String)'
  nameWithType: Void.getExtraTable(String)
  fullName: CRMScript.Global.Void.getExtraTable(String)
  type: Method
  summary: "\nReturns the ExtraTable instance for the given name.\n"
  remarks: "\nThrows an exception if the table does not exist.\n"
  syntax: 
    content: ExtraTable getExtraTable(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "The unique name of the table, such as &quot;y_102&quot;, &quot;y_inventory&quot;."
    return:
      type: CRMScript.Native.ExtraTable
      description: "The ExtraTable."
  example: 
- uid: CRMScript.Global.Void.getFavourites(String)
  commentId: M:CRMScript.Global.Void.getFavourites(String)
  id: 'getFavourites(String)'
  so.intellisense: Void.getFavourites
  langs:
  - crmscript
  name: 'getFavourites(String)'
  nameWithType: Void.getFavourites(String)
  fullName: CRMScript.Global.Void.getFavourites(String)
  type: Method
  summary: "\nReturns an array containing the IDs of all favorites in the given table.\n"
  remarks: 
  syntax: 
    content: Integer[] getFavourites(String table)
    parameters:
    - id: table
      type: CRMScript.Global.String
      description: "Name of the table."
    return:
      type: CRMScript.Global.Integer[]
      description: "Array containing IDs of favorites."
  example: 
- uid: CRMScript.Global.Void.getFunctionList()
  commentId: M:CRMScript.Global.Void.getFunctionList()
  id: 'getFunctionList()'
  so.intellisense: Void.getFunctionList
  langs:
  - crmscript
  name: 'getFunctionList()'
  nameWithType: Void.getFunctionList()
  fullName: CRMScript.Global.Void.getFunctionList()
  type: Method
  summary: "\nReturns an array with the description of all CRMScript functions defined in the system.\n"
  remarks: 
  syntax: 
    content: String[][] getFunctionList()
    parameters: []
    return:
      type: CRMScript.Global.String[][]
      description: "Double String array with the description of all CRMScript functions. The inner array contains 0 - class name; 1 - return type; 2 - function name; 3 - parameter list; 4 - author."
  example: 
- uid: CRMScript.Global.Void.getGlobalStaticMap()
  commentId: M:CRMScript.Global.Void.getGlobalStaticMap()
  id: 'getGlobalStaticMap()'
  so.intellisense: Void.getGlobalStaticMap
  so.version: 4.8.1
  langs:
  - crmscript
  name: 'getGlobalStaticMap()'
  nameWithType: Void.getGlobalStaticMap()
  fullName: CRMScript.Global.Void.getGlobalStaticMap()
  type: Method
  summary: "\nReturns a global and static map.\n"
  remarks: "\nUseful to eliminate the need to fetch the same info several times within one run of the app, bLogic events and ticket save especially.\n"
  syntax: 
    content: Map getGlobalStaticMap()
    parameters: []
    return:
      type: CRMScript.Native.Map
      description:
  example: 
- uid: CRMScript.Global.Void.getGlobalVariable(String)
  commentId: M:CRMScript.Global.Void.getGlobalVariable(String)
  id: 'getGlobalVariable(String)'
  so.intellisense: Void.getGlobalVariable
  so.version: 4.9.1
  langs:
  - crmscript
  name: 'getGlobalVariable(String)'
  nameWithType: Void.getGlobalVariable(String)
  fullName: CRMScript.Global.Void.getGlobalVariable(String)
  type: Method
  summary: "\nGets a value from the global variables.\n"
  remarks: "\nUsed for communication between different scripts.\n"
  syntax: 
    content: String getGlobalVariable(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "The name of the variable to receive."
    return:
      type: CRMScript.Global.String
      description:
  example: 
- uid: CRMScript.Global.Void.getHtmlElement(String)
  commentId: M:CRMScript.Global.Void.getHtmlElement(String)
  id: 'getHtmlElement(String)'
  so.intellisense: Void.getHtmlElement
  langs:
  - crmscript
  name: 'getHtmlElement(String)'
  nameWithType: Void.getHtmlElement(String)
  fullName: CRMScript.Global.Void.getHtmlElement(String)
  type: Method
  summary: "\nReturns a reference to an HtmlElement in the associated screen.\n"
  remarks: 
  syntax: 
    content: HtmlElement getHtmlElement(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "The name of the element to return."
    return:
      type: CRMScript.Native.HtmlElement
      description: "The HtmlElement with the given name."
  example: 
- uid: CRMScript.Global.Void.getHtmlElementIndex(String)
  commentId: M:CRMScript.Global.Void.getHtmlElementIndex(String)
  id: 'getHtmlElementIndex(String)'
  so.intellisense: Void.getHtmlElementIndex
  so.version: 3.1.3
  langs:
  - crmscript
  name: 'getHtmlElementIndex(String)'
  nameWithType: Void.getHtmlElementIndex(String)
  fullName: CRMScript.Global.Void.getHtmlElementIndex(String)
  type: Method
  summary: "\nGets the index of the specified HTML element. This is useful if you want to insert elements after a particular HTML element, and you do not know the index of it.\n"
  remarks: "\nCan only be called from a screen definition, it will fail if called from a regular script.\n"
  syntax: 
    content: Integer getHtmlElementIndex(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "The name of the HTML element you want to retrieve the index of."
    return:
      type: CRMScript.Global.Integer
      description: "The index of the specified element."
  example: 
- uid: CRMScript.Global.Void.getHtmlElementName(Integer)
  commentId: M:CRMScript.Global.Void.getHtmlElementName(Integer)
  id: 'getHtmlElementName(Integer)'
  so.intellisense: Void.getHtmlElementName
  langs:
  - crmscript
  name: 'getHtmlElementName(Integer)'
  nameWithType: Void.getHtmlElementName(Integer)
  fullName: CRMScript.Global.Void.getHtmlElementName(Integer)
  type: Method
  summary: "\nReturns the name of the element with the given index.\n"
  remarks: 
  syntax: 
    content: String getHtmlElementName(Integer index)
    parameters:
    - id: index
      type: CRMScript.Global.Integer
      description: "Index of the element."
    return:
      type: CRMScript.Global.String
      description:  The name of the element."
  example: 
- uid: CRMScript.Global.Void.getHttpHeader(String)
  commentId: M:CRMScript.Global.Void.getHttpHeader(String)
  id: 'getHttpHeader(String)'
  so.intellisense: Void.getHttpHeader
  langs:
  - crmscript
  name: 'getHttpHeader(String)'
  nameWithType: Void.getHttpHeader(String)
  fullName: CRMScript.Global.Void.getHttpHeader(String)
  type: Method
  summary: "\nReturns the value of the specified header name.\n"
  remarks: "\n<h3>Header names</h3><ul><li>ACCEPT-*</li><li>ACCESS-CONTROL-REQUEST-METHOD</li><li>ACCESS-CONTROL-REQUEST-HEADERS</li><li>CACHE-CONTROL</li><li>CONTENT-LENGTH</li><li>CONTENT-TYPE</li><li>DATE</li><li>DNT</li><li>EXPECT</li><li>IF-*</li><li>ORIGIN</li><li>PRAGMA</li><li>RANGE</li><li>REFERER</li><li>REQUEST-METHOD</li><li>REQUEST-URI</li><li>TE</li><li>USER-AGENT</li><li>X-CRMSCRIPT-*</li><li>X-FORWARDED-FOR</li><li>X-REQUESTED-WITH</li><li>X-SUPEROFFICE-EVENT</li><li>X-SUPEROFFICE-EVENTID</li><li>X-SUPEROFFICE-RETRY</li></ul>\n"
  syntax: 
    content: String getHttpHeader(String headerName)
    parameters:
    - id: headerName
      type: CRMScript.Global.String
      description: "Name of the header."
    return:
      type: CRMScript.Global.String
      description: "The header value."
  example: 
  - "\n<pre><code>String method = getHttpHeader(&quot;REQUEST-METHOD&quot;);</code></pre>\n"
- uid: CRMScript.Global.Void.getLanguageVariable(String)
  commentId: M:CRMScript.Global.Void.getLanguageVariable(String)
  id: 'getLanguageVariable(String)'
  so.intellisense: Void.getLanguageVariable
  langs:
  - crmscript
  name: 'getLanguageVariable(String)'
  nameWithType: Void.getLanguageVariable(String)
  fullName: CRMScript.Global.Void.getLanguageVariable(String)
  type: Method
  summary: "\nConverts a language variable to a string in the language of the current user or, if provided, corresponding to a specific language code.\n"
  remarks: "\nSearches in the language variables for the current screen in addition to the common language variables.\n"
  syntax: 
    content: String getLanguageVariable(String langVar)
    parameters:
    - id: langVar
      type: CRMScript.Global.String
      description: "The language variable, for example, lang_global_global_okSave."
    return:
      type: CRMScript.Global.String
      description: "The language variable in the language given by language code or of the current user."
  example: 
- uid: CRMScript.Global.Void.getLanguageVariable(String,String)
  commentId: M:CRMScript.Global.Void.getLanguageVariable(String,String)
  id: 'getLanguageVariable(String,String)'
  so.intellisense: Void.getLanguageVariable
  langs:
  - crmscript
  name: 'getLanguageVariable(String,String)'
  nameWithType: Void.getLanguageVariable(String,String)
  fullName: CRMScript.Global.Void.getLanguageVariable(String,String)
  type: Method
  summary: "\nConverts a language variable to a string in the language of the current user or, if provided, corresponding to a specific language code.\n"
  remarks: "\nSearches in the language variables for the current screen in addition to the common language variables.\n"
  syntax: 
    content: String getLanguageVariable(String langVar, String langCode)
    parameters:
    - id: langVar
      type: CRMScript.Global.String
      description: "The language variable, for example, lang_global_global_okSave"
    - id: langCode
      type: CRMScript.Global.String
      description: "The language code."
    return:
      type: CRMScript.Global.String
      description: "The language variable in the language given by language code or of the current user."
  example: 
- uid: CRMScript.Global.Void.getLocalTimeZone()
  commentId: M:CRMScript.Global.Void.getLocalTimeZone()
  id: 'getLocalTimeZone()'
  so.intellisense: Void.getLocalTimeZone
  langs:
  - crmscript
  name: 'getLocalTimeZone()'
  nameWithType: Void.getLocalTimeZone()
  fullName: CRMScript.Global.Void.getLocalTimeZone()
  type: Method
  summary: "\nReturns the local timezone.\n"
  remarks: 
  syntax: 
    content: TimeZone getLocalTimeZone()
    parameters: []
    return:
      type: CRMScript.Global.TimeZone
      description: "The local timezone."
  example: 
- uid: CRMScript.Global.Void.getMainMenu()
  commentId: M:CRMScript.Global.Void.getMainMenu()
  id: 'getMainMenu()'
  so.intellisense: Void.getMainMenu
  langs:
  - crmscript
  name: 'getMainMenu()'
  nameWithType: Void.getMainMenu()
  fullName: CRMScript.Global.Void.getMainMenu()
  type: Method
  summary: "\nReturns a reference to the global MainMenu instance.\n"
  remarks: "\nUsed for changing the left-hand menu in the system.\n"
  syntax: 
    content: MainMenu getMainMenu()
    parameters: []
    return:
      type: CRMScript.Native.MainMenu
      description: "The global MainMenu instance."
  example: 
- uid: CRMScript.Global.Void.getNtUser()
  commentId: M:CRMScript.Global.Void.getNtUser()
  id: 'getNtUser()'
  so.intellisense: Void.getNtUser
  langs:
  - crmscript
  name: 'getNtUser()'
  nameWithType: Void.getNtUser()
  fullName: CRMScript.Global.Void.getNtUser()
  type: Method
  summary: "\nReturns the username supplied from the web server.\n"
  remarks: "\nWorks with Apache and IIS, but required user authentication on the web server.<p></p>\nDerived from UNMAPPED_REMOTE_USER or REMOTE_USER environment variable\n"
  syntax: 
    content: String getNtUser()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "Nt user name."
  example: 
- uid: CRMScript.Global.Void.getNumHtmlElements()
  commentId: M:CRMScript.Global.Void.getNumHtmlElements()
  id: 'getNumHtmlElements()'
  so.intellisense: Void.getNumHtmlElements
  so.version: 4.3.5
  langs:
  - crmscript
  name: 'getNumHtmlElements()'
  nameWithType: Void.getNumHtmlElements()
  fullName: CRMScript.Global.Void.getNumHtmlElements()
  type: Method
  summary: "\nReturns the current number of the HtmlElements in the current screen.\n"
  remarks: 
  syntax: 
    content: Integer getNumHtmlElements()
    parameters: []
    return:
      type: CRMScript.Global.Integer
      description: "The current number of the HtmlElements in the current screen."
  example: 
- uid: CRMScript.Global.Void.getParser()
  commentId: M:CRMScript.Global.Void.getParser()
  id: 'getParser()'
  so.intellisense: Void.getParser
  langs:
  - crmscript
  name: 'getParser()'
  nameWithType: Void.getParser()
  fullName: CRMScript.Global.Void.getParser()
  type: Method
  summary: "\nReturns a reference to the global Parser instance.\n"
  remarks: 
  syntax: 
    content: Parser getParser()
    parameters: []
    return:
      type: CRMScript.Native.Parser
      description: "The reference to the Parser instance."
  example: 
- uid: CRMScript.Global.Void.getParserParameter(String)
  commentId: M:CRMScript.Global.Void.getParserParameter(String)
  id: 'getParserParameter(String)'
  so.intellisense: Void.getParserParameter
  langs:
  - crmscript
  name: 'getParserParameter(String)'
  nameWithType: Void.getParserParameter(String)
  fullName: CRMScript.Global.Void.getParserParameter(String)
  type: Method
  summary: "\nReturns the value of the given parameter in the global Parser instance.\n"
  remarks: "\nYou can optionally pass the zero-based index of the value.\n"
  syntax: 
    content: String getParserParameter(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "The name of the parameter."
    return:
      type: CRMScript.Global.String
      description: "The value of the given parameter in the global Parser instance."
  example: 
- uid: CRMScript.Global.Void.getParserParameter(String,Integer)
  commentId: M:CRMScript.Global.Void.getParserParameter(String,Integer)
  id: 'getParserParameter(String,Integer)'
  so.intellisense: Void.getParserParameter
  langs:
  - crmscript
  name: 'getParserParameter(String,Integer)'
  nameWithType: Void.getParserParameter(String,Integer)
  fullName: CRMScript.Global.Void.getParserParameter(String,Integer)
  type: Method
  summary: "\nReturns the value of the given parameter at the zero-based index in the global Parser instance.\n"
  remarks:
  syntax: 
    content: String getParserParameter(String name, Integer index)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "The name of the parameter"
    - id: index
      type: CRMScript.Global.Integer
      description: "The zero-based index of the value to return."
    return:
      type: CRMScript.Global.String
      description: "The value of the given parameter in the global Parser instance."
  example: 
- uid: CRMScript.Global.Void.getParserParameterCount(String)
  commentId: M:CRMScript.Global.Void.getParserParameterCount(String)
  id: 'getParserParameterCount(String)'
  so.intellisense: Void.getParserParameterCount
  langs:
  - crmscript
  name: 'getParserParameterCount(String)'
  nameWithType: Void.getParserParameterCount(String)
  fullName: CRMScript.Global.Void.getParserParameterCount(String)
  type: Method
  summary: "\nReturns the number of values for the given parameters in the global Parser object.\n"
  remarks: 
  syntax: 
    content: Integer getParserParameterCount(String paramName)
    parameters:
    - id: paramName
      type: CRMScript.Global.String
      description: "The name of the parameter."
    return:
      type: CRMScript.Global.Integer
      description: "The number of values for the parameter the Parser."
  example: 
- uid: CRMScript.Global.Void.getParserVariable(String)
  commentId: M:CRMScript.Global.Void.getParserVariable(String)
  id: 'getParserVariable(String)'
  so.intellisense: Void.getParserVariable
  langs:
  - crmscript
  name: 'getParserVariable(String)'
  nameWithType: Void.getParserVariable(String)
  fullName: CRMScript.Global.Void.getParserVariable(String)
  type: Method
  summary: "\nReturns the (first) value for the given variable from the global Parser instance.\n"
  remarks: "\nYou can optionally pass the zero-based row of the parser-query result set.\n"
  syntax: 
    content: String getParserVariable(String varName)
    parameters:
    - id: varName
      type: CRMScript.Global.String
      description: "The name of the variable."
    return:
      type: CRMScript.Global.String
      description:
  example: 
- uid: CRMScript.Global.Void.getParserVariable(String,Integer)
  commentId: M:CRMScript.Global.Void.getParserVariable(String,Integer)
  id: 'getParserVariable(String,Integer)'
  so.intellisense: Void.getParserVariable
  langs:
  - crmscript
  name: 'getParserVariable(String,Integer)'
  nameWithType: Void.getParserVariable(String,Integer)
  fullName: CRMScript.Global.Void.getParserVariable(String,Integer)
  type: Method
  summary: "\nReturns the (first) value for the given variable from the global Parser instance at the zero-based row of the parser-query result set.\n"
  remarks:
  syntax: 
    content: String getParserVariable(String varName, Integer row)
    parameters:
    - id: varName
      type: CRMScript.Global.String
      description: "The name of the variable"
    - id: row
      type: CRMScript.Global.Integer
      description: "The zero-based index of the value to return."
    return:
      type: CRMScript.Global.String
      description:
  example: 
- uid: CRMScript.Global.Void.getParserVariableAsCSV(String,Bool)
  commentId: M:CRMScript.Global.Void.getParserVariableAsCSV(String,Bool)
  id: 'getParserVariableAsCSV(String,Bool)'
  so.intellisense: Void.getParserVariableAsCSV
  langs:
  - crmscript
  name: 'getParserVariableAsCSV(String,Bool)'
  nameWithType: Void.getParserVariableAsCSV(String,Bool)
  fullName: CRMScript.Global.Void.getParserVariableAsCSV(String,Bool)
  type: Method
  summary: "\nReturns a variable from the global Parser instance as a comma-separated string.\n"
  remarks: 
  syntax: 
    content: String getParserVariableAsCSV(String paramName, Bool forceQuoting)
    parameters:
    - id: paramName
      type: CRMScript.Global.String
      description: "The name of the variable to return."
    - id: forceQuoting
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.String
      description: "If True, then each element will be quoted. If false, only elements that need to be quoted (i.e. when they contain a comma) will be quoted."
  example: 
- uid: CRMScript.Global.Void.getParserVariableCount(String)
  commentId: M:CRMScript.Global.Void.getParserVariableCount(String)
  id: 'getParserVariableCount(String)'
  so.intellisense: Void.getParserVariableCount
  langs:
  - crmscript
  name: 'getParserVariableCount(String)'
  nameWithType: Void.getParserVariableCount(String)
  fullName: CRMScript.Global.Void.getParserVariableCount(String)
  type: Method
  summary: "\nReturns the number of values for the specified value in the global Parser instance.\n"
  remarks: 
  syntax: 
    content: Integer getParserVariableCount(String varName)
    parameters:
    - id: varName
      type: CRMScript.Global.String
      description: "The name of the variable."
    return:
      type: CRMScript.Global.Integer
      description: "The number of values for the variable."
  example: 
- uid: CRMScript.Global.Void.getPID()
  commentId: M:CRMScript.Global.Void.getPID()
  id: 'getPID()'
  so.intellisense: Void.getPID
  so.version: 7.5.0
  langs:
  - crmscript
  name: 'getPID()'
  nameWithType: Void.getPID()
  fullName: CRMScript.Global.Void.getPID()
  type: Method
  summary: "\nReturns the PID of the executable that the script is running in.\n"
  remarks: 
  syntax: 
    content: Integer getPID()
    parameters: []
    return:
      type: CRMScript.Global.Integer
      description: "The PID of the executable that the script is running in."
  example: 
- uid: CRMScript.Global.Void.getPriorityIdFromName(String)
  commentId: M:CRMScript.Global.Void.getPriorityIdFromName(String)
  id: 'getPriorityIdFromName(String)'
  so.intellisense: Void.getPriorityIdFromName
  so.version: 7.5
  langs:
  - crmscript
  name: 'getPriorityIdFromName(String)'
  nameWithType: Void.getPriorityIdFromName(String)
  fullName: CRMScript.Global.Void.getPriorityIdFromName(String)
  type: Method
  summary: "\nReturns the ID of the priority with the given name.\n"
  remarks: 
  syntax: 
    content: Integer getPriorityIdFromName(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description:  Name of the document."
    return:
      type: CRMScript.Global.Integer
      description: "The ID of the priority."
  example: 
- uid: CRMScript.Global.Void.getProgram(Integer)
  commentId: M:CRMScript.Global.Void.getProgram(Integer)
  id: 'getProgram(Integer)'
  so.intellisense: Void.getProgram
  langs:
  - crmscript
  name: 'getProgram(Integer)'
  nameWithType: Void.getProgram(Integer)
  fullName: CRMScript.Global.Void.getProgram(Integer)
  type: Method
  summary: "\nReturns the URL of the program module specified by progId.\n"
  remarks: "\n<h3>progId</h3><table><thead><tr><td>progId</td><td>Integer</td><td>Hex</td></tr></thead><tbody><tr><td>modNull</td><td>0</td><td>0x00000000</td></tr><tr><td>modTicket</td><td>1</td><td>0x00000001</td></tr><tr><td>modAdmin</td><td>2</td><td>0x00000002</td></tr><tr><td>modDocument</td><td>4</td><td>0x00000004</td></tr><tr><td>modHelp</td><td>8</td><td>0x00000008</td></tr><tr><td>modCustomer</td><td>16</td><td>0x00000010</td></tr><tr><td>modKnowledge</td><td>32</td><td>0x00000020</td></tr><tr><td>modPlanner</td><td>64</td><td>0x00000040</td></tr><tr><td>modAds</td><td>128</td><td>0x00000080</td></tr><tr><td>modSchedule</td><td>256</td><td>0x00000100</td></tr><tr><td>modStat</td><td>512</td><td>0x00000200</td></tr><tr><td>modRms</td><td>1024</td><td>0x00000400</td></tr><tr><td>modCustLang</td><td>2048</td><td>0x00000800</td></tr><tr><td>modExtDb</td><td>4096</td><td>0x00001000</td></tr><tr><td>modAdvancedFAQ</td><td>8192</td><td>0x00002000</td></tr><tr><td>modChat</td><td>16384</td><td>0x00004000</td></tr><tr><td>modSpm</td><td>32768</td><td>0x00008000</td></tr><tr><td>modSoap</td><td>65536</td><td>0x00010000</td></tr><tr><td>modSoapPublic</td><td>131072</td><td>0x00020000</td></tr><tr><td>modSms</td><td>26214</td><td>0x00040000</td></tr><tr><td>modBlogic</td><td>524288</td><td>0x00080000</td></tr><tr><td>modRetail</td><td>1048576</td><td>0x00100000</tr></body></table>"
  syntax: 
    content: String getProgram(Integer progId)
    parameters:
    - id: progId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String
      description:
  example: 
- uid: CRMScript.Global.Void.getProgramAdmin()
  commentId: M:CRMScript.Global.Void.getProgramAdmin()
  id: 'getProgramAdmin()'
  so.intellisense: Void.getProgramAdmin
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getProgramAdmin()'
  nameWithType: Void.getProgramAdmin()
  fullName: CRMScript.Global.Void.getProgramAdmin()
  type: Method
  summary: "\nReturns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramAdmin()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getProgramAjax()
  commentId: M:CRMScript.Global.Void.getProgramAjax()
  id: 'getProgramAjax()'
  so.intellisense: Void.getProgramAjax
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getProgramAjax()'
  nameWithType: Void.getProgramAjax()
  fullName: CRMScript.Global.Void.getProgramAjax()
  type: Method
  summary: "\nReturns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramAjax()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getProgramBlogic()
  commentId: M:CRMScript.Global.Void.getProgramBlogic()
  id: 'getProgramBlogic()'
  so.intellisense: Void.getProgramBlogic
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getProgramBlogic()'
  nameWithType: Void.getProgramBlogic()
  fullName: CRMScript.Global.Void.getProgramBlogic()
  type: Method
  summary: "\nReturns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramBlogic()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getProgramChat()
  commentId: M:CRMScript.Global.Void.getProgramChat()
  id: 'getProgramChat()'
  so.intellisense: Void.getProgramChat
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getProgramChat()'
  nameWithType: Void.getProgramChat()
  fullName: CRMScript.Global.Void.getProgramChat()
  type: Method
  summary: "\nReturns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramChat()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getProgramCustomer()
  commentId: M:CRMScript.Global.Void.getProgramCustomer()
  id: 'getProgramCustomer()'
  so.intellisense: Void.getProgramCustomer
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getProgramCustomer()'
  nameWithType: Void.getProgramCustomer()
  fullName: CRMScript.Global.Void.getProgramCustomer()
  type: Method
  summary: "\nReturns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramCustomer()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getProgramDocument()
  commentId: M:CRMScript.Global.Void.getProgramDocument()
  id: 'getProgramDocument()'
  so.intellisense: Void.getProgramDocument
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getProgramDocument()'
  nameWithType: Void.getProgramDocument()
  fullName: CRMScript.Global.Void.getProgramDocument()
  type: Method
  summary: "\nReturns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramDocument()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getProgramHelp()
  commentId: M:CRMScript.Global.Void.getProgramHelp()
  id: 'getProgramHelp()'
  so.intellisense: Void.getProgramHelp
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getProgramHelp()'
  nameWithType: Void.getProgramHelp()
  fullName: CRMScript.Global.Void.getProgramHelp()
  type: Method
  summary: "\nReturns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramHelp()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getProgramKnowledge()
  commentId: M:CRMScript.Global.Void.getProgramKnowledge()
  id: 'getProgramKnowledge()'
  so.intellisense: Void.getProgramKnowledge
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getProgramKnowledge()'
  nameWithType: Void.getProgramKnowledge()
  fullName: CRMScript.Global.Void.getProgramKnowledge()
  type: Method
  summary: "\nReturns the URL of the knowledge base (document.exe).\n"
  remarks: 
  syntax: 
    content: String getProgramKnowledge()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The URL of the knowledge base (document.exe)."
  example: 
- uid: CRMScript.Global.Void.getProgramRms()
  commentId: M:CRMScript.Global.Void.getProgramRms()
  id: 'getProgramRms()'
  so.intellisense: Void.getProgramRms
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getProgramRms()'
  nameWithType: Void.getProgramRms()
  fullName: CRMScript.Global.Void.getProgramRms()
  type: Method
  summary: "\nReturns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramRms()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getProgramSoap()
  commentId: M:CRMScript.Global.Void.getProgramSoap()
  id: 'getProgramSoap()'
  so.intellisense: Void.getProgramSoap
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getProgramSoap()'
  nameWithType: Void.getProgramSoap()
  fullName: CRMScript.Global.Void.getProgramSoap()
  type: Method
  summary: "\nReturns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramSoap()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getProgramStat()
  commentId: M:CRMScript.Global.Void.getProgramStat()
  id: 'getProgramStat()'
  so.intellisense: Void.getProgramStat
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getProgramStat()'
  nameWithType: Void.getProgramStat()
  fullName: CRMScript.Global.Void.getProgramStat()
  type: Method
  summary: "\nReturns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramStat()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getProgramTicket()
  commentId: M:CRMScript.Global.Void.getProgramTicket()
  id: 'getProgramTicket()'
  so.intellisense: Void.getProgramTicket
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getProgramTicket()'
  nameWithType: Void.getProgramTicket()
  fullName: CRMScript.Global.Void.getProgramTicket()
  type: Method
  summary: "\nReturns the URL of the program module specified after getProgram.\n"
  remarks: 
  syntax: 
    content: String getProgramTicket()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The URL for the given program."
  example: 
- uid: CRMScript.Global.Void.getReplyTemplateBody(Integer,Bool,Integer)
  commentId: M:CRMScript.Global.Void.getReplyTemplateBody(Integer,Bool,Integer)
  id: 'getReplyTemplateBody(Integer,Bool,Integer)'
  so.intellisense: Void.getReplyTemplateBody
  langs:
  - crmscript
  name: 'getReplyTemplateBody(Integer,Bool,Integer)'
  nameWithType: Void.getReplyTemplateBody(Integer,Bool,Integer)
  fullName: CRMScript.Global.Void.getReplyTemplateBody(Integer,Bool,Integer)
  type: Method
  summary: "\nReturns reply template text as specified by the parameters.\n"
  remarks: 
  syntax: 
    content: String getReplyTemplateBody(Integer id, Bool useHTML, Integer langId)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: "The database ID of the template."
    - id: useHTML
      type: CRMScript.Global.Bool
      description: "The HTML or plain text version?"
    - id: langId
      type: CRMScript.Global.Integer
      description: "The preferred language; -1 specifies default."
    return:
      type: CRMScript.Global.String
      description:
  example: 
- uid: CRMScript.Global.Void.getReplyTemplateSubject(Integer,Integer)
  commentId: M:CRMScript.Global.Void.getReplyTemplateSubject(Integer,Integer)
  id: 'getReplyTemplateSubject(Integer,Integer)'
  so.intellisense: Void.getReplyTemplateSubject
  langs:
  - crmscript
  name: 'getReplyTemplateSubject(Integer,Integer)'
  nameWithType: Void.getReplyTemplateSubject(Integer,Integer)
  fullName: CRMScript.Global.Void.getReplyTemplateSubject(Integer,Integer)
  type: Method
  summary: "\nReturns reply template subject.\n"
  remarks: 
  syntax: 
    content: String getReplyTemplateSubject(Integer id, Integer langId)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: "The database ID of the template."
    - id: langId
      type: CRMScript.Global.Integer
      description: "The preferred language; -1 specifies default."
    return:
      type: CRMScript.Global.String
      description:
  example: 
- uid: CRMScript.Global.Void.getScreenElementConfig(Integer)
  commentId: M:CRMScript.Global.Void.getScreenElementConfig(Integer)
  id: 'getScreenElementConfig(Integer)'
  so.intellisense: Void.getScreenElementConfig
  langs:
  - crmscript
  name: 'getScreenElementConfig(Integer)'
  nameWithType: Void.getScreenElementConfig(Integer)
  fullName: CRMScript.Global.Void.getScreenElementConfig(Integer)
  type: Method
  summary: "\nReturns the config of the screen element with the given index in the current screen definition.\n"
  remarks: "\nCan only be called from a screen definition, it will fail if called from a regular script.\n"
  syntax: 
    content: Map getScreenElementConfig(Integer index)
    parameters:
    - id: index
      type: CRMScript.Global.Integer
      description: "The index of the element. Can be retrieved with getHtmlElementIndex(elementName)."
    return:
      type: CRMScript.Native.Map
      description: "A map containing the config of the element."
  example: 
- uid: CRMScript.Global.Void.getScreenElementId(Integer)
  commentId: M:CRMScript.Global.Void.getScreenElementId(Integer)
  id: 'getScreenElementId(Integer)'
  so.intellisense: Void.getScreenElementId
  langs:
  - crmscript
  name: 'getScreenElementId(Integer)'
  nameWithType: Void.getScreenElementId(Integer)
  fullName: CRMScript.Global.Void.getScreenElementId(Integer)
  type: Method
  summary: "\nReturns the ID of the screen element with the given index in the current screen definition.\n"
  remarks: "\nCan only be called from a screen definition, it will fail if called from a regular script.\n"
  syntax: 
    content: Integer getScreenElementId(Integer index)
    parameters:
    - id: index
      type: CRMScript.Global.Integer
      description: "The index of the element. Can be retrieved with getHtmlElementIndex(elementName)."
    return:
      type: CRMScript.Global.Integer
      description: "The ID of the element."
  example: 
- uid: CRMScript.Global.Void.getScreenElementName(Integer)
  commentId: M:CRMScript.Global.Void.getScreenElementName(Integer)
  id: 'getScreenElementName(Integer)'
  so.intellisense: Void.getScreenElementName
  langs:
  - crmscript
  name: 'getScreenElementName(Integer)'
  nameWithType: Void.getScreenElementName(Integer)
  fullName: CRMScript.Global.Void.getScreenElementName(Integer)
  type: Method
  summary: "\nReturns the name of the screen element with the given index in the current screen definition.\n"
  remarks: "\nCan only be called from a screen definition, it will fail if called from a regular script.\n"
  syntax: 
    content: String getScreenElementName(Integer index)
    parameters:
    - id: index
      type: CRMScript.Global.Integer
      description: "The index of the element. Can be retrieved with getHtmlElementIndex(elementName)."
    return:
      type: CRMScript.Global.String
      description: "An integer defining the type of the element."
  example: 
- uid: CRMScript.Global.Void.getScreenElementType(Integer)
  commentId: M:CRMScript.Global.Void.getScreenElementType(Integer)
  id: 'getScreenElementType(Integer)'
  so.intellisense: Void.getScreenElementType
  langs:
  - crmscript
  name: 'getScreenElementType(Integer)'
  nameWithType: Void.getScreenElementType(Integer)
  fullName: CRMScript.Global.Void.getScreenElementType(Integer)
  type: Method
  summary: "\nReturns the type of the screen element with the given index in the current screen definition.\n"
  remarks: "\nCan only be called from a screen definition, it will fail if called from a regular script.\n<h3>Simple elements</h3><ul><li>TypeAnchorLine = 1,</li><li>TypeInfoFields = 2,</li><li>TypeGrid = 3,</li><li>TypeHR = 4,</li><li>TypeBR = 5,</li><li>TypeSubHeader = 6,</li><li>TypeParserCode = 7,</li><li>TypeMessages = 8,</li><li>TypeEjScript = 9,</li><li>TypeHtmlGrid = 10,</li><li>TypePlanner = 11,</li><li>TypeStaticGrid = 12,</li><li>TypeDrillDown = 13,</li><li>TypeGenericGrid = 14,</li><li>TypeInfoFields2 = 15,</li><li>TypeExtraTableEntriesGrid = 16,</li><li>TypeDirectedAcyclicGraph = 17,</li></ul><h>Form elements</h3><ul><li>TypeText = 101,</li><li>TypeTextarea = 102,</li><li>TypeSelectCategory = 103,</li><li>TypeSelectCustomer = 104,</li><li>TypeSelectCompany = 105,</li><li>TypeSelectDate = 106,</li><li>TypeSelectDateTime = 107,</li><li>TypeSelectTime = 108,</li><li>TypeButtonRow = 109,</li><li>TypeCheckbox = 110,</li><li>TypeEditor = 111,</li><li>TypeInvoice = 112,</li><li>TypeSelectUser = 113,</li><li>TypeSelectExtraField = 114,</li><li>TypeSelect = 115,</li><li>TypeSendTo = 116,</li><li>TypeSelectReplyTemplate = 117,</li><li>TypeSelectTimeSpan = 118,</li><li>TypeSelectRelation = 119,</li><li>TypeSelectPriority = 120,</li><li>TypeCc = 121,</li><li>TypeAttachment = 122,</li><li>TypeSelectSlevel = 123,</li><li>TypeCustomers = 124,</li><li>TypeSelectFaq = 125,</li><li>TypeSelectDictionaryLang = 126,</li><li>TypeButton = 127,</li><li>TypeSelectMultipleRelations = 128,</li><li>TypeTreeExplorer = 129,</li><li>TypePinEdit = 130,</li><li>TypeContactRecipients = 131,</li><li>TypeTicketStatus = 132,</li><li>TypeSelectMessage = 133,</li><li>TypeCategoryMembership = 134,</li><li>TypeAddressBook = 135,</li><li>TypeRelatedDropdowns = 136,</li><li>TypeSelectTicketStatus = 137,</li><li>TypeSelectTable = 138,</li><li>TypeFckEdit = 139,</li><li>TypeWhere = 140,</li><li>TypeSelectInsertText = 141,</li><li>TypeRadioButtons = 142,</li></ul><h3>Groups</h3><ul><li>TypeFieldset = 201,</li><li>TypeLayoutTable = 202,</li><li>TypePanes = 203,</li><li>TypePane = 204,</li><li>TypeVerticalTable = 205,</li></ul><h3>Group end marker</h3><ul><li>TypeGroupEnd = 301</li></ul>\n"
  syntax: 
    content: Integer getScreenElementType(Integer index)
    parameters:
    - id: index
      type: CRMScript.Global.Integer
      description: "The index of the element. Can be retrieved with getHtmlElementIndex(elementName)."
    return:
      type: CRMScript.Global.Integer
      description:
  example: 
- uid: CRMScript.Global.Void.getScriptId(String)
  commentId: M:CRMScript.Global.Void.getScriptId(String)
  id: 'getScriptId(String)'
  so.intellisense: Void.getScriptId
  so.version: 4.2.1
  langs:
  - crmscript
  name: 'getScriptId(String)'
  nameWithType: Void.getScriptId(String)
  fullName: CRMScript.Global.Void.getScriptId(String)
  type: Method
  summary: "\nReturns the ID of the script matching the parameter\n"
  remarks: 
  syntax: 
    content: Integer getScriptId(String idString)
    parameters:
    - id: idString
      type: CRMScript.Global.String
      description: "The ID string of the script."
    return:
      type: CRMScript.Global.Integer
      description: "The ID of the script matching the parameter; null if no match found."
  example: 
- uid: CRMScript.Global.Void.getSelectionIds(Integer)
  commentId: M:CRMScript.Global.Void.getSelectionIds(Integer)
  id: 'getSelectionIds(Integer)'
  so.intellisense: Void.getSelectionIds
  so.version: 7.5
  langs:
  - crmscript
  name: 'getSelectionIds(Integer)'
  nameWithType: Void.getSelectionIds(Integer)
  fullName: CRMScript.Global.Void.getSelectionIds(Integer)
  type: Method
  summary: "\nReturns the IDs of the objects in the selection with the given ID.\n"
  remarks: 
  syntax: 
    content: Integer[] getSelectionIds(Integer id)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: "ID of the selection."
    return:
      type: CRMScript.Global.Integer[]
      description: "The IDs of the objects in the selection."
  example: 
- uid: CRMScript.Global.Void.getSessionVariable(String)
  commentId: M:CRMScript.Global.Void.getSessionVariable(String)
  id: 'getSessionVariable(String)'
  so.intellisense: Void.getSessionVariable
  so.version: 4.0.0
  langs:
  - crmscript
  name: 'getSessionVariable(String)'
  nameWithType: Void.getSessionVariable(String)
  fullName: CRMScript.Global.Void.getSessionVariable(String)
  type: Method
  summary: "\nMakes it possible to store variables in the database which the web application can use as long as a session lives. That is until a user logs out.\n"
  remarks: 
  syntax: 
    content: String getSessionVariable(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "Name of variable to read."
    return:
      type: CRMScript.Global.String
      description: "String value if found."
  example: 
- uid: CRMScript.Global.Void.getSessionVariables()
  commentId: M:CRMScript.Global.Void.getSessionVariables()
  id: 'getSessionVariables()'
  so.intellisense: Void.getSessionVariables
  so.version: 7.1.0
  langs:
  - crmscript
  name: 'getSessionVariables()'
  nameWithType: Void.getSessionVariables()
  fullName: CRMScript.Global.Void.getSessionVariables()
  type: Method
  summary: "\nReturns a map containing all session variables for the current session.\n"
  remarks: 
  syntax: 
    content: Map getSessionVariables()
    parameters: []
    return:
      type: CRMScript.Native.Map
      description: "All session variables for the current session."
  example: 
- uid: CRMScript.Global.Void.getStatusIdFromName(String)
  commentId: M:CRMScript.Global.Void.getStatusIdFromName(String)
  id: 'getStatusIdFromName(String)'
  so.intellisense: Void.getStatusIdFromName
  so.version: 7.5
  langs:
  - crmscript
  name: 'getStatusIdFromName(String)'
  nameWithType: Void.getStatusIdFromName(String)
  fullName: CRMScript.Global.Void.getStatusIdFromName(String)
  type: Method
  summary: "\nReturns the ID of the status with the given name.\n"
  remarks: 
  syntax: 
    content: Integer getStatusIdFromName(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "Name of the document."
    return:
      type: CRMScript.Global.Integer
      description: "The ID of the status."
  example: 
- uid: CRMScript.Global.Void.getSystemFlags()
  commentId: M:CRMScript.Global.Void.getSystemFlags()
  id: 'getSystemFlags()'
  so.intellisense: Void.getSystemFlags
  langs:
  - crmscript
  name: 'getSystemFlags()'
  nameWithType: Void.getSystemFlags()
  fullName: CRMScript.Global.Void.getSystemFlags()
  type: Method
  summary: "\nGets the system flags. This is the same value as is stored in the database table config.flags.\n"
  remarks: 
  syntax: 
    content: Integer getSystemFlags()
    parameters: []
    return:
      type: CRMScript.Global.Integer
      description: "Flags."
  example: 
- uid: CRMScript.Global.Void.getSystemLang()
  commentId: M:CRMScript.Global.Void.getSystemLang()
  id: 'getSystemLang()'
  so.intellisense: Void.getSystemLang
  so.version: 7.9.0
  langs:
  - crmscript
  name: 'getSystemLang()'
  nameWithType: Void.getSystemLang()
  fullName: CRMScript.Global.Void.getSystemLang()
  type: Method
  summary: "\nReturns the active system language.\n"
  remarks: 
  syntax: 
    content: String getSystemLang()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The active system language."
  example: 
- uid: CRMScript.Global.Void.getUserLang()
  commentId: M:CRMScript.Global.Void.getUserLang()
  id: 'getUserLang()'
  so.intellisense: Void.getUserLang
  so.version: 7.9.0
  langs:
  - crmscript
  name: 'getUserLang()'
  nameWithType: Void.getUserLang()
  fullName: CRMScript.Global.Void.getUserLang()
  type: Method
  summary: "\nReturns the active user language.\n"
  remarks: 
  syntax: 
    content: String getUserLang()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "The active user language."
  example: 
- uid: CRMScript.Global.Void.getUsername(Integer)
  commentId: M:CRMScript.Global.Void.getUsername(Integer)
  id: 'getUsername(Integer)'
  so.intellisense: Void.getUsername
  so.version: 4.7.1
  langs:
  - crmscript
  name: 'getUsername(Integer)'
  nameWithType: Void.getUsername(Integer)
  fullName: CRMScript.Global.Void.getUsername(Integer)
  type: Method
  summary: "\nGets username from the user ID.\n"
  remarks: 
  syntax: 
    content: String getUsername(Integer userId)
    parameters:
    - id: userId
      type: CRMScript.Global.Integer
      description: "The user ID."
    return:
      type: CRMScript.Global.String
      description: "Username."
  example: 
- uid: CRMScript.Global.Void.getVariable(String)
  commentId: M:CRMScript.Global.Void.getVariable(String)
  id: 'getVariable(String)'
  so.intellisense: Void.getVariable
  langs:
  - crmscript
  name: 'getVariable(String)'
  nameWithType: Void.getVariable(String)
  fullName: CRMScript.Global.Void.getVariable(String)
  type: Method
  summary: "\nReturns the value in the global environment (used for communication between the script the calling context).\n"
  remarks: 
  syntax: 
    content: String getVariable(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "The name of the variable."
    return:
      type: CRMScript.Global.String
      description: "The value of the variable."
  example: 
- uid: CRMScript.Global.Void.getVariables()
  commentId: M:CRMScript.Global.Void.getVariables()
  id: 'getVariables()'
  so.intellisense: Void.getVariables
  so.version: 7.1.0
  langs:
  - crmscript
  name: 'getVariables()'
  nameWithType: Void.getVariables()
  fullName: CRMScript.Global.Void.getVariables()
  type: Method
  summary: "\nReturns a map containing all run time environment variables (available through getVariable()).\n"
  remarks: 
  syntax: 
    content: Map getVariables()
    parameters: []
    return:
      type: CRMScript.Native.Map
      description: "All run time environment variables."
  example: 
- uid: CRMScript.Global.Void.getWarnings()
  commentId: M:CRMScript.Global.Void.getWarnings()
  id: 'getWarnings()'
  so.intellisense: Void.getWarnings
  langs:
  - crmscript
  name: 'getWarnings()'
  nameWithType: Void.getWarnings()
  fullName: CRMScript.Global.Void.getWarnings()
  type: Method
  summary: "\nReturns a map of the current system warnings.\n"
  remarks: "\nWarnings are messages intended for system administrators, such as email failure warnings, expired FAQ entries, etc. They are normally listed on the status screen.\n"
  syntax: 
    content: Map getWarnings()
    parameters: []
    return:
      type: CRMScript.Native.Map
      description: "The current system warnings."
  example: 
- uid: CRMScript.Global.Void.htmlConvToText(String)
  commentId: M:CRMScript.Global.Void.htmlConvToText(String)
  id: 'htmlConvToText(String)'
  so.intellisense: Void.htmlConvToText
  langs:
  - crmscript
  name: 'htmlConvToText(String)'
  nameWithType: Void.htmlConvToText(String)
  fullName: CRMScript.Global.Void.htmlConvToText(String)
  type: Method
  summary: "\nConverts the given HTML text to plain text.\n"
  remarks: 
  syntax: 
    content: String htmlConvToText(String text)
    parameters:
    - id: text
      type: CRMScript.Global.String
      description: "An HTML text."
    return:
      type: CRMScript.Global.String
      description: "A textual version of the HTML text."
  example: 
- uid: CRMScript.Global.Void.idToLang(Integer)
  commentId: M:CRMScript.Global.Void.idToLang(Integer)
  id: 'idToLang(Integer)'
  so.intellisense: Void.idToLang
  so.version: 3.1.8
  langs:
  - crmscript
  name: 'idToLang(Integer)'
  nameWithType: Void.idToLang(Integer)
  fullName: CRMScript.Global.Void.idToLang(Integer)
  type: Method
  summary: "\nReturns the code of the given language ID.\n"
  remarks: 
  syntax: 
    content: String idToLang(Integer langId)
    parameters:
    - id: langId
      type: CRMScript.Global.Integer
      description: "Language Id."
    return:
      type: CRMScript.Global.String
      description: "Language code of the given language Id."
  example: 
- uid: CRMScript.Global.Void.invoiceTypesExists()
  commentId: M:CRMScript.Global.Void.invoiceTypesExists()
  id: 'invoiceTypesExists()'
  so.intellisense: Void.invoiceTypesExists
  so.version: 4.0.0
  langs:
  - crmscript
  name: 'invoiceTypesExists()'
  nameWithType: Void.invoiceTypesExists()
  fullName: CRMScript.Global.Void.invoiceTypesExists()
  type: Method
  summary: "\nChecks if invoice types exist in the database.\n"
  remarks: 
  syntax: 
    content: Bool invoiceTypesExists()
    parameters: []
    return:
      type: CRMScript.Global.Bool
      description: "True if there are invoice types; otherwise, False."
  example: 
- uid: CRMScript.Global.Void.isValidPhoneNumber(String,Bool)
  commentId: M:CRMScript.Global.Void.isValidPhoneNumber(String,Bool)
  id: 'isValidPhoneNumber(String,Bool)'
  so.intellisense: Void.isValidPhoneNumber
  langs:
  - crmscript
  name: 'isValidPhoneNumber(String,Bool)'
  nameWithType: Void.isValidPhoneNumber(String,Bool)
  fullName: CRMScript.Global.Void.isValidPhoneNumber(String,Bool)
  type: Method
  summary: "\nValidates if it is a valid phonenumber\n"
  remarks: 
  syntax: 
    content: Bool isValidPhoneNumber(String nr, Bool isMultiple)
    parameters:
    - id: nr
      type: CRMScript.Global.String
      description: "Number to check"
    - id: isMultiple
      type: CRMScript.Global.Bool
      description: "True if more than one phone number (comma separated)."
    return:
      type: CRMScript.Global.Bool
      description: "True if valid phone number; otherwise, false."
  example: 
- uid: CRMScript.Global.Void.langToId(String)
  commentId: M:CRMScript.Global.Void.langToId(String)
  id: 'langToId(String)'
  so.intellisense: Void.langToId
  so.version: 3.1.8
  langs:
  - crmscript
  name: 'langToId(String)'
  nameWithType: Void.langToId(String)
  fullName: CRMScript.Global.Void.langToId(String)
  type: Method
  summary: "\nReturns the ID of the given language code.\n"
  remarks: 
  syntax: 
    content: Integer langToId(String langCode)
    parameters:
    - id: langCode
      type: CRMScript.Global.String
      description: "Language code."
    return:
      type: CRMScript.Global.Integer
      description: "ID of the given language code. If no match, it returns 0 (which is Norwegian)."
  example: 
- uid: CRMScript.Global.Void.log(String)
  commentId: M:CRMScript.Global.Void.log(String)
  id: 'log(String)'
  so.intellisense: Void.log
  langs:
  - crmscript
  name: 'log(String)'
  nameWithType: Void.log(String)
  fullName: CRMScript.Global.Void.log(String)
  type: Method
  summary: "\nWrites a message to the new log (the one in the database), which can be accessed with &quot;rms?action=newLog&quot;.\n"
  remarks: 
  syntax: 
    content: Void log(String msg)
    parameters:
    - id: msg
      type: CRMScript.Global.String
      description: "The message to write."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.logMessage(String)
  commentId: M:CRMScript.Global.Void.logMessage(String)
  id: 'logMessage(String)'
  so.intellisense: Void.logMessage
  langs:
  - crmscript
  name: 'logMessage(String)'
  nameWithType: Void.logMessage(String)
  fullName: CRMScript.Global.Void.logMessage(String)
  type: Method
  summary: "\nWrites a message to the log file.\n"
  remarks: 
  syntax: 
    content: Void logMessage(String message)
    parameters:
    - id: message
      type: CRMScript.Global.String
      description: "The message to log."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.makePassword(Integer)
  commentId: M:CRMScript.Global.Void.makePassword(Integer)
  id: 'makePassword(Integer)'
  so.intellisense: Void.makePassword
  langs:
  - crmscript
  name: 'makePassword(Integer)'
  nameWithType: Void.makePassword(Integer)
  fullName: CRMScript.Global.Void.makePassword(Integer)
  type: Method
  summary: "\nUsed to create a random password of length p, with the given seed charactersCreates and returns a random password of the given length. You can optionally pass the given seed characters.\n"
  remarks: 
  syntax: 
    content: String makePassword(Integer length)
    parameters:
    - id: length
      type: CRMScript.Global.Integer
      description: "Length of password."
    return:
      type: CRMScript.Global.String
      description: "A random password of the given length."
  example: 
- uid: CRMScript.Global.Void.makePassword(Integer,String)
  commentId: M:CRMScript.Global.Void.makePassword(Integer,String)
  id: 'makePassword(Integer,String)'
  so.intellisense: Void.makePassword
  langs:
  - crmscript
  name: 'makePassword(Integer,String)'
  nameWithType: Void.makePassword(Integer,String)
  fullName: CRMScript.Global.Void.makePassword(Integer,String)
  type: Method
  summary: "\nUsed to create a random password of length p, with the given seed charactersCreates and returns a random password of the given length.\n"
  remarks: 
  syntax: 
    content: String makePassword(Integer length, String seed)
    parameters:
    - id: length
      type: CRMScript.Global.Integer
      description: "Length of password"
    - id: seed
      type: CRMScript.Global.String
      description: "Valid characters."
    return:
      type: CRMScript.Global.String
      description: "A random password of the given length."
  example: 
- uid: CRMScript.Global.Void.mapValue(String)
  commentId: M:CRMScript.Global.Void.mapValue(String)
  id: 'mapValue(String)'
  so.intellisense: Void.mapValue
  langs:
  - crmscript
  name: 'mapValue(String)'
  nameWithType: Void.mapValue(String)
  fullName: CRMScript.Global.Void.mapValue(String)
  type: Method
  summary: "\nAllocates a new map and maps the given value to the string &quot;value&quot;.\n"
  remarks: 
  syntax: 
    content: Map mapValue(String value)
    parameters:
    - id: value
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Native.Map
      description: "A map containing the value."
  example: 
- uid: CRMScript.Global.Void.modulo(Integer,Integer)
  commentId: M:CRMScript.Global.Void.modulo(Integer,Integer)
  id: 'modulo(Integer,Integer)'
  so.intellisense: Void.modulo
  langs:
  - crmscript
  name: 'modulo(Integer,Integer)'
  nameWithType: Void.modulo(Integer,Integer)
  fullName: CRMScript.Global.Void.modulo(Integer,Integer)
  type: Method
  summary: "\nReturns a modulo b. This can also be done with the syntax &quot;a % b&quot;.\n"
  remarks: 
  syntax: 
    content: Integer modulo(Integer a, Integer b)
    parameters:
    - id: a
      type: CRMScript.Global.Integer
      description: "The number to divide."
    - id: b
      type: CRMScript.Global.Integer
      description: "The number to divide by."
    return:
      type: CRMScript.Global.Integer
      description: "The result of a modulo b."
  example: 
- uid: CRMScript.Global.Void.parseJSON(String)
  commentId: M:CRMScript.Global.Void.parseJSON(String)
  id: 'parseJSON(String)'
  so.intellisense: Void.parseJSON
  so.version: 4.8.1
  langs:
  - crmscript
  name: 'parseJSON(String)'
  nameWithType: Void.parseJSON(String)
  fullName: CRMScript.Global.Void.parseJSON(String)
  type: Method
  summary: "\nParses a JSON document and generate a tree of XMLNode's.\n"
  remarks: "\nThis function has a bug. Empty arrays will still return one child. We recommend using <code>parseJSON2()</code> instead where this bug has been fixed. Except for the fix, the function is identical. It is available from 8.4R03.\n"
  syntax: 
    content: XMLNode parseJSON(String jsonDocument)
    parameters:
    - id: jsonDocument
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Native.XMLNode."
  example: 
  - "\n<pre><code>String jsonString = &quot;{&quot;menu&quot;: {&quot;liste&quot;: [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, true, 123, 1.23 ],&quot;id&quot;: &quot;file&quot;,&quot;value&quot;: &quot;File&quot;&quot;tall&quot;: 1.234567,&quot;sant&quot;: true,&quot;usant&quot;: false,&quot;tom&quot;: null,&quot;popup&quot;: {&quot;menuitem&quot;: [{&quot;value&quot;: &quot;New&quot;, &quot;onclick&quot;:&quot;CreateNewDoc()&quot;},{&quot;value&quot;: &quot;Open&quot;, &quot;onclick&quot;: &quot;OpenDoc()&quot;},{&quot;value&quot;: &quot;Close&quot;, &quot;onclick&quot;: &quot;CloseDoc()&quot;}]}}}&quot;;\n\nXMLNode xmlObject = parseJSON(jsonString); // Converts jsonString to XML\nprintLine(xmlObject.toJSON(0)); // Prints out the actual JSON content\n\n//For example the following JSON document:\n//\n//{&quot;menu&quot;: {\n//  &quot;liste&quot;: [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, true, 123, 1.23 ],\n//  &quot;id&quot;: &quot;file&quot;,\n//  &quot;value&quot;: &quot;File&quot;,\n//  &quot;tall&quot;: 1.234567,\n//  &quot;sant&quot;: true,\n//  &quot;usant&quot;: false,\n//  &quot;tom&quot;: null,\n//  &quot;popup&quot;: {\n//    &quot;menuitem&quot;: [\n//      {&quot;value&quot;: &quot;New&quot;, &quot;onclick&quot;: &quot;CreateNewDoc()&quot;},\n//      {&quot;value&quot;: &quot;Open&quot;, &quot;onclick&quot;: &quot;OpenDoc()&quot;},\n//      {&quot;value&quot;: &quot;Close&quot;, &quot;onclick&quot;: &quot;CloseDoc()&quot;}\n//    ]\n//  }\n//}}\n//\n//\n//Output:\n//\n//&lt;root type=&quot;object&quot;&gt;\n//  &lt;menu type=&quot;object&quot;&gt;\n//    &lt;liste type=&quot;array&quot;&gt;\n//      &lt;item type=&quot;string&quot;&gt;1&lt;/item&gt;\n//      &lt;item type=&quot;string&quot;&gt;2&lt;/item&gt;\n//      &lt;item type=&quot;string&quot;&gt;3&lt;/item&gt;\n//      &lt;item type=&quot;bool&quot;&gt;true&lt;/item&gt;\n//      &lt;item type=&quot;number&quot;&gt;123&lt;/item&gt;\n//      &lt;item type=&quot;number&quot;&gt;1.23&lt;/item&gt;\n//    &lt;/liste&gt;\n//    &lt;id type=&quot;string&quot;&gt;file&lt;/id&gt;\n//    &lt;value type=&quot;string&quot;&gt;File&lt;/value&gt;\n//    &lt;tall type=&quot;number&quot;&gt;1.234567&lt;/tall&gt;\n//    &lt;sant type=&quot;bool&quot;&gt;true&lt;/sant&gt;\n//    &lt;usant type=&quot;bool&quot;&gt;false&lt;/usant&gt;\n//    &lt;tom type=&quot;null&quot;&gt;null&lt;/tom&gt;\n//    &lt;popup type=&quot;object&quot;&gt;\n//      &lt;menuitem type=&quot;array&quot;&gt;\n//        &lt;item type=&quot;object&quot;&gt;\n//          &lt;value type=&quot;string&quot;&gt;New&lt;/value&gt;\n//          &lt;onclick type=&quot;string&quot;&gt;CreateNewDoc()&lt;/onclick&gt;\n//        &lt;/item&gt;\n//        &lt;item type=&quot;object&quot;&gt;\n//          &lt;value type=&quot;string&quot;&gt;Open&lt;/value&gt;\n//          &lt;onclick type=&quot;string&quot;&gt;OpenDoc()&lt;/onclick&gt;\n//        &lt;/item&gt;\n//        &lt;item type=&quot;object&quot;&gt;\n//          &lt;value type=&quot;string&quot;&gt;Close&lt;/value&gt;\n//          &lt;onclick type=&quot;string&quot;&gt;CloseDoc()&lt;/onclick&gt;\n//        &lt;/item&gt;\n//      &lt;/menuitem&gt;\n//    &lt;/popup&gt;\n//  &lt;/menu&gt;\n//&lt;/root&gt;</code></pre>\n"
- uid: CRMScript.Global.Void.parseJSON2(String)
  commentId: M:CRMScript.Global.Void.parseJSON2(String)
  id: 'parseJSON2(String)'
  so.intellisense: Void.parseJSON2
  so.version: 8.4R03
  langs:
  - crmscript
  name: 'parseJSON2(String)'
  nameWithType: Void.parseJSON2(String)
  fullName: CRMScript.Global.Void.parseJSON2(String)
  type: Method
  summary: "\nParses a JSON document and generate a tree of XMLNode's.\n"
  remarks: 
  syntax: 
    content: XMLNode parseJSON2(String jsonDocument)
    parameters:
    - id: jsonDocument
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Native.XMLNode."
  example: 
  - "\n<pre><code>String jsonString = &quot;{&quot;menu&quot;: {&quot;liste&quot;: [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, true, 123, 1.23 ],&quot;id&quot;: &quot;file&quot;,&quot;value&quot;: &quot;File&quot;,&quot;tall&quot;: 1.234567,&quot;sant&quot;: true,&quot;usant&quot;: false,&quot;tom&quot;: null,&quot;popup&quot;: {&quot;menuitem&quot;: [{&quot;value&quot;: &quot;New&quot;, &quot;onclick&quot;: &quot;CreateNewDoc()&quot;},{&quot;value&quot;: &quot;Open&quot;, &quot;onclick&quot;: &quot;OpenDoc()&quot;},{&quot;value&quot;: &quot;Close&quot;, &quot;onclick&quot;: &quot;CloseDoc()&quot;}]}}}&quot;;\n\nXMLNode xmlObject = parseJSON2(jsonString); // Converts jsonString to XML\nprintLine(xmlObject.toJSON(0)); // Prints out the actual JSON content</code></pre>\n"
- uid: CRMScript.Global.Void.parseXML(String)
  commentId: M:CRMScript.Global.Void.parseXML(String)
  id: 'parseXML(String)'
  so.intellisense: Void.parseXML
  so.version: 4.0.0
  langs:
  - crmscript
  name: 'parseXML(String)'
  nameWithType: Void.parseXML(String)
  fullName: CRMScript.Global.Void.parseXML(String)
  type: Method
  summary: "\nParses an XML document and generate a tree of XMLNode's.\n"
  remarks: 
  syntax: 
    content: XMLNode parseXML(String xmlDocument)
    parameters:
    - id: xmlDocument
      type: CRMScript.Global.String
      description: "The XML document."
    return:
      type: CRMScript.Native.XMLNode
      description: "The root XMLNode."
  example: 
- uid: CRMScript.Global.Void.pow()
  commentId: M:CRMScript.Global.Void.pow()
  id: 'pow()'
  so.intellisense: Void.pow
  langs:
  - crmscript
  name: 'pow()'
  nameWithType: Void.pow()
  fullName: CRMScript.Global.Void.pow()
  type: Method
  summary: "\nThe pow function returns base raised to the expth power.\n"
  remarks: 
  syntax: 
    content: Float pow(Float base, Float exp)
    parameters:
    - id: base
      type: CRMScript.Global.Float
      description: "The base."
    - id: exp
      type: CRMScript.Global.Float
      description: "The exponent."
    return:
      type: CRMScript.Global.Float
      description: "The base raised to the expth power. If the base is zero and exp is less than or equal to zero, or the base is negative and exp is not an integer, an invalid float like -1.#IND0 will be returned. If the result is too large an invalid float like 1.#INF0 will be returned."
  example: 
- uid: CRMScript.Global.Void.print(String)
  commentId: M:CRMScript.Global.Void.print(String)
  id: 'print(String)'
  so.intellisense: Void.print
  langs:
  - crmscript
  name: 'print(String)'
  nameWithType: Void.print(String)
  fullName: CRMScript.Global.Void.print(String)
  type: Method
  summary: "\nPrints the string to the screen.\n"
  remarks: "\nWill only work in certain contexts (when there is a screen to print to).\n"
  syntax: 
    content: Void print(String s)
    parameters:
    - id: s
      type: CRMScript.Global.String
      description: "The string to print."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.printBinary(Byte[])
  commentId: M:CRMScript.Global.Void.printBinary(Byte[])
  id: 'printBinary(Byte[])'
  so.intellisense: Void.printBinary
  so.version: 4.10.2
  langs:
  - crmscript
  name: 'printBinary(Byte[])'
  nameWithType: Void.printBinary(Byte[])
  fullName: CRMScript.Global.Void.printBinary(Byte[])
  type: Method
  summary: "\nOutputs the bytes to the standard output stream. You can pass the data to encode as either Byte[] or NSStream.\n"
  remarks: 
  syntax: 
    content: Void printBinary(Byte[])
    parameters:
    - id: data
      type: CRMScript.Global.Byte[]
      description: "The binary data to output."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.printBinary(NSStream)
  commentId: M:CRMScript.Global.Void.printBinary(NSStream)
  id: 'printBinary(NSStream)'
  so.intellisense: Void.printBinary
  so.version: 8.5R08
  langs:
  - crmscript
  name: 'printBinary(NSStream)'
  nameWithType: Void.printBinary(NSStream)
  fullName: CRMScript.Global.Void.printBinary(NSStream)
  type: Method
  summary: "\nOutputs the bytes to the standard output stream. You can pass the data to encode as either Byte[] or NSStream.\n"
  remarks: 
  syntax: 
    content: Void printBinary(NSStream)
    parameters:
    - id: data
      type: CRMScript.NetServer.NSStream
      description: "The binary data to output."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.printDebug(String)
  commentId: M:CRMScript.Global.Void.printDebug(String)
  id: 'printDebug(String)'
  so.intellisense: Void.printDebug
  langs:
  - crmscript
  name: 'printDebug(String)'
  nameWithType: Void.printDebug(String)
  fullName: CRMScript.Global.Void.printDebug(String)
  type: Method
  summary: "\nAdds the input debug to the debug string which will be shown in the debug window.\n"
  remarks: 
  syntax: 
    content: Void printDebug(String debug)
    parameters:
    - id: debug
      type: CRMScript.Global.String
      description: "The string to print."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.printLine(String)
  commentId: M:CRMScript.Global.Void.printLine(String)
  id: 'printLine(String)'
  so.intellisense: Void.printLine
  so.version: 7.0
  langs:
  - crmscript
  name: 'printLine(String)'
  nameWithType: Void.printLine(String)
  fullName: CRMScript.Global.Void.printLine(String)
  type: Method
  summary: "\nPrints lines into standard output without appending \\r\\n in p_line.\n"
  remarks: 
  syntax: 
    content: Void printLine(String line)
    parameters:
    - id: line
      type: CRMScript.Global.String
      description:  The line to print."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.rand(Integer,Integer)
  commentId: M:CRMScript.Global.Void.rand(Integer,Integer)
  id: 'rand(Integer,Integer)'
  so.intellisense: Void.rand
  langs:
  - crmscript
  name: 'rand(Integer,Integer)'
  nameWithType: Void.rand(Integer,Integer)
  fullName: CRMScript.Global.Void.rand(Integer,Integer)
  type: Method
  summary: "\nReturns a random value between min and max. The seed is set by the cgi application when it is invoked.\n"
  remarks: 
  syntax: 
    content: Integer rand(Integer min, Integer max)
    parameters:
    - id: min
      type: CRMScript.Global.Integer
      description: "The minimum value to return."
    - id: max
      type: CRMScript.Global.Integer
      description: "The maximum value to return."
    return:
      type: CRMScript.Global.Integer
      description: "A random value min &lt;= r &lt;= max."
  example: 
- uid: CRMScript.Global.Void.reloadAndSendShipment(Integer)
  commentId: M:CRMScript.Global.Void.reloadAndSendShipment(Integer)
  id: 'reloadAndSendShipment(Integer)'
  so.intellisense: Void.reloadAndSendShipment
  langs:
  - crmscript
  name: 'reloadAndSendShipment(Integer)'
  nameWithType: Void.reloadAndSendShipment(Integer)
  fullName: CRMScript.Global.Void.reloadAndSendShipment(Integer)
  type: Method
  summary: "\nReloads mailings selections and schedule to send again immediately.\n"
  remarks: "\nUsed when you have added more people to the selection and want to send to them as well.\n"
  syntax: 
    content: Bool reloadAndSendShipment(Integer shipmentId)
    parameters:
    - id: shipmentId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Bool
      description: "True if it worked; False if it did not work, because the mailing was in an illegal state for this operation."
  example: 
- uid: CRMScript.Global.Void.removeHtmlElement(Integer)
  commentId: M:CRMScript.Global.Void.removeHtmlElement(Integer)
  id: 'removeHtmlElement(Integer)'
  so.intellisense: Void.removeHtmlElement
  so.version: 4.0.0
  langs:
  - crmscript
  name: 'removeHtmlElement(Integer)'
  nameWithType: Void.removeHtmlElement(Integer)
  fullName: CRMScript.Global.Void.removeHtmlElement(Integer)
  type: Method
  summary: "\nRemoves the element with the given index\n"
  remarks: "\nCan only be called from a screen definition, it will fail if called from a regular script\n"
  syntax: 
    content: Void removeHtmlElement(Integer index)
    parameters:
    - id: index
      type: CRMScript.Global.Integer
      description: "The index of the element to remove."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.resetChat(Integer)
  commentId: M:CRMScript.Global.Void.resetChat(Integer)
  id: 'resetChat(Integer)'
  so.intellisense: Void.resetChat
  so.version: 8.5R10
  langs:
  - crmscript
  name: 'resetChat(Integer)'
  nameWithType: Void.resetChat(Integer)
  fullName: CRMScript.Global.Void.resetChat(Integer)
  type: Method
  summary: "\nResets a chat session and places it in queue/pre-chat-form/offline-form depending on the topic's settings.\n"
  remarks: "\nTypically called when a Bot wants to transfer a chat session to a human user agent.\n"
  syntax: 
    content: Void resetChat(Integer sessionId)
    parameters:
    - id: sessionId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.runProgram(String)
  commentId: M:CRMScript.Global.Void.runProgram(String)
  id: 'runProgram(String)'
  so.intellisense: Void.runProgram
  so.envir: onsite
  langs:
  - crmscript
  name: 'runProgram(String)'
  nameWithType: Void.runProgram(String)
  fullName: CRMScript.Global.Void.runProgram(String)
  type: Method
  summary: "\nExecutes the program (given command) and returns what was sent to stdout. <strong>This method is not available in CRM Online.</strong>\n"
  remarks: "\nThe owner of the process running the CRMScript needs permissions to execute the program. You can optionally pass the codepage used.\n"
  syntax: 
    content: String runProgram(String command)
    parameters:
    - id: command
      type: CRMScript.Global.String
      description: "Command line  path to program and parameters."
    return:
      type: CRMScript.Global.String
      description:
  example: 
- uid: CRMScript.Global.Void.runProgram(String,String)
  commentId: M:CRMScript.Global.Void.runProgram(String,String)
  id: 'runProgram(String,String)'
  so.intellisense: Void.runProgram
  langs:
  - crmscript
  name: 'runProgram(String,String)'
  nameWithType: Void.runProgram(String,String)
  fullName: CRMScript.Global.Void.runProgram(String,String)
  type: Method
  summary: "\nExecutes the program (given command) with a codepage and returns what was sent to stdout. <strong>This method is not available in CRM Online.</strong>\n"
  remarks: "\nThe owner of the process running the CRMScript needs permissions to execute the program.\n"
  syntax: 
    content: String runProgram(String command, String codepage)
    parameters:
    - id: command
      type: CRMScript.Global.String
      description: "Command line  path to program and parameters"
    - id: codepage
      type: CRMScript.Global.String
      description: "The codepage used."
    return:
      type: CRMScript.Global.String
      description:
  example: 
- uid: CRMScript.Global.Void.saveAllCgiAttachments(String)
  commentId: M:CRMScript.Global.Void.saveAllCgiAttachments(String)
  id: 'saveAllCgiAttachments(String)'
  so.intellisense: Void.saveAllCgiAttachments
  langs:
  - crmscript
  name: 'saveAllCgiAttachments(String)'
  nameWithType: Void.saveAllCgiAttachments(String)
  fullName: CRMScript.Global.Void.saveAllCgiAttachments(String)
  type: Method
  summary: "\nSaves all cgi attachments with the given name.\n"
  remarks: 
  syntax: 
    content: Integer[] saveAllCgiAttachments (String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "The name of attachments to be saved."
    return:
      type: CRMScript.Global.Integer[]
      description: "An array containing the attachment IDs of all the saved attachments."
  example: 
- uid: CRMScript.Global.Void.saveCgiAttachment(String)
  commentId: M:CRMScript.Global.Void.saveCgiAttachment(String)
  id: 'saveCgiAttachment(String)'
  so.intellisense: Void.saveCgiAttachment
  langs:
  - crmscript
  name: 'saveCgiAttachment(String)'
  nameWithType: Void.saveCgiAttachment(String)
  fullName: CRMScript.Global.Void.saveCgiAttachment(String)
  type: Method
  summary: "\nSaves the attachment in cgi variable with the name given and returns the ID of the attachment record in the attachment table.\n"
  remarks: 
  syntax: 
    content: Integer saveCgiAttachment(String varName)
    parameters:
    - id: varName
      type: CRMScript.Global.String
      description: "The name of cgi variable."
    return:
      type: CRMScript.Global.Integer
      description: "The ID of the saved attachment."
  example: 
- uid: CRMScript.Global.Void.setChatStatus(Integer,Integer)
  commentId: M:CRMScript.Global.Void.setChatStatus(Integer,Integer)
  id: 'setChatStatus(Integer,Integer)'
  so.intellisense: Void.setChatStatus
  so.version: 8.2
  langs:
  - crmscript
  name: 'setChatStatus(Integer,Integer)'
  nameWithType: Void.setChatStatus(Integer,Integer)
  fullName: CRMScript.Global.Void.setChatStatus(Integer,Integer)
  type: Method
  summary: "\nChanges the status of a chat session.\n"
  remarks: "\nThe available statuses are:<p></p>\n<ul><li>StatusInvalid = 0,</li><li>StatusPreChatForm = 1,</li><li>StatusFaq = 2,</li><li>StatusOfflineForm = 3,</li><li>StatusInQueue = 4,</li><li>StatusCustomerLast = 5,</li><li>StatusUserLast = 6,</li><li>StatusFinished = 7,</li><li>StatusDeleted = 8,</li><li>StatusClosed = 9,</li><li>StatusRequestPosted = 10,</li></ul>\n"
  syntax: 
    content: Void SetChatStatus(Integer sessionId, Integer status)
    parameters:
    - id: sessionId
      type: CRMScript.Global.Integer
      description: 
    - id: status
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.setCookie(String,String,Bool)
  commentId: M:CRMScript.Global.Void.setCookie(String,String,Bool)
  id: 'setCookie(String,String,Bool)'
  so.intellisense: Void.setCookie
  so.envir: onsite
  langs:
  - crmscript
  name: 'setCookie(String,String,Bool)'
  nameWithType: Void.setCookie(String,String,Bool)
  fullName: CRMScript.Global.Void.setCookie(String,String,Bool)
  type: Method
  summary: "\n<strong>This method is not available in CRM Online.</strong>\n"
  remarks: "\nNB! Doesn't work in the customer center, use parser variable with an underscore (_) instead.\n"
  syntax: 
    content: Void setCookie(String name, String value, Bool persistent)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    - id: value
      type: CRMScript.Global.String
      description: 
    - id: persistent
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.setCurrent(String,String)
  commentId: M:CRMScript.Global.Void.setCurrent(String,String)
  id: 'setCurrent(String,String)'
  so.intellisense: Void.setCurrent
  langs:
  - crmscript
  name: 'setCurrent(String,String)'
  nameWithType: Void.setCurrent(String,String)
  fullName: CRMScript.Global.Void.setCurrent(String,String)
  type: Method
  summary: "\nMaps the given key and value in the map of the values common for all the SuperOffice web applications running.\n"
  remarks: 
  syntax: 
    content: Void SetCurrent(String key, String value)
    parameters:
    - id: key
      type: CRMScript.Global.String
      description: 
    - id: value
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.setFromCgi()
  commentId: M:CRMScript.Global.Void.setFromCgi()
  id: 'setFromCgi()'
  so.intellisense: Void.setFromCgi
  langs:
  - crmscript
  name: 'setFromCgi()'
  nameWithType: Void.setFromCgi()
  fullName: CRMScript.Global.Void.setFromCgi()
  type: Method
  summary: "\nSets all the elements of the associated screen from the global CGI instance. This is normally done when a screen is loaded/reloaded but after the load script."
  remarks: "\nThis function allows one to force this element initialization in the script, so that values may be accessed.n\n"
  syntax: 
    content: Void SetFromCgi()
    parameters: []
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.setGlobalVariable(String,String)
  commentId: M:CRMScript.Global.Void.setGlobalVariable(String,String)
  id: 'setGlobalVariable(String,String)'
  so.intellisense: Void.setGlobalVariable
  so.version: 4.9.1
  langs:
  - crmscript
  name: 'setGlobalVariable(String,String)'
  nameWithType: Void.setGlobalVariable(String,String)
  fullName: CRMScript.Global.Void.setGlobalVariable(String,String)
  type: Method
  summary: "Sets the value of a global variable (used for communication between different scripts).\n"
  remarks: 
  syntax: 
    content: Void SetGlobalVariable(String name, String value)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "The name of the variable."
    - id: value
      type: CRMScript.Global.String
      description: "The value of the variable."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.setHidden(String,String)
  commentId: M:CRMScript.Global.Void.setHidden(String,String)
  id: 'setHidden(String,String)'
  so.intellisense: Void.setHidden
  langs:
  - crmscript
  name: 'setHidden(String,String)'
  nameWithType: Void.setHidden(String,String)
  fullName: CRMScript.Global.Void.setHidden(String,String)
  type: Method
  summary: "\nSets the value of a hidden variable in the associated screen. Hidden variables are values that are carried through a screen, and which can be accessed by the following scripts.\n"
  remarks: 
  syntax: 
    content: Void SetHidden(String name, String value)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "The name of the variable."
    - id: value
      type: CRMScript.Global.String
      description: "The value of the variable."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.setPageFocusFirstControl(Bool)
  commentId: M:CRMScript.Global.Void.setPageFocusFirstControl(Bool)
  id: 'setPageFocusFirstControl(Bool)'
  so.intellisense: Void.setPageFocusFirstControl
  langs:
  - crmscript
  name: 'setPageFocusFirstControl(Bool)'
  nameWithType: Void.setPageFocusFirstControl(Bool)
  fullName: CRMScript.Global.Void.setPageFocusFirstControl(Bool)
  type: Method
  summary: "\nUsed to set focus to first control in screens.\n"
  remarks: 
  syntax: 
    content: Void SetPageFocusFirstControl(Bool p0)
    parameters:
    - id: p0
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.setPageOnLoad(String)
  commentId: M:CRMScript.Global.Void.setPageOnLoad(String)
  id: 'setPageOnLoad(String)'
  so.intellisense: Void.setPageOnLoad
  so.version: 7.5
  langs:
  - crmscript
  name: 'setPageOnLoad(String)'
  nameWithType: Void.setPageOnLoad(String)
  fullName: CRMScript.Global.Void.setPageOnLoad(String)
  type: Method
  summary: "\nVoid setPageOnLoad(String onLoad)\n"
  remarks: 
  syntax: 
    content: Void SetPageOnLoad(String p0)
    parameters:
    - id: onLoad
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.setPageRefresh(Integer)
  commentId: M:CRMScript.Global.Void.setPageRefresh(Integer)
  id: 'setPageRefresh(Integer)'
  so.intellisense: Void.setPageRefresh
  so.version: 3.1.1
  langs:
  - crmscript
  name: 'setPageRefresh(Integer)'
  nameWithType: Void.setPageRefresh(Integer)
  fullName: CRMScript.Global.Void.setPageRefresh(Integer)
  type: Method
  summary: "\nSets the page meta refresh to the specified seconds, thus making the screen refresh.\n"
  remarks: "\nIf this method is used in a script that is not connected to a screen, nothing will happen.\n"
  syntax: 
    content: Void SetPageRefresh(Integer seconds)
    parameters:
    - id: seconds
      type: CRMScript.Global.Integer
      description: "Number of seconds for the refresh."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.setPageTitle(String)
  commentId: M:CRMScript.Global.Void.setPageTitle(String)
  id: 'setPageTitle(String)'
  so.intellisense: Void.setPageTitle
  so.version: 3.1.5
  langs:
  - crmscript
  name: 'setPageTitle(String)'
  nameWithType: Void.setPageTitle(String)
  fullName: CRMScript.Global.Void.setPageTitle(String)
  type: Method
  summary: "\nAlters the page title. You will be able to set the text after the version information.\n"
  remarks: 
  syntax: 
    content: Void SetPageTitle(String title)
    parameters:
    - id: title
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.setParserVariable(String,String)
  commentId: M:CRMScript.Global.Void.setParserVariable(String,String)
  id: 'setParserVariable(String,String)'
  so.intellisense: Void.setParserVariable
  langs:
  - crmscript
  name: 'setParserVariable(String,String)'
  nameWithType: Void.setParserVariable(String,String)
  fullName: CRMScript.Global.Void.setParserVariable(String,String)
  type: Method
  summary: "\nSets (adds) a variable to the global Parser instance.\n"
  remarks: 
  syntax: 
    content: Void SetParserVariable(String name, String value)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "The name of the variable."
    - id: value
      type: CRMScript.Global.String
      description: "The value of the variable."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.setSessionVariable(String,String)
  commentId: M:CRMScript.Global.Void.setSessionVariable(String,String)
  id: 'setSessionVariable(String,String)'
  so.intellisense: Void.setSessionVariable
  so.version: 7.0
  langs:
  - crmscript
  name: 'setSessionVariable(String,String)'
  nameWithType: Void.setSessionVariable(String,String)
  fullName: CRMScript.Global.Void.setSessionVariable(String,String)
  type: Method
  summary: "\nWrites a SessionObject entry to the databaseWrites a SessionObject entry to the database.\n"
  remarks: "\nStores variables in the database that the web application can use as long as a session lives (until a user logs out).\n"
  syntax: 
    content: String setSessionVariable(String name, String value)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "Name of variable. May be empty, in which case the ID of the first row will be used."
    - id: value
      type: CRMScript.Global.String
      description: "Value to store."
    return:
      type: CRMScript.Global.String
      description:
  example: 
- uid: CRMScript.Global.Void.setUserIsTyping(Integer,Bool)
  commentId: M:CRMScript.Global.Void.setUserIsTyping(Integer,Bool)
  id: 'setUserIsTyping(Integer,Bool)'
  so.intellisense: Void.setUserIsTyping
  so.version: 8.5R10
  langs:
  - crmscript
  name: 'setUserIsTyping(Integer,Bool)'
  nameWithType: Void.setUserIsTyping(Integer,Bool)
  fullName: CRMScript.Global.Void.setUserIsTyping(Integer,Bool)
  type: Method
  summary: "\nSets or clears the &quot;User is typing&quot; flag of a chat session.\n"
  remarks: 
  syntax: 
    content: Void SetUserIsTyping(Integer sessionId, Bool isTyping)
    parameters:
    - id: sessionId
      type: CRMScript.Global.Integer
      description: 
    - id: isTyping
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.setVariable(String,String)
  commentId: M:CRMScript.Global.Void.setVariable(String,String)
  id: 'setVariable(String,String)'
  so.intellisense: Void.setVariable
  langs:
  - crmscript
  name: 'setVariable(String,String)'
  nameWithType: Void.setVariable(String,String)
  fullName: CRMScript.Global.Void.setVariable(String,String)
  type: Method
  summary: "\nSets the value in the global environment (used for communication between the script the calling context).\n"
  remarks: 
  syntax: 
    content: Void SetVariable(String name, String value)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "The name of the variable."
    - id: value
      type: CRMScript.Global.String
      description: "The value of the variable."
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Global.Void.simpleTwoWay(Byte[])
  commentId: M:CRMScript.Global.Void.simpleTwoWay(Byte[])
  id: 'simpleTwoWay(Byte[])'
  so.intellisense: Void.simpleTwoWay
  so.version: 4.0.0
  langs:
  - crmscript
  name: 'simpleTwoWay(Byte[])'
  nameWithType: Void.simpleTwoWay(Byte[])
  fullName: CRMScript.Global.Void.simpleTwoWay(Byte[])
  type: Method
  summary: "\nSimple two-way data encryption.  Data -&gt; Encrypted data -&gt; data\n"
  remarks: 
  syntax: 
    content: Byte[] simpleTwoWay(Byte[] data)
    parameters:
    - id: data
      type: CRMScript.Global.Byte[]
      description: "Byte array to encrypt/decrypt."
    return:
      type: CRMScript.Global.Byte[]
      description: "Byte array with encrypted/decrypted data."
  example: 
- uid: CRMScript.Global.Void.sleep()
  commentId: M:CRMScript.Global.Void.sleep()
  id: 'sleep()'
  so.intellisense: Void.sleep
  langs:
  - crmscript
  name: 'sleep()'
  nameWithType: Void.sleep()
  fullName: CRMScript.Global.Void.sleep()
  type: Method
  summary: "\nSleeps (give up CPU) for some time.\n"
  remarks: "\nUseful in some CPU-intensive loops to maintain a responsive system.\n"
  syntax: 
    content: Void sleep(Float seconds)
    parameters:
    - id: second
      type: CRMScript.Global.Float
      description: "Number of seconds to sleep."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>sleep(01); //sleeps for about one-tenth of a second.</code></pre>\n"
- uid: CRMScript.Global.Void.getTypeName(Generic)
  commentId: M:CRMScript.Global.Void.getTypeName(Generic)
  id: getTypeName(Generic)
  so.intellisense: Void.getTypeName
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: getTypeName(Generic)
  nameWithType: Void.getTypeName(Generic)
  fullName: CRMScript.Global.Void.getTypeName(Generic)
  type: Method
  summary: "\nReturns the type of a variable (will automatically be up-casted to generic).\n"
  example:
  - "\n<pre><code>printLine(getTypeName(getCurrentDateTime()));</code></pre>\n"
  syntax:
    content: String getTypeName(Generic generic)
    parameters:
    - id: value
      type: CRMScript.Native.Generic
      description: "A variable of unknown type."
    return:
      type: CRMScript.Global.String
      description: "The name of the type as a String."
- uid: CRMScript.Global.Void.getGenericValue(Generic, String)
  commentId: M:CRMScript.Global.Void.getGenericValue(Generic, String)
  id: getGenericValue(Generic, String)
  so.intellisense: Void.getGenericValue
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: getGenericValue(Generic, String)
  nameWithType: Void.getGenericValue(Generic, String)
  fullName: CRMScript.Global.Void.getGenericValue(Generic, String)
  type: Method
  summary: "\nReturns a variable from the run-time environment given its name and independent of its type.\n"
  remarks: "\nAn exception is thrown if the name is unknown, or the struct is not a struct.\n"
  example:
  - "\n<pre><code>struct Person {\n\tString name;\n\tInteger age;\n};\n\nPerson person;\nperson.age = 42;\nGeneric g = getGenericValue(person, &quot;age&quot;);</code></pre>\n"
  syntax:
    content: Generic getGenericValue(Generic struct, String name)
    parameters:
    - id: struct
      type: CRMScript.Native.Generic
      description: "Generic Struct to get variable in."
    - id: name
      type: CRMScript.Global.String
      description: "Name of variable to get."
    return:
      type: CRMScript.Native.Generic
      description: "The variable as a Generic, independent of its type."
- uid: CRMScript.Global.Void.getGenericValue(String)
  commentId: M:CRMScript.Global.Void.getGenericValue(String)
  id: getGenericValue(String)
  so.intellisense: Void.getGenericValue
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: getGenericValue(String)
  nameWithType: Void.getGenericValue(String)
  fullName: CRMScript.Global.Void.getGenericValue(String)
  type: Method
  summary: "\nReturns a variable from the run-time environment given its name and independent of its type.<p></p>\nYou can optionally provide a struct to scope the variable.\n"
  remarks: "\nAn exception is thrown if the name is unknown, or the struct is not a struct.\n"
  example:
  - "\n<pre><code>Integer age = 42;\nGeneric g = getGenericValue(&quot;age&quot;);\nprintLine(GenericToInteger(g).toString());</code></pre>\n"
  syntax:
    content: Generic getGenericValue(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "A variable name."
    return:
      type: CRMScript.Native.Generic
      description: "The variable as a Generic, independent of its type."
- uid: CRMScript.Global.Void.GenericToBool(Generic)
  commentId: M:CRMScript.Global.Void.GenericToBool(Generic)
  id: GenericToBool(Generic)
  so.intellisense: Void.GenericToBool
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: GenericToBool(Generic)
  nameWithType: Void.GenericToBool(Generic)
  fullName: CRMScript.Global.Void.GenericToBool(Generic)
  type: Method
  summary: "\nConverts a Generic variable to a Bool (explicit downcast). Together with getTypeName(), this function can be used to get an explicit typed variable.\n"
  remarks: "\nIf the generic doesn't represent the correct type, an exception is thrown.\n"
  syntax:
    content: Bool GenericToBool(Generic value)
    parameters:
    - id: value
      type: CRMScript.Native.Generic
      description: "The variable to downcast."
    return:
      type: CRMScript.Global.Bool
      description: "The variable as a Bool."
- uid: CRMScript.Global.Void.GenericToInteger(Generic)
  commentId: M:CRMScript.Global.Void.GenericToInteger(Generic)
  id: GenericToInteger(Generic)
  so.intellisense: Void.GenericToInteger
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: GenericToInteger(Generic)
  nameWithType: Void.GenericToInteger(Generic)
  fullName: CRMScript.Global.Void.GenericToInteger(Generic)
  type: Method
  summary: "\nConverts a Generic variable to a Integer (explicit downcast). Together with getTypeName(), this function can be used to get an explicit typed variable.\n"
  remarks: "\nIf the generic does not represent the correct type, an exception is thrown.\n"
  syntax:
    content: Integer GenericToInteger(Generic value)
    parameters:
    - id: value
      type: CRMScript.Native.Generic
      description: "The variable to downcast."
    return:
      type: CRMScript.Global.Integer
      description: "The variable as an Integer."
- uid: CRMScript.Global.Void.GenericToFloat(Generic)
  commentId: M:CRMScript.Global.Void.GenericToFloat(Generic)
  id: GenericToFloat(Generic)
  so.intellisense: Void.GenericToFloat
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: GenericToFloat(Generic)
  nameWithType: Void.GenericToFloat(Generic)
  fullName: CRMScript.Global.Void.GenericToFloat(Generic)
  type: Method
  summary: "\nConverts a Generic variable to a Float. Together with getTypeName(), this function can be used to get an explicit typed variable.\n"
  remarks: "\nIf the generic does not represent the correct type, an exception is thrown.\n"
  syntax:
    content: Float GenericToFloat(Generic value)
    parameters:
    - id: value
      type: CRMScript.Native.Generic
      description: "The variable to downcast."
    return:
      type: CRMScript.Global.Float
      description: "The variable as a Float."
- uid: CRMScript.Global.Void.GenericToString(Generic)
  commentId: M:CRMScript.Global.Void.GenericToString(Generic)
  id: GenericToString(Generic)
  so.intellisense: Void.GenericToString
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: GenericToString(Generic)
  nameWithType: Void.toString(Generic)
  fullName: CRMScript.Global.Void.GenericToString(Generic)
  type: Method
  summary: "\nConverts a Generic variable to a String (explicit downcast). Together with getTypeName(), this function can be used to get an explicit typed variable.\n"
  remarks: "\nIf the generic does not represent the correct type, an exception is thrown.\n"
  syntax:
    content: String GenericToString(Generic value)
    parameters:
    - id: value
      type: CRMScript.Native.Generic
      description: "The variable to downcast."
    return:
      type: CRMScript.Global.String
      description: "The variable as a String."
- uid: CRMScript.Global.Void.convertGenericToString(Generic)
  commentId: M:CRMScript.Global.Void.convertGenericToString(Generic)
  id: convertGenericToString(Generic)
  so.intellisense: Void.convertGenericToString
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: convertGenericToString(Generic)
  nameWithType: Void.convertGenericToString(Generic)
  fullName: CRMScript.Global.Void.convertGenericToString(Generic)
  type: Method
  summary: "\nReturns the string representation of a variable. The argument is automatically be up-casted to a Generic.\n"
  remarks: "\nNot all types have implemented support for this, and might return &quot;[complex]&quot;. All the basic types (String, Integer, Float, and so on) will return a correct string representation of their value.\n"
  example:
  - "\n<pre><code>Integer age = 42;\nString s = convertGenericToString(age);\nprintLine(s);</code></pre>\n"
  syntax:
    content: String convertGenericToString(Generic variable)
    parameters:
    - id: variable
      type: CRMScript.Native.Generic
      description: "The variable to convert."
    return:
      type: CRMScript.Global.String
      description: "The string representation of the value in the Generic."
- uid: CRMScript.Global.Void.setGenericFromString(Generic, String)
  commentId: M:CRMScript.Global.Void.setGenericFromString(Generic, String)
  id: setGenericFromString(Generic, String)
  so.intellisense: Void.setGenericFromString
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: setGenericFromString(Generic, String)
  nameWithType: Void.setGenericFromString(Generic, String)
  fullName: CRMScript.Global.Void.setGenericFromString(Generic, String)
  type: Method
  summary: "\nSets the value of a variable from a string. It supports only basic types.<p></p>\nIn combination with for example getStructMembers() and getGenericValue(), this function can be used to iterate a struct and set all its members programmatically instead of having to explicit hard-code each one of them.\n"
  remarks: "\nAttempting to set an array or a complex type will throw an exception.<p></p>\nThe value must be formatted according to the constructor of that type. Specifically, Date, DateTime, and Time must be on the YYYY-MM-DD HH:MI:SS format.\n"
  syntax:
    content: Void setGenericFromString(Generic generic, String value)
    parameters:
    - id: generic
      type: CRMScript.Native.Generic
      description: "The variable to set."
    - id: value
      type: CRMScript.Global.String
      description: "The the constructor data for the Generic."
    return:
      type: CRMScript.Global.Void
- uid: CRMScript.Global.Void.GenericToDate(Generic)
  commentId: M:CRMScript.Global.Void.GenericToDate(Generic)
  id: GenericToDate(Generic)
  so.intellisense: Void.GenericToDate
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: GenericToDate(Generic)
  nameWithType: Void.GenericToDate(Generic)
  fullName: CRMScript.Global.Void.GenericToDate(Generic)
  type: Method
  summary: "\nConverts a Generic variable to a Date (explicit downcast). Together with getTypeName(), this function can be used to get an explicit typed variable.\n"
  remarks: "\nIf the generic does not represent the correct type, an exception is thrown.\n"
  syntax:
    content: Date GenericToDate(Generic value)
    parameters:
    - id: value
      type: CRMScript.Native.Generic
      description: "The variable to downcast."
    return:
      type: CRMScript.Global.Date
      description: "The variable as a Date."
- uid: CRMScript.Global.Void.GenericToDateTime(Generic)
  commentId: M:CRMScript.Global.Void.GenericToDateTime(Generic)
  id: GenericToDateTime(Generic)
  so.intellisense: Void.GenericToDateTime
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: GenericToDateTime(Generic)
  nameWithType: Void.toDateTime(Generic)
  fullName: CRMScript.Global.Void.GenericToDateTime(Generic)
  type: Method
  summary: "\nConverts a Generic variable to a DateTime (explicit downcast). Together with getTypeName(), this function can be used to get an explicit typed variable.\n"
  remarks: "\nIf the generic does not represent the correct type, an exception is thrown.\n"
  syntax:
    content: DateTime GenericToDateTime(Generic value)
    parameters:
    - id: value
      type: CRMScript.Native.Generic
      description: "The variable to downcast."
    return:
      type: CRMScript.Global.DateTime
      description: "The variable as a DateTime."
- uid: CRMScript.Global.Void.GenericToTime(Generic)
  commentId: M:CRMScript.Global.Void.GenericToTime(Generic)
  id: GenericToTime(Generic)
  so.intellisense: Void.GenericToTime
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: GenericToTime(Generic)
  nameWithType: Void.GenericToTime(Generic)
  fullName: CRMScript.Global.Void.GenericToTime(Generic)
  type: Method
  summary: "\nConverts a Generic variable to a Time (explicit downcast). Together with getTypeName(), this function can be used to get an explicit typed variable.\n"
  remarks: "\nIf the generic does not represent the correct type, an exception is thrown.\n"
  syntax:
    content: Time GenericToTime(Generic value)
    parameters:
    - id: value
      type: CRMScript.Native.Generic
      description: "The variable to downcast."
    return:
      type: CRMScript.Global.Time
      description: "The variable as a Time."
- uid: CRMScript.Global.Void.GenericToTimeSpan(Generic)
  commentId: M:CRMScript.Global.Void.GenericToTimeSpan(Generic)
  id: GenericToTimeSpan(Generic)
  so.intellisense: Void.GenericToTimeSpan
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: GenericToTimeSpan(Generic)
  nameWithType: Void.GenericToTimeSpan(Generic)
  fullName: CRMScript.Global.Void.GenericToTimeSpan(Generic)
  type: Method
  summary: "\nConverts a Generic variable to a TimeSpan (explicit downcast). Together with getTypeName(), this function can be used to get an explicit typed variable.\n"
  remarks: "\nIf the generic does not represent the correct type, an exception is thrown.\n"
  syntax:
    content: TimeSpan GenericToTimeSpan(Generic value)
    parameters:
    - id: value
      type: CRMScript.Native.Generic
      description: "The variable to downcast."
    return:
      type: CRMScript.Native.TimeSpan
      description: "The variable as a TimeSpan."
- uid: CRMScript.Global.Void.GenericToByte(Generic)
  commentId: M:CRMScript.Global.Void.GenericToByte(Generic)
  id: GenericToByte(Generic)
  so.intellisense: Void.GenericToByte
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: GenericToByte(Generic)
  nameWithType: Void.GenericToByte(Generic)
  fullName: CRMScript.Global.Void.GenericToByte(Generic)
  type: Method
  summary: "\nConverts a Generic variable to a Byte (explicit downcast). Together with getTypeName(), this function can be used to get an explicit typed variable.\n"
  remarks: "\nIf the generic doesn't represent the correct type, an exception is thrown.\n"
  syntax:
    content: Byte GenericToByte(Generic value)
    parameters:
    - id: value
      type: CRMScript.Native.Generic
      description: "The variable to downcast."
    return:
      type: CRMScript.Global.Byte
      description: "The variable as a Byte."
- uid: CRMScript.Global.Void.GenericToArray(Generic)
  commentId: M:CRMScript.Global.Void.GenericToArray(Generic)
  id: GenericToArray(Generic)
  so.intellisense: Void.GenericToArray
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: GenericToArray(Generic)
  nameWithType: Void.GenericToArray(Generic)
  fullName: CRMScript.Global.Void.GenericToArray(Generic)
  type: Method
  summary: "\nConverts a Generic variable to an array of Generic (explicit downcast). Typically, this function is used when traversing the members of a struct, and one of the members is an array. This can be tested with getTypeDimensions(), and then GenericToArray() can be used to access the sub-elements of the array for further (recursive) processing.\n"
  remarks: "\nIf the generic does not represent an array, an exception is thrown.\n"
  syntax:
    content: Generic[] GenericToArray(Generic value)
    parameters:
    - id: value
      type: CRMScript.Native.Generic
      description: "The variable to downcast."
    return:
      type: CRMScript.Native.Generic[]
      description: "The variable as an array."
- uid: CRMScript.Global.Void.getTypeDimensions(Generic)
  commentId: M:CRMScript.Global.Void.getTypeDimensions(Generic)
  id: getTypeDimensions(Generic)
  so.intellisense: Void.getTypeDimensions
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: getTypeDimensions(Generic)
  nameWithType: Void.getTypeDimensions(Generic)
  fullName: CRMScript.Global.Void.getTypeDimensions(Generic)
  type: Method
  summary: "\nReturns the number of array dimensions for a variable. The argument is automatically up-casted to a Generic.\n"
  example:
  - "\n<pre><code>Integer[][] i;\nprintLine(getTypeDimensions(i).toString())</code></pre>\n"
  remarks: "\nThis is the number of dimensions in, not the length of, the array!\n"
  syntax:
    content: Integer getTypeDimensions(Generic value)
    parameters:
    - id: value
      type: CRMScript.Native.Generic
      description: "The variable."
    return:
      type: CRMScript.Global.Integer
      description: "Number of dimensions."
- uid: CRMScript.Global.Void.typeIsStruct(Generic)
  commentId: M:CRMScript.Global.Void.typeIsStruct(Generic)
  id: typeIsStruct(Generic)
  so.intellisense: Void.typeIsStruct
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: typeIsStruct(Generic)
  nameWithType: Void.typeIsStruct(Generic)
  fullName: CRMScript.Global.Void.typeIsStruct(Generic)
  type: Method
  summary: "\nChecks whether a variable is a struct or not. Any variable can be checked. The argument is automatically up-casted to a Generic.\n"
  example:
  - "\n<pre><code>struct Person {\n\tString name;\n\tInteger age;\n};\n\nPerson p;\nif (typeIsStruct(p)) {\n\tprintLine(&quot;10-4&quot;);\n}</code></pre>\n"
  syntax:
    content: Bool typeIsStruct(Generic generic)
    parameters:
    - id: value
      type: CRMScript.Native.Generic
      description: "The variable to check."
    return:
      type: CRMScript.Global.Bool
      description: "True if the variable is a struct."
- uid: CRMScript.Global.Void.getStructMembers(String)
  commentId: M:CRMScript.Global.Void.getStructMembers(String)
  id: getStructMembers(String)
  so.intellisense: Void.getStructMembers
  langs:
  - crmscript
  parent: CRMScript.Global.Void
  name: getStructMembers(String)
  nameWithType: Void.getStructMembers(String)
  fullName: CRMScript.Global.Void.getStructMembers(String)
  type: Method
  summary: "\nReturns the variable names of a struct given its name. It does not includes functions in the list.\n"
  remarks: "\nThis is the names, not the actual values. To get those, call getGenericValue() using the member names.\n"
  syntax:
    content: String[] getStructMembers(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: "Name of struct to find."
    return:
      type: CRMScript.Global.String[]
      description: "String array of member names."
references:
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  isExternal: true
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.Bool
  commentId: T:CRMScript.Global.Bool
  isExternal: true
  name: Bool
  nameWithType: Bool
  fullName: CRMScript.Global.Bool
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.Native.HtmlElement
  commentId: T:CRMScript.Native.HtmlElement
  isExternal: true
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: CRMScript.Native.HtmlElement
- uid: CRMScript.Native.Vector
  commentId: T:CRMScript.Native.Vector
  isExternal: true
  name: Vector
  nameWithType: Vector
  fullName: CRMScript.Native.Vector
- uid: CRMScript.Global.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: CRMScript.Global.Byte[]
  spec.crmscript:
  - uid: CRMScript.Global.Byte
    isExternal: true
    name: Byte
    nameWithType: Byte
    fullName: CRMScript.Global.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.Byte
  commentId: T:CRMScript.Global.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: CRMScript.Global.Byte
- uid: CRMScript.NetServer.NSStream
  commentId: T:CRMScript.NetServer.NSStream
  isExternal: true
  name: NSStream
  nameWithType: NSStream
  fullName: CRMScript.NetServer.NSStream
- uid: CRMScript.Native.Parser
  commentId: T:CRMScript.Native.Parser
  isExternal: true
  name: Parser
  nameWithType: Parser
  fullName: CRMScript.Native.Parser
- uid: CRMScript.Global.Integer[]
  isExternal: true
  name: Integer[]
  nameWithType: Integer[]
  fullName: CRMScript.Global.Integer[]
  spec.crmscript:
  - uid: CRMScript.Global.Integer
    isExternal: true
    name: Integer
    nameWithType: Integer
    fullName: CRMScript.Global.Integer
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: CRMScript.Global.String[]
  spec.crmscript:
  - uid: CRMScript.Global.String
    isExternal: true
    name: String
    nameWithType: String
    fullName: CRMScript.Global.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Native.Map
  commentId: T:CRMScript.Native.Map
  isExternal: true
  name: Map
  nameWithType: Map
  fullName: CRMScript.Native.Map
- uid: CRMScript.Global.Date
  commentId: T:CRMScript.Global.Date
  isExternal: true
  name: Date
  nameWithType: Date
  fullName: CRMScript.Global.Date
- uid: CRMScript.Global.DateTime
  commentId: T:CRMScript.Global.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: CRMScript.Global.DateTime
- uid: CRMScript.Global.Time
  commentId: T:CRMScript.Global.Time
  isExternal: true
  name: Time
  nameWithType: Time
  fullName: CRMScript.Global.Time
- uid: CRMScript.Native.DbiControl
  commentId: T:CRMScript.Native.DbiControl
  isExternal: true
  name: DbiControl
  nameWithType: DbiControl
  fullName: CRMScript.Native.DbiControl
- uid: CRMScript.Native.EventData
  commentId: T:CRMScript.Native.EventData
  isExternal: true
  name: EventData
  nameWithType: EventData
  fullName: CRMScript.Native.EventData
- uid: CRMScript.Native.ExtraTable
  commentId: T:CRMScript.Native.ExtraTable
  isExternal: true
  name: ExtraTable
  nameWithType: ExtraTable
  fullName: CRMScript.Native.ExtraTable
- uid: CRMScript.Global.String[][]
  isExternal: true
  name: String[][]
  nameWithType: String[][]
  fullName: CRMScript.Global.String[][]
  spec.crmscript:
  - uid: CRMScript.Global.String[]
    isExternal: true
    name: String[]
    nameWithType: String[]
    fullName: CRMScript.Global.String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.TimeZone
  commentId: T:CRMScript.Global.TimeZone
  isExternal: true
  name: TimeZone
  nameWithType: TimeZone
  fullName: CRMScript.Global.TimeZone
- uid: CRMScript.Native.MainMenu
  commentId: T:CRMScript.Native.MainMenu
  isExternal: true
  name: MainMenu
  nameWithType: MainMenu
  fullName: CRMScript.Native.MainMenu
- uid: CRMScript.Native.XMLNode
  commentId: T:CRMScript.Native.XMLNode
  isExternal: true
  name: XMLNode
  nameWithType: XMLNode
  fullName: CRMScript.Native.XMLNode
- uid: CRMScript.Global.Float
  commentId: T:CRMScript.Global.Float
  isExternal: true
  name: Float
  nameWithType: Float
  fullName: CRMScript.Global.Float
- uid: CRMScript.Native.Generic
  commentId: T:CRMScript.Native.Generic
  isExternal: true
  name: Generic
  nameWithType: Generic
  fullName: CRMScript.Native.Generic
- uid: CRMScript.Native.Generic[]
  isExternal: true
  name: Generic[]
  nameWithType: Generic[]
  fullName: CRMScript.Native.Generic[]
  spec.crmscript:
  - uid: CRMScript.Native.Generic
    name: Generic
    nameWithType: Generic
    fullName: CRMScript.Native.Generic
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'