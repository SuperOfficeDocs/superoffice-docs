### YamlMime:ManagedReference
items:
- uid: CRMScript.NetServer.NSMailMergeSettings
  commentId: T:CRMScript.NetServer.NSMailMergeSettings
  id: NSMailMergeSettings
  so.version: 7.0
  langs:
  - crmscript
  children:
  - CRMScript.NetServer.NSMailMergeSettings.#ctor
  - CRMScript.NetServer.NSMailMergeSettings.GetAddCompanyInterest()
  - CRMScript.NetServer.NSMailMergeSettings.GetAddPersonInterest()
  - CRMScript.NetServer.NSMailMergeSettings.GetAlwaysUseCustomAttention()
  - CRMScript.NetServer.NSMailMergeSettings.GetCustomAttention()
  - CRMScript.NetServer.NSMailMergeSettings.GetCustomMailBody()
  - CRMScript.NetServer.NSMailMergeSettings.GetCustomMailSubject()
  - CRMScript.NetServer.NSMailMergeSettings.GetDocumentId()
  - CRMScript.NetServer.NSMailMergeSettings.GetExtraInfo()
  - CRMScript.NetServer.NSMailMergeSettings.GetIncludeNoMailingsRecipient()
  - CRMScript.NetServer.NSMailMergeSettings.GetIncludeRetiredRecipients()
  - CRMScript.NetServer.NSMailMergeSettings.GetIncludeStoppedRecipients()
  - CRMScript.NetServer.NSMailMergeSettings.GetIsTemporarySelection()
  - CRMScript.NetServer.NSMailMergeSettings.GetMailMergeDeliveryType()
  - CRMScript.NetServer.NSMailMergeSettings.GetProjectId()
  - CRMScript.NetServer.NSMailMergeSettings.GetRemoveCompanyInterest()
  - CRMScript.NetServer.NSMailMergeSettings.GetRemovePersonInterest()
  - CRMScript.NetServer.NSMailMergeSettings.GetSaveDocument()
  - CRMScript.NetServer.NSMailMergeSettings.GetSelectionId()
  - CRMScript.NetServer.NSMailMergeSettings.GetSynchronous()
  - CRMScript.NetServer.NSMailMergeSettings.GetTaskEntity()
  - CRMScript.NetServer.NSMailMergeSettings.GetTestOnly()
  - CRMScript.NetServer.NSMailMergeSettings.SetAddCompanyInterest(Integer)
  - CRMScript.NetServer.NSMailMergeSettings.SetAddPersonInterest(Integer)
  - CRMScript.NetServer.NSMailMergeSettings.SetAlwaysUseCustomAttention(Bool)
  - CRMScript.NetServer.NSMailMergeSettings.SetCustomAttention(String)
  - CRMScript.NetServer.NSMailMergeSettings.SetCustomMailBody(String)
  - CRMScript.NetServer.NSMailMergeSettings.SetCustomMailSubject(String)
  - CRMScript.NetServer.NSMailMergeSettings.SetDocumentId(Integer)
  - CRMScript.NetServer.NSMailMergeSettings.SetExtraInfo(String)
  - CRMScript.NetServer.NSMailMergeSettings.SetIncludeNoMailingsRecipient(Bool)
  - CRMScript.NetServer.NSMailMergeSettings.SetIncludeRetiredRecipients(Bool)
  - CRMScript.NetServer.NSMailMergeSettings.SetIncludeStoppedRecipients(Bool)
  - CRMScript.NetServer.NSMailMergeSettings.SetIsTemporarySelection(Bool)
  - CRMScript.NetServer.NSMailMergeSettings.SetMailMergeDeliveryType(Integer)
  - CRMScript.NetServer.NSMailMergeSettings.SetProjectId(Integer)
  - CRMScript.NetServer.NSMailMergeSettings.SetRemoveCompanyInterest(Integer)
  - CRMScript.NetServer.NSMailMergeSettings.SetRemovePersonInterest(Integer)
  - CRMScript.NetServer.NSMailMergeSettings.SetSaveDocument(Bool)
  - CRMScript.NetServer.NSMailMergeSettings.SetSelectionId(Integer)
  - CRMScript.NetServer.NSMailMergeSettings.SetSynchronous(Bool)
  - CRMScript.NetServer.NSMailMergeSettings.SetTaskEntity(NSMailMergeSettings)
  - CRMScript.NetServer.NSMailMergeSettings.SetTestOnly(Bool)
  name: NSMailMergeSettings
  nameWithType: NSMailMergeSettings
  fullName: CRMScript.NetServer.NSMailMergeSettings
  type: Class
  summary: "\nSettings specifying what selection to perform the mailmerge on, what merge document to use etc.\n"
  example: 
- uid: CRMScript.NetServer.NSMailMergeSettings.#ctor
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.#ctor
  id: '#ctor'
  so.intellisense: Void.NSMailMergeSettings
  langs:
  - crmscript
  name: NSMailMergeSettings()
  nameWithType: NSMailMergeSettings.#ctor
  fullName: CRMScript.NetServer.NSMailMergeSettings.#ctor
  type: Constructor
  summary: "\nInitializes a new instance of the NSMailMergeSettings class.\n"
  remarks: 
  syntax: 
    content: NSMailMergeSettings
  example: 
- uid: CRMScript.NetServer.NSMailMergeSettings.GetAddCompanyInterest()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetAddCompanyInterest()
  id: 'GetAddCompanyInterest()'
  so.intellisense: NSMailMergeSettings.GetAddCompanyInterest
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetAddCompanyInterest()'
  nameWithType: NSMailMergeSettings.GetAddCompanyInterest()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetAddCompanyInterest()
  type: Method
  summary: "\nAdds this company interest to each company recipient.\n"
  remarks: 
  syntax: 
    content: Integer GetAddCompanyInterest()
    parameters: []
    return:
      type: CRMScript.Global.Integer
      description:
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger addCompanyInterest = thing.GetAddCompanyInterest();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetAddPersonInterest()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetAddPersonInterest()
  id: 'GetAddPersonInterest()'
  so.intellisense: NSMailMergeSettings.GetAddPersonInterest
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetAddPersonInterest()'
  nameWithType: NSMailMergeSettings.GetAddPersonInterest()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetAddPersonInterest()
  type: Method
  summary: "\nAdds this person interest to each person recipient.\n"
  remarks: 
  syntax: 
    content: Integer GetAddPersonInterest()
    parameters: []
    return:
      type: CRMScript.Global.Integer
      description:
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger addPersonInterest = thing.GetAddPersonInterest();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetAlwaysUseCustomAttention()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetAlwaysUseCustomAttention()
  id: 'GetAlwaysUseCustomAttention()'
  so.intellisense: NSMailMergeSettings.GetAlwaysUseCustomAttention
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetAlwaysUseCustomAttention()'
  nameWithType: NSMailMergeSettings.GetAlwaysUseCustomAttention()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetAlwaysUseCustomAttention()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Bool GetAlwaysUseCustomAttention()
    parameters: []
    return:
      type: CRMScript.Global.Bool
      description: "Should custom attention always be used? If false, only use custom attention where there is no default."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool alwaysUseCustomAttention = thing.GetAlwaysUseCustomAttention();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetCustomAttention()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetCustomAttention()
  id: 'GetCustomAttention()'
  so.intellisense: NSMailMergeSettings.GetCustomAttention
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetCustomAttention()'
  nameWithType: NSMailMergeSettings.GetCustomAttention()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetCustomAttention()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: String GetCustomAttention()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "Custom value for attention."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nString customAttention = thing.GetCustomAttention();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetCustomMailBody()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetCustomMailBody()
  id: 'GetCustomMailBody()'
  so.intellisense: NSMailMergeSettings.GetCustomMailBody
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetCustomMailBody()'
  nameWithType: NSMailMergeSettings.GetCustomMailBody()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetCustomMailBody()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: String GetCustomMailBody()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "If specified, use this value as default mail body."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nString customMailBody = thing.GetCustomMailBody();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetCustomMailSubject()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetCustomMailSubject()
  id: 'GetCustomMailSubject()'
  so.intellisense: NSMailMergeSettings.GetCustomMailSubject
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetCustomMailSubject()'
  nameWithType: NSMailMergeSettings.GetCustomMailSubject()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetCustomMailSubject()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: String GetCustomMailSubject()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "If specified, use this value as default mail subject."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nString customMailSubject = thing.GetCustomMailSubject();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetDocumentId()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetDocumentId()
  id: 'GetDocumentId()'
  so.intellisense: NSMailMergeSettings.GetDocumentId
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetDocumentId()'
  nameWithType: NSMailMergeSettings.GetDocumentId()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetDocumentId()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Integer GetDocumentId()
    parameters: []
    return:
      type: CRMScript.Global.Integer
      description: "Identity of document to be used as merge draft."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger documentId = thing.GetDocumentId();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetExtraInfo()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetExtraInfo()
  id: 'GetExtraInfo()'
  so.intellisense: NSMailMergeSettings.GetExtraInfo
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetExtraInfo()'
  nameWithType: NSMailMergeSettings.GetExtraInfo()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetExtraInfo()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: String GetExtraInfo()
    parameters: []
    return:
      type: CRMScript.Global.String
      description: "Used to store additional information for the delivery systems."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nString extraInfo = thing.GetExtraInfo();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetIncludeNoMailingsRecipient()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetIncludeNoMailingsRecipient()
  id: 'GetIncludeNoMailingsRecipient()'
  so.intellisense: NSMailMergeSettings.GetIncludeNoMailingsRecipient
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetIncludeNoMailingsRecipient()'
  nameWithType: NSMailMergeSettings.GetIncludeNoMailingsRecipient()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetIncludeNoMailingsRecipient()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Bool GetIncludeNoMailingsRecipient()
    parameters: []
    return:
      type: CRMScript.Global.Bool
      description: "Include recipients that are marked with NoMailings."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool includeNoMailingsRecipient = thing.GetIncludeNoMailingsRecipient();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetIncludeRetiredRecipients()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetIncludeRetiredRecipients()
  id: 'GetIncludeRetiredRecipients()'
  so.intellisense: NSMailMergeSettings.GetIncludeRetiredRecipients
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetIncludeRetiredRecipients()'
  nameWithType: NSMailMergeSettings.GetIncludeRetiredRecipients()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetIncludeRetiredRecipients()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Bool GetIncludeRetiredRecipients()
    parameters: []
    return:
      type: CRMScript.Global.Bool
      description: "Include recipients that are marked as retired."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool includeRetiredRecipients = thing.GetIncludeRetiredRecipients();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetIncludeStoppedRecipients()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetIncludeStoppedRecipients()
  id: 'GetIncludeStoppedRecipients()'
  so.intellisense: NSMailMergeSettings.GetIncludeStoppedRecipients
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetIncludeStoppedRecipients()'
  nameWithType: NSMailMergeSettings.GetIncludeStoppedRecipients()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetIncludeStoppedRecipients()
  type: Method
  summary: "\nInclude recipients that are marked with stop\n"
  remarks: 
  syntax: 
    content: Bool GetIncludeStoppedRecipients()
    parameters: []
    return:
      type: CRMScript.Global.Bool
      description:
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool includeStoppedRecipients = thing.GetIncludeStoppedRecipients();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetIsTemporarySelection()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetIsTemporarySelection()
  id: 'GetIsTemporarySelection()'
  so.intellisense: NSMailMergeSettings.GetIsTemporarySelection
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetIsTemporarySelection()'
  nameWithType: NSMailMergeSettings.GetIsTemporarySelection()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetIsTemporarySelection()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Bool GetIsTemporarySelection()
    parameters: []
    return:
      type: CRMScript.Global.Bool
      description: "If true, the selection is a temporary selection that can be deleted later."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool isTemporarySelection = thing.GetIsTemporarySelection();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetMailMergeDeliveryType()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetMailMergeDeliveryType()
  id: 'GetMailMergeDeliveryType()'
  so.intellisense: NSMailMergeSettings.GetMailMergeDeliveryType
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetMailMergeDeliveryType()'
  nameWithType: NSMailMergeSettings.GetMailMergeDeliveryType()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetMailMergeDeliveryType()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Integer GetMailMergeDeliveryType()
    parameters: []
    return:
      type: CRMScript.Global.Integer
      description: "How the merged document is delivered to the recipients. See <xref href=\"CRMScript.NetServer.EMailMergeTargetType\" data-throw-if-not-resolved=\"false\"></xref>"
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger mailMergeDeliveryType = thing.GetMailMergeDeliveryType();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetProjectId()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetProjectId()
  id: 'GetProjectId()'
  so.intellisense: NSMailMergeSettings.GetProjectId
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetProjectId()'
  nameWithType: NSMailMergeSettings.GetProjectId()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetProjectId()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Integer GetProjectId()
    parameters: []
    return:
      type: CRMScript.Global.Integer
      description: "Identity of project to use as source for recipients."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger projectId = thing.GetProjectId();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetRemoveCompanyInterest()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetRemoveCompanyInterest()
  id: 'GetRemoveCompanyInterest()'
  so.intellisense: NSMailMergeSettings.GetRemoveCompanyInterest
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetRemoveCompanyInterest()'
  nameWithType: NSMailMergeSettings.GetRemoveCompanyInterest()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetRemoveCompanyInterest()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Integer GetRemoveCompanyInterest()
    parameters: []
    return:
      type: CRMScript.Global.Integer
      description: "Remove this company interest on each company recipient."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger removeCompanyInterest = thing.GetRemoveCompanyInterest();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetRemovePersonInterest()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetRemovePersonInterest()
  id: 'GetRemovePersonInterest()'
  so.intellisense: NSMailMergeSettings.GetRemovePersonInterest
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetRemovePersonInterest()'
  nameWithType: NSMailMergeSettings.GetRemovePersonInterest()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetRemovePersonInterest()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Integer GetRemovePersonInterest()
    parameters: []
    return:
      type: CRMScript.Global.Integer
      description: "Remove this person interest on each person recipient."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger removePersonInterest = thing.GetRemovePersonInterest();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetSaveDocument()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetSaveDocument()
  id: 'GetSaveDocument()'
  so.intellisense: NSMailMergeSettings.GetSaveDocument
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetSaveDocument()'
  nameWithType: NSMailMergeSettings.GetSaveDocument()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetSaveDocument()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Bool GetSaveDocument()
    parameters: []
    return:
      type: CRMScript.Global.Bool
      description: "Should we save a reference to the merge document on each recipient."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool saveDocument = thing.GetSaveDocument();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetSelectionId()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetSelectionId()
  id: 'GetSelectionId()'
  so.intellisense: NSMailMergeSettings.GetSelectionId
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetSelectionId()'
  nameWithType: NSMailMergeSettings.GetSelectionId()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetSelectionId()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Integer GetSelectionId()
    parameters: []
    return:
      type: CRMScript.Global.Integer
      description: "Identity of selection to use as source for recipients."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger selectionId = thing.GetSelectionId();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetSynchronous()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetSynchronous()
  id: 'GetSynchronous()'
  so.intellisense: NSMailMergeSettings.GetSynchronous
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetSynchronous()'
  nameWithType: NSMailMergeSettings.GetSynchronous()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetSynchronous()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Bool GetSynchronous()
    parameters: []
    return:
      type: CRMScript.Global.Bool
      description:
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool synchronous = thing.GetSynchronous();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetTaskEntity()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetTaskEntity()
  id: 'GetTaskEntity()'
  so.intellisense: NSMailMergeSettings.GetTaskEntity
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetTaskEntity()'
  nameWithType: NSMailMergeSettings.GetTaskEntity()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetTaskEntity()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: NSMailMergeTask GetTaskEntity()
    parameters: []
    return:
      type: CRMScript.NetServer.NSMailMergeTask
      description: "If specified, register a task on recipients using properties from this object."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nNSMailMergeTask taskEntity = thing.GetTaskEntity();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.GetTestOnly()
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.GetTestOnly()
  id: 'GetTestOnly()'
  so.intellisense: NSMailMergeSettings.GetTestOnly
  so.version: 7.0
  langs:
  - crmscript
  name: 'GetTestOnly()'
  nameWithType: NSMailMergeSettings.GetTestOnly()
  fullName: CRMScript.NetServer.NSMailMergeSettings.GetTestOnly()
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Bool GetTestOnly()
    parameters: []
    return:
      type: CRMScript.Global.Bool
      description: "If true, do the merge task, but use current user as target, instead of selection members."
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool testOnly = thing.GetTestOnly();</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetAddCompanyInterest(Integer)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetAddCompanyInterest(Integer)
  id: 'SetAddCompanyInterest(Integer)'
  so.intellisense: NSMailMergeSettings.SetAddCompanyInterest
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetAddCompanyInterest(Integer)'
  nameWithType: NSMailMergeSettings.SetAddCompanyInterest(Integer)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetAddCompanyInterest(Integer)
  type: Method
  summary: "\nAdds this company interest to each company recipient.\n"
  remarks: 
  syntax: 
    content: Void SetAddCompanyInterest(Integer addCompanyInterest)
    parameters:
    - id: addCompanyInterest
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger addCompanyInterest;\nthing.SetAddCompanyInterest(addCompanyInterest);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetAddPersonInterest(Integer)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetAddPersonInterest(Integer)
  id: 'SetAddPersonInterest(Integer)'
  so.intellisense: NSMailMergeSettings.SetAddPersonInterest
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetAddPersonInterest(Integer)'
  nameWithType: NSMailMergeSettings.SetAddPersonInterest(Integer)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetAddPersonInterest(Integer)
  type: Method
  summary: "\nAdds this person interest to each person recipient.\n"
  remarks: 
  syntax: 
    content: Void SetAddPersonInterest(Integer addPersonInterest)
    parameters:
    - id: addPersonInterest
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger addPersonInterest;\nthing.SetAddPersonInterest(addPersonInterest);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetAlwaysUseCustomAttention(Bool)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetAlwaysUseCustomAttention(Bool)
  id: 'SetAlwaysUseCustomAttention(Bool)'
  so.intellisense: NSMailMergeSettings.SetAlwaysUseCustomAttention
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetAlwaysUseCustomAttention(Bool)'
  nameWithType: NSMailMergeSettings.SetAlwaysUseCustomAttention(Bool)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetAlwaysUseCustomAttention(Bool)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetAlwaysUseCustomAttention(Bool alwaysUseCustomAttention)
    parameters:
    - id: alwaysUseCustomAttention
      type: CRMScript.Global.Bool
      description: "Should custom attention always be used? If false, only use custom attention where there is no default."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool alwaysUseCustomAttention;\nthing.SetAlwaysUseCustomAttention(alwaysUseCustomAttention);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetCustomAttention(String)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetCustomAttention(String)
  id: 'SetCustomAttention(String)'
  so.intellisense: NSMailMergeSettings.SetCustomAttention
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetCustomAttention(String)'
  nameWithType: NSMailMergeSettings.SetCustomAttention(String)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetCustomAttention(String)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetCustomAttention(String customAttention)
    parameters:
    - id: customAttention
      type: CRMScript.Global.String
      description: "Custom value for attention."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nString customAttention;\nthing.SetCustomAttention(customAttention);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetCustomMailBody(String)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetCustomMailBody(String)
  id: 'SetCustomMailBody(String)'
  so.intellisense: NSMailMergeSettings.SetCustomMailBody
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetCustomMailBody(String)'
  nameWithType: NSMailMergeSettings.SetCustomMailBody(String)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetCustomMailBody(String)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetCustomMailBody(String customMailBody)
    parameters:
    - id: customMailBody
      type: CRMScript.Global.String
      description: "If specified, use this value as default mail body."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nString customMailBody;\nthing.SetCustomMailBody(customMailBody);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetCustomMailSubject(String)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetCustomMailSubject(String)
  id: 'SetCustomMailSubject(String)'
  so.intellisense: NSMailMergeSettings.SetCustomMailSubject
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetCustomMailSubject(String)'
  nameWithType: NSMailMergeSettings.SetCustomMailSubject(String)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetCustomMailSubject(String)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetCustomMailSubject(String customMailSubject)
    parameters:
    - id: customMailSubject
      type: CRMScript.Global.String
      description: "If specified, use this value as default mail subject."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nString customMailSubject;\nthing.SetCustomMailSubject(customMailSubject);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetDocumentId(Integer)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetDocumentId(Integer)
  id: 'SetDocumentId(Integer)'
  so.intellisense: NSMailMergeSettings.SetDocumentId
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetDocumentId(Integer)'
  nameWithType: NSMailMergeSettings.SetDocumentId(Integer)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetDocumentId(Integer)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetDocumentId(Integer documentId)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: "Identity of document to be used as merge draft."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger documentId;\nthing.SetDocumentId(documentId);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetExtraInfo(String)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetExtraInfo(String)
  id: 'SetExtraInfo(String)'
  so.intellisense: NSMailMergeSettings.SetExtraInfo
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetExtraInfo(String)'
  nameWithType: NSMailMergeSettings.SetExtraInfo(String)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetExtraInfo(String)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetExtraInfo(String extraInfo)
    parameters:
    - id: extraInfo
      type: CRMScript.Global.String
      description: "Used to store additional information for the delivery systems."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nString extraInfo;\nthing.SetExtraInfo(extraInfo);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetIncludeNoMailingsRecipient(Bool)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetIncludeNoMailingsRecipient(Bool)
  id: 'SetIncludeNoMailingsRecipient(Bool)'
  so.intellisense: NSMailMergeSettings.SetIncludeNoMailingsRecipient
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetIncludeNoMailingsRecipient(Bool)'
  nameWithType: NSMailMergeSettings.SetIncludeNoMailingsRecipient(Bool)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetIncludeNoMailingsRecipient(Bool)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetIncludeNoMailingsRecipient(Bool includeNoMailingsRecipient)
    parameters:
    - id: includeNoMailingsRecipient
      type: CRMScript.Global.Bool
      description: "Include recipients that are marked with NoMailings."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool includeNoMailingsRecipient;\nthing.SetIncludeNoMailingsRecipient(includeNoMailingsRecipient);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetIncludeRetiredRecipients(Bool)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetIncludeRetiredRecipients(Bool)
  id: 'SetIncludeRetiredRecipients(Bool)'
  so.intellisense: NSMailMergeSettings.SetIncludeRetiredRecipients
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetIncludeRetiredRecipients(Bool)'
  nameWithType: NSMailMergeSettings.SetIncludeRetiredRecipients(Bool)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetIncludeRetiredRecipients(Bool)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetIncludeRetiredRecipients(Bool includeRetiredRecipients)
    parameters:
    - id: includeRetiredRecipients
      type: CRMScript.Global.Bool
      description: "Include recipients that are marked as retired."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool includeRetiredRecipients;\nthing.SetIncludeRetiredRecipients(includeRetiredRecipients);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetIncludeStoppedRecipients(Bool)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetIncludeStoppedRecipients(Bool)
  id: 'SetIncludeStoppedRecipients(Bool)'
  so.intellisense: NSMailMergeSettings.SetIncludeStoppedRecipients
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetIncludeStoppedRecipients(Bool)'
  nameWithType: NSMailMergeSettings.SetIncludeStoppedRecipients(Bool)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetIncludeStoppedRecipients(Bool)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetIncludeStoppedRecipients(Bool includeStoppedRecipients)
    parameters:
    - id: includeStoppedRecipients
      type: CRMScript.Global.Bool
      description: "Include recipients that are marked with stop."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool includeStoppedRecipients;\nthing.SetIncludeStoppedRecipients(includeStoppedRecipients);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetIsTemporarySelection(Bool)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetIsTemporarySelection(Bool)
  id: 'SetIsTemporarySelection(Bool)'
  so.intellisense: NSMailMergeSettings.SetIsTemporarySelection
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetIsTemporarySelection(Bool)'
  nameWithType: NSMailMergeSettings.SetIsTemporarySelection(Bool)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetIsTemporarySelection(Bool)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetIsTemporarySelection(Bool isTemporarySelection)
    parameters:
    - id: isTemporarySelection
      type: CRMScript.Global.Bool
      description: "If true, the selection is a temporary selection that can be deleted later."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool isTemporarySelection;\nthing.SetIsTemporarySelection(isTemporarySelection);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetMailMergeDeliveryType(Integer)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetMailMergeDeliveryType(Integer)
  id: 'SetMailMergeDeliveryType(Integer)'
  so.intellisense: NSMailMergeSettings.SetMailMergeDeliveryType
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetMailMergeDeliveryType(Integer)'
  nameWithType: NSMailMergeSettings.SetMailMergeDeliveryType(Integer)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetMailMergeDeliveryType(Integer)
  type: Method
  summary: # TODO
  remarks:
  syntax: 
    content: Void SetMailMergeDeliveryType(Integer mailMergeDeliveryType)
    parameters:
    - id: mailMergeDeliveryType
      type: CRMScript.Global.Integer
      description: "How the merged document is delivered to the recipients. See <xref href=\"CRMScript.NetServer.EMailMergeTargetType\" data-throw-if-not-resolved=\"false\"></xref>."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger mailMergeDeliveryType;\nthing.SetMailMergeDeliveryType(mailMergeDeliveryType);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetProjectId(Integer)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetProjectId(Integer)
  id: 'SetProjectId(Integer)'
  so.intellisense: NSMailMergeSettings.SetProjectId
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetProjectId(Integer)'
  nameWithType: NSMailMergeSettings.SetProjectId(Integer)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetProjectId(Integer)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetProjectId(Integer projectId)
    parameters:
    - id: projectId
      type: CRMScript.Global.Integer
      description: "Identity of project to use as source for recipients."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger projectId;\nthing.SetProjectId(projectId);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetRemoveCompanyInterest(Integer)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetRemoveCompanyInterest(Integer)
  id: 'SetRemoveCompanyInterest(Integer)'
  so.intellisense: NSMailMergeSettings.SetRemoveCompanyInterest
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetRemoveCompanyInterest(Integer)'
  nameWithType: NSMailMergeSettings.SetRemoveCompanyInterest(Integer)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetRemoveCompanyInterest(Integer)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetRemoveCompanyInterest(Integer removeCompanyInterest)
    parameters:
    - id: removeCompanyInterest
      type: CRMScript.Global.Integer
      description: "Remove this company interest on each company recipient."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger removeCompanyInterest;\nthing.SetRemoveCompanyInterest(removeCompanyInterest);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetRemovePersonInterest(Integer)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetRemovePersonInterest(Integer)
  id: 'SetRemovePersonInterest(Integer)'
  so.intellisense: NSMailMergeSettings.SetRemovePersonInterest
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetRemovePersonInterest(Integer)'
  nameWithType: NSMailMergeSettings.SetRemovePersonInterest(Integer)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetRemovePersonInterest(Integer)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetRemovePersonInterest(Integer removePersonInterest)
    parameters:
    - id: removePersonInterest
      type: CRMScript.Global.Integer
      description: "Remove this person interest on each person recipient."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger removePersonInterest;\nthing.SetRemovePersonInterest(removePersonInterest);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetSaveDocument(Bool)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetSaveDocument(Bool)
  id: 'SetSaveDocument(Bool)'
  so.intellisense: NSMailMergeSettings.SetSaveDocument
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetSaveDocument(Bool)'
  nameWithType: NSMailMergeSettings.SetSaveDocument(Bool)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetSaveDocument(Bool)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetSaveDocument(Bool saveDocument)
    parameters:
    - id: saveDocument
      type: CRMScript.Global.Bool
      description: "Should we save a reference to the merge document on each recipient."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool saveDocument;\nthing.SetSaveDocument(saveDocument);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetSelectionId(Integer)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetSelectionId(Integer)
  id: 'SetSelectionId(Integer)'
  so.intellisense: NSMailMergeSettings.SetSelectionId
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetSelectionId(Integer)'
  nameWithType: NSMailMergeSettings.SetSelectionId(Integer)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetSelectionId(Integer)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetSelectionId(Integer selectionId)
    parameters:
    - id: selectionId
      type: CRMScript.Global.Integer
      description: "Identity of selection to use as source for recipients."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nInteger selectionId;\nthing.SetSelectionId(selectionId);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetSynchronous(Bool)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetSynchronous(Bool)
  id: 'SetSynchronous(Bool)'
  so.intellisense: NSMailMergeSettings.SetSynchronous
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetSynchronous(Bool)'
  nameWithType: NSMailMergeSettings.SetSynchronous(Bool)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetSynchronous(Bool)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetSynchronous(Bool synchronous)
    parameters:
    - id: synchronous
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool synchronous;\nthing.SetSynchronous(synchronous);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetTaskEntity(NSMailMergeSettings)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetTaskEntity(NSMailMergeSettings)
  id: 'SetTaskEntity(NSMailMergeSettings)'
  so.intellisense: NSMailMergeSettings.SetTaskEntity
  langs:
  - crmscript
  name: 'SetTaskEntity(NSMailMergeSettings)'
  nameWithType: NSMailMergeSettings.SetTaskEntity(NSMailMergeSettings)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetTaskEntity(NSMailMergeSettings)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetTaskEntity(NSMailMergeTask taskEntity)
    parameters:
    - id: taskEntity
      type: CRMScript.NetServer.NSMailMergeTask
      description: "If specified, register a task on recipients using properties from this object."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nNSMailMergeTask taskEntity;\nthing.SetTaskEntity(taskEntity);</code></pre>\n"
- uid: CRMScript.NetServer.NSMailMergeSettings.SetTestOnly(Bool)
  commentId: M:CRMScript.NetServer.NSMailMergeSettings.SetTestOnly(Bool)
  id: 'SetTestOnly(Bool)'
  so.intellisense: NSMailMergeSettings.SetTestOnly
  so.version: 7.0
  langs:
  - crmscript
  name: 'SetTestOnly(Bool)'
  nameWithType: NSMailMergeSettings.SetTestOnly(Bool)
  fullName: CRMScript.NetServer.NSMailMergeSettings.SetTestOnly(Bool)
  type: Method
  summary: # TODO
  remarks: 
  syntax: 
    content: Void SetTestOnly(Bool testOnly)
    parameters:
    - id: testOnly
      type: CRMScript.Global.Bool
      description: "If true, do the merge task, but use current user as target, instead of selection members."
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSMailMergeSettings thing;\nBool testOnly;\nthing.SetTestOnly(testOnly);</code></pre>\n"
references:
- uid: CRMScript.NetServer.NSMailMergeSettings
  commentId: T:CRMScript.NetServer.NSMailMergeSettings
  isExternal: true
  name: NSMailMergeSettings
  nameWithType: NSMailMergeSettings
  fullName: CRMScript.NetServer.NSMailMergeSettings
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.Global.Bool
  commentId: T:CRMScript.Global.Bool
  isExternal: true
  name: Bool
  nameWithType: Bool
  fullName: CRMScript.Global.Bool
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.NetServer.NSMailMergeTask
  commentId: T:CRMScript.NetServer.NSMailMergeTask
  isExternal: true
  name: NSMailMergeTask
  nameWithType: NSMailMergeTask
  fullName: CRMScript.NetServer.NSMailMergeTask
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  isExternal: true
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
- uid: CRMScript.NetServer.EMailMergeTargetType
  commentId: T:CRMScript.NetServer.EMailMergeTargetType
  isExternal: true
  name: EMailMergeTargetType
  nameWithType: EMailMergeTargetType
  fullName: CRMScript.NetServer.EMailMergeTargetType