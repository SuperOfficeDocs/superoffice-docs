### YamlMime:ManagedReference
items:
- uid: CRMScript.DataStructure.Array
  commentId: T:CRMScript.DataStructure.Array
  id: struct
  langs:
  - crmscript
  children:
    - CRMScript.DataStructure.Array.buildString(String)
    - CRMScript.DataStructure.Array.clear()
    - CRMScript.DataStructure.Array.first()
    - CRMScript.DataStructure.Array.fromJsonString(String)
    - CRMScript.DataStructure.Array.insert(Integer,{type})
    - CRMScript.DataStructure.Array.last()
    - CRMScript.DataStructure.Array.length()
    - CRMScript.DataStructure.Array.popBack()
    - CRMScript.DataStructure.Array.popFront()
    - CRMScript.DataStructure.Array.pushBack()
    - CRMScript.DataStructure.Array.pushBack({type})
    - CRMScript.DataStructure.Array.pushFront()
    - CRMScript.DataStructure.Array.pushFront({type})
    - CRMScript.DataStructure.Array.sort()
    - CRMScript.DataStructure.Array.toJsonString()
  name: Array
  nameWithType: Array
  fullName: CRMScript.DataStructure.Array
  type: Class
  summary: "An array is a data structure that can store more than 1 value at the same time. It can be 1-dimensional like a list, 2-dimensional like a spreadsheet, 3-dimensional like a cube, or multidimensional. The length and number of dimensions are virtually unlimited."
- uid: CRMScript.DataStructure.Array.buildString(String)
  commentId: M:CRMScript.DataStructure.Array.buildString(String)
  id: 'buildString(String)'
  so.intellisense: Array.buildString
  langs:
  - crmscript
  parent: CRMScript.DataStructure.Array
  name: buildString
  nameWithType: Array.buildString(String)
  fullName: CRMScript.DataStructure.Array.buildString(String)
  type: Method
  summary: "Return a string containing the contents of the array, separated by the delimiter string."
  syntax:
    content: String {instance}.buildString(String delimiter)
  example:
  - "<pre><code>String[] strings;\nstrings.pushBack(\"Alpha\");\nstrings.pushBack(\"Beta\");\nstrings.pushBack(\"Charlie\");\nString delimitedString = nstrings.buildString(\",\");\nprintLine(delimitedString);\n\n//prints Alpha,Beta,Charlie</code></pre>"
- uid: CRMScript.DataStructure.Array.clear()
  commentId: M:CRMScript.DataStructure.Array.clear()
  id: 'clear()'
  so.intellisense: Array.clear
  langs:
  - crmscript
  parent: CRMScript.DataStructure.Array
  name: clear
  nameWithType: Array.clear()
  fullName: CRMScript.DataStructure.Array.clear()
  type: Method
  summary: "Removes all array elements. Array length afterwards is 0."
  syntax:
    content: Void {instance}.clear()
  example:
  - "<pre><code>String[] userPlans;\nuserPlans.pushBack(\"Standard\");\nuserPlans.pushBack(\"Sales\");\nprintLine(\"Before clear length: \" + userPlans.length().toString());\nuserPlans.clear();\nprintLine(\"After clear length: \" + userPlans.length().toString());\n\n//prints:\n//Before clear length: 2\n//After clear length: 0</code></pre>"
- uid: CRMScript.DataStructure.Array.first()
  commentId: M:CRMScript.DataStructure.Array.first()
  id: 'first()'
  so.intellisense: Array.first
  langs:
  - crmscript
  parent: CRMScript.DataStructure.Array
  name: first()
  nameWithType: Array.first()
  fullName: CRMScript.DataStructure.Array.first()
  type: Method
  summary: "Returns the first element in the array. Same as [0]."
  syntax:
    content: "{type} {instance}.first()"
  example:
  - "<pre><code>String[] userPlans;\nuserPlans.pushBack(\"Standard\");\nuserPlans.pushBack(\"Sales\");\nString first = userPlans.first();\nprintLine(first); //prints Standard</code></pre>"
- uid: CRMScript.DataStructure.Array.fromJsonString(String)
  commentId: M:CRMScript.DataStructure.Array.fromJsonString(String)
  id: 'fromJsonString(String)'
  so.intellisense: Array.fromJsonString
  langs:
  - crmscript
  parent: CRMScript.DataStructure.Array
  name: fromJsonString(String)
  nameWithType: Array.fromJsonString(String)
  fullName: CRMScript.DataStructure.Array.fromJsonString(String)
  type: Method
  summary: "This function will append to the array the contents of the supplied JSON formatted string. Same functionality as fromXMLNode(XMLNode n), but it will parse the provided string directly without having to use parseJSON() yourself. Please note, this function will not clear the array, but rather append to it."
  syntax:
    content: Void {instance}.fromJsonString(String json)
  example:
  - "<pre><code>String[] strings;\nstrings.fromJsonString('[\"Alpha\", \"Beta\", \"Charlie\"]');</code></pre>"
- uid: CRMScript.DataStructure.Array.insert(Integer,{type})
  commentId: M:CRMScript.DataStructure.Array.insert(Integer,{type})
  id: 'insert(Integer, {type})'
  so.intellisense: Array.insert
  langs:
  - crmscript
  parent: CRMScript.DataStructure.Array
  name: insert
  nameWithType: Array.insert(Integer,{type})
  fullName: CRMScript.DataStructure.Array.insert(Integer,{type})
  type: Method
  summary: "Adds an element at the specified index."
  syntax:
    content: Void {instance}.insert(Integer index, {type} value)
  example:
  - "<pre><code>String[5] userPlans;\nuserPlans.pushBack(\"Enterprise\");\nuserPlans.pushBack(\"Standard\");\nuserPlans.insert(0, \"Marketing\");\nuserPlans.insert(1, \"Sales\");\nprintLine(userPlans.toJsonString());\n\n//prints [\"Marketing\",\"Sales\",\"Enterprise\",\"Standard\"]</code></pre>"
- uid: CRMScript.DataStructure.Array.last()
  commentId: M:CRMScript.DataStructure.Array.last()
  id: 'last()'
  so.intellisense: Array.last
  langs:
  - crmscript
  parent: CRMScript.DataStructure.Array
  name: last
  nameWithType: Array.last()
  fullName: CRMScript.DataStructure.Array.last()
  type: Method
  summary: "Returns the last array element, same as [length() -1]."
  syntax:
    content: "{type} {instance}.last()"
  example:
  - "<pre><code>String[] userPlans;\nuserPlans.pushBack(\"Standard\");\nuserPlans.pushBack(\"Sales\");\nString last = userPlans.last();\nprintLine(last);\n\n//prints Sales</code></pre>"
- uid: CRMScript.DataStructure.Array.length()
  commentId: M:CRMScript.DataStructure.Array.length()
  id: 'length()'
  so.intellisense: Array.length
  langs:
  - crmscript
  parent: CRMScript.DataStructure.Array
  name: length
  nameWithType: Array.length()
  fullName: CRMScript.DataStructure.Array.length()
  type: Method
  summary: "Returns the number of indexable elements."
  syntax:
    content: Integer {instance}.length()
  example:
  - "<pre><code>String[] userPlans;\nuserPlans.pushBack(\"Standard\");\nuserPlans.pushBack(\"Sales\");\nInteger arrLength = userPlans.length()\nprintLine(\"Array length: \" + userPlans.length().toString());\n//prints Array length: 2</code></pre>"
- uid: CRMScript.DataStructure.Array.popBack()
  commentId: M:CRMScript.DataStructure.Array.popBack()
  id: 'popBack()'
  so.intellisense: Array.popBack
  langs:
  - crmscript
  parent: CRMScript.DataStructure.Array
  name: popBack
  nameWithType: Array.popBack()
  fullName: CRMScript.DataStructure.Array.popBack()
  type: Method
  summary: "Removes and returns the last element from the array."
  syntax:
    content: "{type} {instance}.popBack()"
  example:
  - "<pre><code>String[4] userPlans;\nuserPlans[0] = \"Standard\";\nuserPlans[1] = \"Marketing\";\nuserPlans[2] = \"Sales\";\nuserPlans[3] = \"Service\";\nString plan = userPlans.popBack();\nprintLine(plan);\n\n//prints Service</code></pre>"
- uid: CRMScript.DataStructure.Array.popFront()
  commentId: M:CRMScript.DataStructure.Array.popFront()
  id: 'popFront()'
  so.intellisense: Array.popFront
  langs:
  - crmscript
  parent: CRMScript.DataStructure.Array
  name: popFront
  nameWithType: Array.popFront()
  fullName: CRMScript.DataStructure.Array.popFront()
  type: Method
  summary: "Removes and returns the first element in the array."
  syntax:
    content: "{type} {instance}.popFront()"
  example:
  - "<pre><code>String[4] userPlans;\nuserPlans[0] = \"Standard\";\nuserPlans[1] = \"Marketing\";\nuserPlans[2] = \"Sales\";\nuserPlans[3] = \"Service\";\nString plan = userPlans.popFront();\nprintLine(plan);\n\n//prints Standard</code></pre>"
- uid: CRMScript.DataStructure.Array.pushBack()
  commentId: M:CRMScript.DataStructure.Array.pushBack()
  id: 'pushBack()'
  so.intellisense: Array.pushBack
  langs:
  - crmscript
  parent: CRMScript.DataStructure.Array
  name: pushBack
  nameWithType: Array.pushBack()
  fullName: CRMScript.DataStructure.Array.pushBack()
  type: Method
  summary: "Appends an empty element to the end of the array."
  syntax:
    content: Void {instance}.pushBack()
  example:
  - "<pre><code>String[4] userPlans;\nuserPlans[0] = \"Standard\";\nuserPlans[1] = \"Marketing\";\nuserPlans[2] = \"Sales\";\nuserPlans[3] = \"Service\";\nuserPlans.pushBack();\nprintLine(userPlans.toJsonString());\n\n//prints [\"Standard\",\"Marketing\",\"Sales\",\"Service\",\"\"]</code></pre>"
- uid: CRMScript.DataStructure.Array.pushBack({type})
  commentId: M:CRMScript.DataStructure.Array.pushBack({type})
  id: 'pushBack({type})'
  so.intellisense: Array.pushBack
  langs:
  - crmscript
  parent: CRMScript.DataStructure.Array
  name: pushBack({type})
  nameWithType: Array.pushBack({type})
  fullName: CRMScript.DataStructure.Array.pushBack({type})
  type: Method
  summary: "Appends an element value to the end of the array."
  syntax:
    content: Void {instance}.pushBack({type} value)
  example:
  - "<pre><code>String[4] userPlans;\nuserPlans[0] = \"Standard\";\nuserPlans[1] = \"Marketing\";\nuserPlans[2] = \"Sales\";\nuserPlans[3] = \"Service\";\nuserPlans.pushBack(\"Enterprise\");\nprintLine(userPlans.toJsonString());\n\n//prints [\"Standard\",\"Marketing\",\"Sales\",\"Service\",\"Enterprise\"]</code></pre>"
- uid: CRMScript.DataStructure.Array.pushFront()
  commentId: M:CRMScript.DataStructure.Array.pushFront()
  id: 'pushFront()'
  so.intellisense: Array.pushFront
  langs:
  - crmscript
  parent: CRMScript.DataStructure.Array
  name: pushFront
  nameWithType: Array.pushFront()
  fullName: CRMScript.DataStructure.Array.pushFront()
  type: Method
  summary: "Adds an empty element of the correct type to the array."
  syntax:
    content: Void {instance}.pushFront()
  example:
  - "<pre><code>String[4] userPlans;\nuserPlans[0] = \"Standard\";\nuserPlans[1] = \"Marketing\";\nuserPlans[2] = \"Sales\";\nuserPlans[3] = \"Service\";\nuserPlans.pushFront();\nprintLine(userPlans.toJsonString());\n\n//prints [\"\",\"Standard\",\"Marketing\",\"Sales\",\"Service\"]</code></pre>"
- uid: CRMScript.DataStructure.Array.pushFront({type})
  commentId: M:CRMScript.DataStructure.Array.pushFront({type})
  id: 'pushFront({type})'
  so.intellisense: Array.pushFront
  langs:
  - crmscript
  parent: CRMScript.DataStructure.Array
  name: pushFront({type})
  nameWithType: Array.pushFront({type})
  fullName: CRMScript.DataStructure.Array.pushFront({type})
  type: Method
  summary: "Adds a value to the beginning of an array."
  syntax:
    content: Void {instance}.pushFront({type} value)
  example:
  - "<pre><code>String[4] userPlans;\nuserPlans[0] = \"Standard\";\nuserPlans[1] = \"Marketing\";\nuserPlans[2] = \"Sales\";\nuserPlans[3] = \"Service\";\nuserPlans.pushFront(\"Enterprise\");printLine(userPlans.buildString(\",\"));\n\n//prints Enterprise,Standard,Marketing,Sales,Service</code></pre>"
- uid: CRMScript.DataStructure.Array.sort()
  commentId: M:CRMScript.DataStructure.Array.sort()
  id: 'sort()'
  so.intellisense: Array.sort
  langs:
  - crmscript
  parent: CRMScript.DataStructure.Array
  name: sort
  nameWithType: Array.sort()
  fullName: CRMScript.DataStructure.Array.sort()
  type: Method
  summary: "This function will sort the array. It will only work on one-dimensional arrays. Arrays of basic types (Integer, String, Date, etc) will be sorted according to standard behavior. Arrays of complex types (SearchEngine, HTTP, etc) will not be sorted. Arrays of structs will be sorted if the struct has a function with the following signature: Boolean compare(sameStruct other)."
  syntax:
    content: Void {instance}.sort()
  example:
  - "<pre><code>Integer[] ints;\nints.pushBack(8);\nints.pushBack(2);\nints.pushBack(4);\nints.sort();\nprintLine(ints.buildString(\",\"));\n\n//prints 2,4,8</code></pre>"
- uid: CRMScript.DataStructure.Array.toJsonString()
  commentId: M:CRMScript.DataStructure.Array.toJsonString()
  id: 'toJsonString()'
  so.intellisense: Array.toJsonString
  langs:
  - crmscript
  parent: CRMScript.DataStructure.Array
  name: toJsonString
  nameWithType: Array.toJsonString()
  fullName: CRMScript.DataStructure.Array.toJsonString()
  type: Method
  summary: "Returns a JSON formatted string of the array's contents. Same functionality as toJson(JSONBuilder), but doesn't require a JSONbuilder."
  syntax:
    content: String {instance}.toJsonString()
  example:
  - "<pre><code>String[] strings;\nstrings.pushBack(\"Alpha\");\nstrings.pushBack(\"Beta\");\nstrings.pushBack(\"Charlie\");\n\nString json = strings.toJsonString();\n\n//prints [\"Alpha\",\"Beta\",\"Charlie\"]</code></pre>"
references:
- uid: CRMScript.DataStructure.Array
  commentId: T:CRMScript.DataStructure.Array
  isExternal: true
  name: Struct
  nameWithType: Struct
  fullName: CRMScript.DataStructure.Array
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String